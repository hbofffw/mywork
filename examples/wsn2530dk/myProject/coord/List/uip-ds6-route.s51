///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            03/Apr/2014  10:45:53 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\myWork\myWork\core\net\uip-ds6-route.c         /
//    Command line       =  D:\myWork\myWork\core\net\uip-ds6-route.c -D      /
//                          AUTOSTART_ENABLE -D PROJECT_CONF_H -lC            /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\coo /
//                          rd\List\ -lA D:\myWork\myWork\examples\wsn2530dk\ /
//                          myProject\coord\List\ --diag_suppress             /
//                          Pa050,Pa082,Pe550 --diag_warning Pe144 -o         /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\coo /
//                          rd\Obj\ -e --no_cse --no_unroll --no_inline       /
//                          --no_code_motion --no_tbaa --debug --core=plain   /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data --nr_virtual_regs  /
//                          16 --preinclude D:\myWork\myWork\examples\wsn2530 /
//                          dk\myProject\..\..\..\cpu\cc253x\cc253x.h -I      /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\..\ /
//                          ..\..\cpu\cc253x\ -I D:\myWork\myWork\examples\ws /
//                          n2530dk\myProject\..\..\..\platform\wsn2530dk\    /
//                          -I D:\myWork\myWork\examples\wsn2530dk\myProject\ /
//                          ..\..\..\core\ -I D:\myWork\myWork\examples\wsn25 /
//                          30dk\myProject\..\..\..\apps\ -I                  /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\    /
//                          -Ol                                               /
//    List file          =  D:\myWork\myWork\examples\wsn2530dk\myProject\coo /
//                          rd\List\uip-ds6-route.s51                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME `uip-ds6-route`

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_X
        EXTERN ?PUSH_XSTACK_I_FOUR
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        FUNCTION ??call_route_callback?relay,0203H
        FUNCTION ??rm_routelist?relay,0203H
        FUNCTION ??rm_routelist_callback?relay,0203H
        PUBLIC ??uip_ds6_defrt_add?relay
        FUNCTION ??uip_ds6_defrt_add?relay,0203H
        PUBLIC ??uip_ds6_defrt_choose?relay
        FUNCTION ??uip_ds6_defrt_choose?relay,0203H
        PUBLIC ??uip_ds6_defrt_lookup?relay
        FUNCTION ??uip_ds6_defrt_lookup?relay,0203H
        PUBLIC ??uip_ds6_defrt_periodic?relay
        FUNCTION ??uip_ds6_defrt_periodic?relay,0203H
        PUBLIC ??uip_ds6_defrt_rm?relay
        FUNCTION ??uip_ds6_defrt_rm?relay,0203H
        PUBLIC ??uip_ds6_notification_add?relay
        FUNCTION ??uip_ds6_notification_add?relay,0203H
        PUBLIC ??uip_ds6_notification_rm?relay
        FUNCTION ??uip_ds6_notification_rm?relay,0203H
        PUBLIC ??uip_ds6_route_add?relay
        FUNCTION ??uip_ds6_route_add?relay,0203H
        PUBLIC ??uip_ds6_route_head?relay
        FUNCTION ??uip_ds6_route_head?relay,0203H
        PUBLIC ??uip_ds6_route_init?relay
        FUNCTION ??uip_ds6_route_init?relay,0203H
        PUBLIC ??uip_ds6_route_lookup?relay
        FUNCTION ??uip_ds6_route_lookup?relay,0203H
        PUBLIC ??uip_ds6_route_next?relay
        FUNCTION ??uip_ds6_route_next?relay,0203H
        PUBLIC ??uip_ds6_route_nexthop?relay
        FUNCTION ??uip_ds6_route_nexthop?relay,0203H
        FUNCTION ??uip_ds6_route_nexthop_lladdr?relay,0203H
        PUBLIC ??uip_ds6_route_num_routes?relay
        FUNCTION ??uip_ds6_route_num_routes?relay,0203H
        PUBLIC ??uip_ds6_route_rm?relay
        FUNCTION ??uip_ds6_route_rm?relay,0203H
        PUBLIC ??uip_ds6_route_rm_by_nexthop?relay
        FUNCTION ??uip_ds6_route_rm_by_nexthop?relay,0203H
        FUNCTION call_route_callback,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 22, STACK
        FUNCTION rm_routelist,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION rm_routelist_callback,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC uip_ds6_defrt_add
        FUNCTION uip_ds6_defrt_add,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC uip_ds6_defrt_choose
        FUNCTION uip_ds6_defrt_choose,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC uip_ds6_defrt_lookup
        FUNCTION uip_ds6_defrt_lookup,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        PUBLIC uip_ds6_defrt_periodic
        FUNCTION uip_ds6_defrt_periodic,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC uip_ds6_defrt_rm
        FUNCTION uip_ds6_defrt_rm,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC uip_ds6_notification_add
        FUNCTION uip_ds6_notification_add,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC uip_ds6_notification_rm
        FUNCTION uip_ds6_notification_rm,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC uip_ds6_route_add
        FUNCTION uip_ds6_route_add,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC uip_ds6_route_head
        FUNCTION uip_ds6_route_head,021203H
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC uip_ds6_route_init
        FUNCTION uip_ds6_route_init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC uip_ds6_route_lookup
        FUNCTION uip_ds6_route_lookup,021203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 17, STACK
        PUBLIC uip_ds6_route_next
        FUNCTION uip_ds6_route_next,021203H
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC uip_ds6_route_nexthop
        FUNCTION uip_ds6_route_nexthop,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        FUNCTION uip_ds6_route_nexthop_lladdr,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC uip_ds6_route_num_routes
        FUNCTION uip_ds6_route_num_routes,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC uip_ds6_route_rm
        FUNCTION uip_ds6_route_rm,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC uip_ds6_route_rm_by_nexthop
        FUNCTION uip_ds6_route_rm_by_nexthop,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
list_add            SYMBOL "list_add"
??list_add?relay    SYMBOL "?relay", list_add
list_head           SYMBOL "list_head"
??list_head?relay   SYMBOL "?relay", list_head
list_init           SYMBOL "list_init"
??list_init?relay   SYMBOL "?relay", list_init
list_item_next      SYMBOL "list_item_next"
??list_item_next?relay SYMBOL "?relay", list_item_next
list_length         SYMBOL "list_length"
??list_length?relay SYMBOL "?relay", list_length
list_push           SYMBOL "list_push"
??list_push?relay   SYMBOL "?relay", list_push
list_remove         SYMBOL "list_remove"
??list_remove?relay SYMBOL "?relay", list_remove
memb_alloc          SYMBOL "memb_alloc"
??memb_alloc?relay  SYMBOL "?relay", memb_alloc
memb_free           SYMBOL "memb_free"
??memb_free?relay   SYMBOL "?relay", memb_free
memb_init           SYMBOL "memb_init"
??memb_init?relay   SYMBOL "?relay", memb_init
memcmp              SYMBOL "memcmp"
??memcmp?relay      SYMBOL "?relay", memcmp
memcpy              SYMBOL "memcpy"
??memcpy?relay      SYMBOL "?relay", memcpy
memset              SYMBOL "memset"
??memset?relay      SYMBOL "?relay", memset
nbr_table_add_lladdr SYMBOL "nbr_table_add_lladdr"
??nbr_table_add_lladdr?relay SYMBOL "?relay", nbr_table_add_lladdr
nbr_table_get_from_lladdr SYMBOL "nbr_table_get_from_lladdr"
??nbr_table_get_from_lladdr?relay SYMBOL "?relay", nbr_table_get_from_lladdr
nbr_table_get_lladdr SYMBOL "nbr_table_get_lladdr"
??nbr_table_get_lladdr?relay SYMBOL "?relay", nbr_table_get_lladdr
nbr_table_head      SYMBOL "nbr_table_head"
??nbr_table_head?relay SYMBOL "?relay", nbr_table_head
nbr_table_next      SYMBOL "nbr_table_next"
??nbr_table_next?relay SYMBOL "?relay", nbr_table_next
nbr_table_register  SYMBOL "nbr_table_register"
??nbr_table_register?relay SYMBOL "?relay", nbr_table_register
nbr_table_remove    SYMBOL "nbr_table_remove"
??nbr_table_remove?relay SYMBOL "?relay", nbr_table_remove
stimer_expired      SYMBOL "stimer_expired"
??stimer_expired?relay SYMBOL "?relay", stimer_expired
stimer_set          SYMBOL "stimer_set"
??stimer_set?relay  SYMBOL "?relay", stimer_set
uip_ds6_nbr_ipaddr_from_lladdr SYMBOL "uip_ds6_nbr_ipaddr_from_lladdr"
??uip_ds6_nbr_ipaddr_from_lladdr?relay SYMBOL "?relay", uip_ds6_nbr_ipaddr_from_lladdr
uip_ds6_nbr_lladdr_from_ipaddr SYMBOL "uip_ds6_nbr_lladdr_from_ipaddr"
??uip_ds6_nbr_lladdr_from_ipaddr?relay SYMBOL "?relay", uip_ds6_nbr_lladdr_from_ipaddr
uip_ds6_nbr_lookup  SYMBOL "uip_ds6_nbr_lookup"
??uip_ds6_nbr_lookup?relay SYMBOL "?relay", uip_ds6_nbr_lookup
uip_ds6_defrt_add   SYMBOL "uip_ds6_defrt_add"
??uip_ds6_defrt_add?relay SYMBOL "?relay", uip_ds6_defrt_add
uip_ds6_defrt_choose SYMBOL "uip_ds6_defrt_choose"
??uip_ds6_defrt_choose?relay SYMBOL "?relay", uip_ds6_defrt_choose
uip_ds6_defrt_lookup SYMBOL "uip_ds6_defrt_lookup"
??uip_ds6_defrt_lookup?relay SYMBOL "?relay", uip_ds6_defrt_lookup
uip_ds6_defrt_periodic SYMBOL "uip_ds6_defrt_periodic"
??uip_ds6_defrt_periodic?relay SYMBOL "?relay", uip_ds6_defrt_periodic
uip_ds6_defrt_rm    SYMBOL "uip_ds6_defrt_rm"
??uip_ds6_defrt_rm?relay SYMBOL "?relay", uip_ds6_defrt_rm
uip_ds6_notification_add SYMBOL "uip_ds6_notification_add"
??uip_ds6_notification_add?relay SYMBOL "?relay", uip_ds6_notification_add
uip_ds6_notification_rm SYMBOL "uip_ds6_notification_rm"
??uip_ds6_notification_rm?relay SYMBOL "?relay", uip_ds6_notification_rm
uip_ds6_route_add   SYMBOL "uip_ds6_route_add"
??uip_ds6_route_add?relay SYMBOL "?relay", uip_ds6_route_add
uip_ds6_route_head  SYMBOL "uip_ds6_route_head"
??uip_ds6_route_head?relay SYMBOL "?relay", uip_ds6_route_head
uip_ds6_route_init  SYMBOL "uip_ds6_route_init"
??uip_ds6_route_init?relay SYMBOL "?relay", uip_ds6_route_init
uip_ds6_route_lookup SYMBOL "uip_ds6_route_lookup"
??uip_ds6_route_lookup?relay SYMBOL "?relay", uip_ds6_route_lookup
uip_ds6_route_next  SYMBOL "uip_ds6_route_next"
??uip_ds6_route_next?relay SYMBOL "?relay", uip_ds6_route_next
uip_ds6_route_nexthop SYMBOL "uip_ds6_route_nexthop"
??uip_ds6_route_nexthop?relay SYMBOL "?relay", uip_ds6_route_nexthop
uip_ds6_route_num_routes SYMBOL "uip_ds6_route_num_routes"
??uip_ds6_route_num_routes?relay SYMBOL "?relay", uip_ds6_route_num_routes
uip_ds6_route_rm    SYMBOL "uip_ds6_route_rm"
??uip_ds6_route_rm?relay SYMBOL "?relay", uip_ds6_route_rm
uip_ds6_route_rm_by_nexthop SYMBOL "uip_ds6_route_rm_by_nexthop"
??uip_ds6_route_rm_by_nexthop?relay SYMBOL "?relay", uip_ds6_route_rm_by_nexthop

        EXTERN ??list_add?relay
        FUNCTION ??list_add?relay,00H
        EXTERN ??list_head?relay
        FUNCTION ??list_head?relay,00H
        EXTERN ??list_init?relay
        FUNCTION ??list_init?relay,00H
        EXTERN ??list_item_next?relay
        FUNCTION ??list_item_next?relay,00H
        EXTERN ??list_length?relay
        FUNCTION ??list_length?relay,00H
        EXTERN ??list_push?relay
        FUNCTION ??list_push?relay,00H
        EXTERN ??list_remove?relay
        FUNCTION ??list_remove?relay,00H
        EXTERN ??memb_alloc?relay
        FUNCTION ??memb_alloc?relay,00H
        EXTERN ??memb_free?relay
        FUNCTION ??memb_free?relay,00H
        EXTERN ??memb_init?relay
        FUNCTION ??memb_init?relay,00H
        EXTERN ??memcmp?relay
        FUNCTION ??memcmp?relay,00H
        EXTERN ??memcpy?relay
        FUNCTION ??memcpy?relay,00H
        EXTERN ??memset?relay
        FUNCTION ??memset?relay,00H
        EXTERN ??nbr_table_add_lladdr?relay
        FUNCTION ??nbr_table_add_lladdr?relay,00H
        EXTERN ??nbr_table_get_from_lladdr?relay
        FUNCTION ??nbr_table_get_from_lladdr?relay,00H
        EXTERN ??nbr_table_get_lladdr?relay
        FUNCTION ??nbr_table_get_lladdr?relay,00H
        EXTERN ??nbr_table_head?relay
        FUNCTION ??nbr_table_head?relay,00H
        EXTERN ??nbr_table_next?relay
        FUNCTION ??nbr_table_next?relay,00H
        EXTERN ??nbr_table_register?relay
        FUNCTION ??nbr_table_register?relay,00H
        EXTERN ??nbr_table_remove?relay
        FUNCTION ??nbr_table_remove?relay,00H
        EXTERN ??stimer_expired?relay
        FUNCTION ??stimer_expired?relay,00H
        EXTERN ??stimer_set?relay
        FUNCTION ??stimer_set?relay,00H
        EXTERN ??uip_ds6_nbr_ipaddr_from_lladdr?relay
        FUNCTION ??uip_ds6_nbr_ipaddr_from_lladdr?relay,00H
        EXTERN ??uip_ds6_nbr_lladdr_from_ipaddr?relay
        FUNCTION ??uip_ds6_nbr_lladdr_from_ipaddr?relay,00H
        EXTERN ??uip_ds6_nbr_lookup?relay
        FUNCTION ??uip_ds6_nbr_lookup?relay,00H
        EXTERN list_add
        FUNCTION list_add,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN list_head
        FUNCTION list_head,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN list_init
        FUNCTION list_init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN list_item_next
        FUNCTION list_item_next,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN list_length
        FUNCTION list_length,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN list_push
        FUNCTION list_push,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN list_remove
        FUNCTION list_remove,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memb_alloc
        FUNCTION memb_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memb_free
        FUNCTION memb_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memb_init
        FUNCTION memb_init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memcmp
        FUNCTION memcmp,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memcpy
        FUNCTION memcpy,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memset
        FUNCTION memset,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nbr_table_add_lladdr
        FUNCTION nbr_table_add_lladdr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nbr_table_get_from_lladdr
        FUNCTION nbr_table_get_from_lladdr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nbr_table_get_lladdr
        FUNCTION nbr_table_get_lladdr,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nbr_table_head
        FUNCTION nbr_table_head,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nbr_table_next
        FUNCTION nbr_table_next,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nbr_table_register
        FUNCTION nbr_table_register,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nbr_table_remove
        FUNCTION nbr_table_remove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN stimer_expired
        FUNCTION stimer_expired,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN stimer_set
        FUNCTION stimer_set,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN uip_ds6_nbr_ipaddr_from_lladdr
        FUNCTION uip_ds6_nbr_ipaddr_from_lladdr,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN uip_ds6_nbr_lladdr_from_ipaddr
        FUNCTION uip_ds6_nbr_lladdr_from_ipaddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN uip_ds6_nbr_lookup
        FUNCTION uip_ds6_nbr_lookup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\myWork\myWork\core\net\uip-ds6-route.c
//    1 /*
//    2  * Copyright (c) 2012, Thingsquare, http://www.thingsquare.com/.
//    3  * All rights reserved.
//    4  *
//    5  * Redistribution and use in source and binary forms, with or without
//    6  * modification, are permitted provided that the following conditions
//    7  * are met:
//    8  * 1. Redistributions of source code must retain the above copyright
//    9  *    notice, this list of conditions and the following disclaimer.
//   10  * 2. Redistributions in binary form must reproduce the above copyright
//   11  *    notice, this list of conditions and the following disclaimer in the
//   12  *    documentation and/or other materials provided with the distribution.
//   13  *
//   14  * 3. Neither the name of the copyright holder nor the names of its
//   15  *    contributors may be used to endorse or promote products derived
//   16  *    from this software without specific prior written permission.
//   17  *
//   18  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//   19  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//   20  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
//   21  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
//   22  * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
//   23  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//   24  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
//   25  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//   26  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
//   27  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
//   28  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
//   29  * OF THE POSSIBILITY OF SUCH DAMAGE.
//   30  *
//   31  */
//   32 #include "net/uip-ds6.h"
//   33 #include "net/uip.h"
//   34 
//   35 #include "lib/list.h"
//   36 #include "lib/memb.h"
//   37 #include "net/nbr-table.h"
//   38 
//   39 #if UIP_CONF_IPV6
//   40 
//   41 #include <string.h>
//   42 
//   43 /* The nbr_routes holds a neighbor table to be able to maintain
//   44    information about what routes go through what neighbor. This
//   45    neighbor table is registered with the central nbr-table repository
//   46    so that it will be maintained along with the rest of the neighbor
//   47    tables in the system. */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   48 NBR_TABLE(struct uip_ds6_route_neighbor_routes, nbr_routes);
_nbr_routes_mem:
        DS 16
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
// static nbr_table_t nbr_routes_struct
nbr_routes_struct:
        DATA8
        DS 8
        REQUIRE `?<Initializer for nbr_routes_struct>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
// static nbr_table_t *__xdata nbr_routes
nbr_routes:
        DATA16
        DS 2
        REQUIRE `?<Initializer for nbr_routes>`
        REQUIRE __INIT_XDATA_I
//   49 
//   50 /* Each route is repressented by a uip_ds6_route_t structure and
//   51    memory for each route is allocated from the routememb memory
//   52    block. These routes are maintained on lists of route entries that
//   53    are attached to each neighbor, via the nbr_routes neighbor
//   54    table. */

        RSEG XDATA_I:XDATA:NOROOT(0)
//   55 MEMB(routememb, uip_ds6_route_t, UIP_DS6_ROUTE_NB);
routememb:
        DATA8
        DS 8
        REQUIRE `?<Initializer for routememb>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
// static char routememb_memb_count[4]
routememb_memb_count:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
// static uip_ds6_route_t routememb_memb_mem[4]
routememb_memb_mem:
        DS 116
        REQUIRE __INIT_XDATA_Z
//   56 
//   57 /* Default routes are held on the defaultrouterlist and their
//   58    structures are allocated from the defaultroutermemb memory block.*/

        RSEG XDATA_I:XDATA:NOROOT(0)
//   59 LIST(defaultrouterlist);
defaultrouterlist:
        DATA16
        DS 2
        REQUIRE `?<Initializer for defaultrouterlist>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
// static void *__xdata defaultrouterlist_list
defaultrouterlist_list:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//   60 MEMB(defaultroutermemb, uip_ds6_defrt_t, UIP_DS6_DEFRT_NB);
defaultroutermemb:
        DATA8
        DS 8
        REQUIRE `?<Initializer for defaultroutermemb>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
// static char defaultroutermemb_memb_count[2]
defaultroutermemb_memb_count:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
// static uip_ds6_defrt_t defaultroutermemb_memb_mem[2]
defaultroutermemb_memb_mem:
        DS 54
        REQUIRE __INIT_XDATA_Z
//   61 
//   62 #if UIP_DS6_NOTIFICATIONS

        RSEG XDATA_I:XDATA:NOROOT(0)
//   63 LIST(notificationlist);
notificationlist:
        DATA16
        DS 2
        REQUIRE `?<Initializer for notificationlist>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
// static void *__xdata notificationlist_list
notificationlist_list:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   64 #endif
//   65 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   66 static int num_routes = 0;
num_routes:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   67 
//   68 #undef DEBUG
//   69 #define DEBUG DEBUG_NONE
//   70 #include "net/uip-debug.h"
//   71 
//   72 static void rm_routelist_callback(nbr_table_item_t *ptr);
//   73 /*---------------------------------------------------------------------------*/
//   74 #if DEBUG != DEBUG_NONE
//   75 static void
//   76 assert_nbr_routes_list_sane(void)
//   77 {
//   78   uip_ds6_route_t *r;
//   79   int count;
//   80 
//   81   /* Check if the route list has an infinite loop. */
//   82   for(r = uip_ds6_route_head(),
//   83         count = 0;
//   84       r != NULL &&
//   85         count < UIP_DS6_ROUTE_NB;
//   86       r = uip_ds6_route_next(r),
//   87         count++);
//   88 
//   89   if(count >= UIP_DS6_ROUTE_NB) {
//   90     printf("uip-ds6-route.c: assert_nbr_routes_list_sane route list is in infinite loop\n");
//   91   }
//   92 
//   93   /* Make sure that the route list has as many entries as the
//   94      num_routes vairable. */
//   95   if(count < num_routes) {
//   96     printf("uip-ds6-route.c: assert_nbr_routes_list_sane too few entries on route list: should be %d, is %d, max %d\n",
//   97            num_routes, count, UIP_CONF_MAX_ROUTES);
//   98   }
//   99 }
//  100 #endif /* DEBUG != DEBUG_NONE */
//  101 /*---------------------------------------------------------------------------*/
//  102 #if UIP_DS6_NOTIFICATIONS

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  103 static void
//  104 call_route_callback(int event, uip_ipaddr_t *route,
call_route_callback:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function call_route_callback
        CODE
//  105 		    uip_ipaddr_t *nexthop)
//  106 {
        FUNCALL call_route_callback, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL call_route_callback, list_item_next
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL call_route_callback, list_length
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
//  107   int num;
//  108   struct uip_ds6_notification *n;
//  109   for(n = list_head(notificationlist);
        ; Setup parameters for call to function list_head
        MOV     DPTR,#notificationlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R6,?V0 + 4
        MOV     R7,?V0 + 5
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        SJMP    ??call_route_callback_0
//  110       n != NULL;
//  111       n = list_item_next(n)) {
//  112     if(event == UIP_DS6_NOTIFICATION_DEFRT_ADD ||
//  113        event == UIP_DS6_NOTIFICATION_DEFRT_RM) {
//  114       num = list_length(defaultrouterlist);
//  115     } else {
//  116       num = num_routes;
??call_route_callback_1:
        MOV     DPTR,#num_routes
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
//  117     }
//  118     n->callback(event, route, nexthop, num);
??call_route_callback_2:
        ; Setup parameters for indirect call
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        LCALL   ?CALL_IND
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        ; Setup parameters for call to function list_item_next
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??list_item_next?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R6,?V0 + 6
        MOV     R7,?V0 + 7
??call_route_callback_0:
        MOV     A,R6
        ORL     A,R7
        JZ      ??call_route_callback_3
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??call_route_callback_4
        MOV     A,#0x1
        XRL     A,?V0 + 0
        JNZ     ??call_route_callback_5
        MOV     A,#0x0
        XRL     A,?V0 + 1
??call_route_callback_5:
        JNZ     ??call_route_callback_1
??call_route_callback_4:
        ; Setup parameters for call to function list_length
        MOV     DPTR,#defaultrouterlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_length?relay
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 6,?V0 + 8
        MOV     ?V0 + 7,?V0 + 9
        SJMP    ??call_route_callback_2
//  119   }
//  120 }
??call_route_callback_3:
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock0
//  121 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  122 void
//  123 uip_ds6_notification_add(struct uip_ds6_notification *n,
uip_ds6_notification_add:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function uip_ds6_notification_add
        CODE
//  124 			 uip_ds6_notification_callback c)
//  125 {
        FUNCALL uip_ds6_notification_add, list_add
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  126   if(n != NULL && c != NULL) {
        MOV     A,R2
        ORL     A,R3
        JZ      ??uip_ds6_notification_add_0
        MOV     A,R4
        ORL     A,R5
        JZ      ??uip_ds6_notification_add_0
//  127     n->callback = c;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
//  128     list_add(notificationlist, n);
        ; Setup parameters for call to function list_add
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     DPTR,#notificationlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_add?relay
//  129   }
//  130 }
??uip_ds6_notification_add_0:
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock1
//  131 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  132 void
//  133 uip_ds6_notification_rm(struct uip_ds6_notification *n)
uip_ds6_notification_rm:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function uip_ds6_notification_rm
        CODE
//  134 {
        FUNCALL uip_ds6_notification_rm, list_remove
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  135   list_remove(notificationlist, n);
        ; Setup parameters for call to function list_remove
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     DPTR,#notificationlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_remove?relay
//  136 }
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock2
//  137 #endif
//  138 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  139 void
//  140 uip_ds6_route_init(void)
uip_ds6_route_init:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function uip_ds6_route_init
        CODE
//  141 {
        FUNCALL uip_ds6_route_init, memb_init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_init, nbr_table_register
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_init, memb_init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_init, list_init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_init, list_init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  142   memb_init(&routememb);
        ; Setup parameters for call to function memb_init
        MOV     R2,#routememb & 0xff
        MOV     R3,#(routememb >> 8) & 0xff
        LCALL   ??memb_init?relay
//  143   nbr_table_register(nbr_routes,
//  144                      (nbr_table_callback *)rm_routelist_callback);
        ; Setup parameters for call to function nbr_table_register
        MOV     R4,#??rm_routelist_callback?relay & 0xff
        MOV     R5,#(??rm_routelist_callback?relay >> 8) & 0xff
        MOV     DPTR,#nbr_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??nbr_table_register?relay
//  145 
//  146   memb_init(&defaultroutermemb);
        ; Setup parameters for call to function memb_init
        MOV     R2,#defaultroutermemb & 0xff
        MOV     R3,#(defaultroutermemb >> 8) & 0xff
        LCALL   ??memb_init?relay
//  147   list_init(defaultrouterlist);
        ; Setup parameters for call to function list_init
        MOV     DPTR,#defaultrouterlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_init?relay
//  148 
//  149 #if UIP_DS6_NOTIFICATIONS
//  150   list_init(notificationlist);
        ; Setup parameters for call to function list_init
        MOV     DPTR,#notificationlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_init?relay
//  151 #endif
//  152 }
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock3
//  153 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  154 static uip_lladdr_t *
//  155 uip_ds6_route_nexthop_lladdr(uip_ds6_route_t *route)
uip_ds6_route_nexthop_lladdr:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function uip_ds6_route_nexthop_lladdr
        CODE
//  156 {
        FUNCALL uip_ds6_route_nexthop_lladdr, nbr_table_get_lladdr
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  157   if(route != NULL) {
        MOV     A,R2
        ORL     A,R3
        JZ      ??uip_ds6_route_nexthop_lladdr_0
//  158     return (uip_lladdr_t *)nbr_table_get_lladdr(nbr_routes, route->routes);
        ; Setup parameters for call to function nbr_table_get_lladdr
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     DPTR,#nbr_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??nbr_table_get_lladdr?relay
        SJMP    ??uip_ds6_route_nexthop_lladdr_1
//  159   } else {
//  160     return NULL;
??uip_ds6_route_nexthop_lladdr_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??uip_ds6_route_nexthop_lladdr_1:
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock4
//  161   }
//  162 }
//  163 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  164 uip_ipaddr_t *
//  165 uip_ds6_route_nexthop(uip_ds6_route_t *route)
uip_ds6_route_nexthop:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function uip_ds6_route_nexthop
        CODE
//  166 {
        FUNCALL uip_ds6_route_nexthop, uip_ds6_route_nexthop_lladdr
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_nexthop, uip_ds6_nbr_ipaddr_from_lladdr
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  167   if(route != NULL) {
        MOV     A,R2
        ORL     A,R3
        JZ      ??uip_ds6_route_nexthop_0
//  168     return uip_ds6_nbr_ipaddr_from_lladdr(uip_ds6_route_nexthop_lladdr(route));
        ; Setup parameters for call to function uip_ds6_nbr_ipaddr_from_lladdr
        ; Setup parameters for call to function uip_ds6_route_nexthop_lladdr
        LCALL   ??uip_ds6_route_nexthop_lladdr?relay
        LCALL   ??uip_ds6_nbr_ipaddr_from_lladdr?relay
        SJMP    ??uip_ds6_route_nexthop_1
//  169   } else {
//  170     return NULL;
??uip_ds6_route_nexthop_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??uip_ds6_route_nexthop_1:
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock5
//  171   }
//  172 }
//  173 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  174 uip_ds6_route_t *
//  175 uip_ds6_route_head(void)
uip_ds6_route_head:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function uip_ds6_route_head
        CODE
//  176 {
        FUNCALL uip_ds6_route_head, nbr_table_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_head, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_head, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
//  177   struct uip_ds6_route_neighbor_routes *routes;
//  178 
//  179   routes = (struct uip_ds6_route_neighbor_routes *)nbr_table_head(nbr_routes);
        ; Setup parameters for call to function nbr_table_head
        MOV     DPTR,#nbr_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??nbr_table_head?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
//  180   if(routes != NULL) {
        MOV     A,R6
        ORL     A,R7
        JZ      ??uip_ds6_route_head_0
//  181     if(list_head(routes->route_list) == NULL) {
        ; Setup parameters for call to function list_head
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     ?V0 + 0,?V0 + 2
        MOV     ?V0 + 1,?V0 + 3
//  182       PRINTF("uip_ds6_route_head lead_head(nbr_route_list) is NULL\n");
//  183     }
//  184     return list_head(routes->route_list);
        ; Setup parameters for call to function list_head
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        SJMP    ??uip_ds6_route_head_1
//  185   } else {
//  186     return NULL;
??uip_ds6_route_head_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??uip_ds6_route_head_1:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock6
//  187   }
//  188 }
//  189 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  190 uip_ds6_route_t *
//  191 uip_ds6_route_next(uip_ds6_route_t *r)
uip_ds6_route_next:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function uip_ds6_route_next
        CODE
//  192 {
        FUNCALL uip_ds6_route_next, list_item_next
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_next, nbr_table_next
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_next, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  193   if(r != NULL) {
        MOV     A,R6
        ORL     A,R7
        JZ      ??uip_ds6_route_next_0
//  194     uip_ds6_route_t *n = list_item_next(r);
        ; Setup parameters for call to function list_item_next
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??list_item_next?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
//  195     if(n != NULL) {
        MOV     A,R2
        ORL     A,R3
        JNZ     ??uip_ds6_route_next_1
//  196       return n;
//  197     } else {
//  198       struct uip_ds6_route_neighbor_routes *routes;
//  199       routes = (struct uip_ds6_route_neighbor_routes *)
//  200         nbr_table_next(nbr_routes, r->routes);
        ; Setup parameters for call to function nbr_table_next
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     DPTR,#nbr_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??nbr_table_next?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
//  201       if(routes != NULL) {
        MOV     A,DPL
        ORL     A,DPH
        JZ      ??uip_ds6_route_next_0
//  202         return list_head(routes->route_list);
        ; Setup parameters for call to function list_head
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        SJMP    ??uip_ds6_route_next_1
//  203       }
//  204     }
//  205   }
//  206 
//  207   return NULL;
??uip_ds6_route_next_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??uip_ds6_route_next_1:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock7
//  208 }
//  209 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  210 int
//  211 uip_ds6_route_num_routes(void)
uip_ds6_route_num_routes:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function uip_ds6_route_num_routes
        CODE
//  212 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  213   return num_routes;
        MOV     DPTR,#num_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock8
//  214 }
//  215 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  216 uip_ds6_route_t *
//  217 uip_ds6_route_lookup(uip_ipaddr_t *addr)
uip_ds6_route_lookup:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function uip_ds6_route_lookup
        CODE
//  218 {
        FUNCALL uip_ds6_route_lookup, uip_ds6_route_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_lookup, memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_lookup, uip_ds6_route_next
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  219   uip_ds6_route_t *r;
//  220   uip_ds6_route_t *found_route;
//  221   uint8_t longestmatch;
//  222 
//  223   PRINTF("uip-ds6-route: Looking up route for ");
//  224   PRINT6ADDR(addr);
//  225   PRINTF("\n");
//  226 
//  227 
//  228   found_route = NULL;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
//  229   longestmatch = 0;
        MOV     ?V0 + 6,#0x0
//  230   for(r = uip_ds6_route_head();
        ; Setup parameters for call to function uip_ds6_route_head
        LCALL   ??uip_ds6_route_head?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R6,?V0 + 4
        MOV     R7,?V0 + 5
        SJMP    ??uip_ds6_route_lookup_0
//  231       r != NULL;
//  232       r = uip_ds6_route_next(r)) {
//  233     if(r->length >= longestmatch &&
//  234        uip_ipaddr_prefixcmp(addr, &r->ipaddr, r->length)) {
??uip_ds6_route_lookup_1:
        MOV     A,R6
        ADD     A,#0x1c
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V0 + 6
        JC      ??uip_ds6_route_lookup_2
        ; Setup parameters for call to function memcmp
        MOV     A,R6
        ADD     A,#0x1c
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        RRC     A
        RRC     A
        RRC     A
        ANL     A,#0x1f
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R6
        ADD     A,#0x4
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??memcmp?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JNZ     ??uip_ds6_route_lookup_2
//  235       longestmatch = r->length;
        MOV     A,R6
        ADD     A,#0x1c
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
//  236       found_route = r;
        MOV     ?V0 + 2,R6
        MOV     ?V0 + 3,R7
//  237     }
//  238   }
??uip_ds6_route_lookup_2:
        ; Setup parameters for call to function uip_ds6_route_next
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??uip_ds6_route_next?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R6,?V0 + 4
        MOV     R7,?V0 + 5
??uip_ds6_route_lookup_0:
        MOV     A,R6
        ORL     A,R7
        JNZ     ??uip_ds6_route_lookup_1
//  239 
//  240   if(found_route != NULL) {
//  241     PRINTF("uip-ds6-route: Found route: ");
//  242     PRINT6ADDR(addr);
//  243     PRINTF(" via ");
//  244     PRINT6ADDR(uip_ds6_route_nexthop(found_route));
//  245     PRINTF("\n");
//  246   } else {
//  247     PRINTF("uip-ds6-route: No route found\n");
//  248   }
//  249 
//  250   return found_route;
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock9
//  251 }
//  252 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  253 uip_ds6_route_t *
//  254 uip_ds6_route_add(uip_ipaddr_t *ipaddr, uint8_t length,
uip_ds6_route_add:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function uip_ds6_route_add
        CODE
//  255 		  uip_ipaddr_t *nexthop)
//  256 {
        FUNCALL uip_ds6_route_add, uip_ds6_nbr_lladdr_from_ipaddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_add, uip_ds6_route_lookup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_add, nbr_table_get_from_lladdr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_add, nbr_table_add_lladdr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_add, list_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_add, memb_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_add, list_add
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_add, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_add, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_add, call_route_callback
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     ?V0 + 6,R1
        MOV     ?V0 + 8,R4
        MOV     ?V0 + 9,R5
//  257   uip_ds6_route_t *r;
//  258 
//  259 #if DEBUG != DEBUG_NONE
//  260   assert_nbr_routes_list_sane();
//  261 #endif /* DEBUG != DEBUG_NONE */
//  262 
//  263   /* Get link-layer address of next hop, make sure it is in neighbor table */
//  264   uip_lladdr_t *nexthop_lladdr = uip_ds6_nbr_lladdr_from_ipaddr(nexthop);
        ; Setup parameters for call to function uip_ds6_nbr_lladdr_from_ipaddr
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        LCALL   ??uip_ds6_nbr_lladdr_from_ipaddr?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
//  265   if(nexthop_lladdr == NULL) {
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JNZ     ??uip_ds6_route_add_0
//  266     PRINTF("uip_ds6_route_add: neighbor link-local address unknown ");
//  267     PRINT6ADDR(ipaddr);
//  268     PRINTF("\n");
//  269     return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??uip_ds6_route_add_1 & 0xFFFF
//  270   }
//  271 
//  272   /* First make sure that we don't add a route twice. If we find an
//  273      existing route for our destination, we'll just update the old
//  274      one. */
//  275   r = uip_ds6_route_lookup(ipaddr);
??uip_ds6_route_add_0:
        ; Setup parameters for call to function uip_ds6_route_lookup
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??uip_ds6_route_lookup?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
//  276   if(r != NULL) {
        MOV     A,R6
        ORL     A,R7
        JZ      $+5
        LJMP    ??uip_ds6_route_add_2 & 0xFFFF
//  277     PRINTF("uip_ds6_route_add: old route already found, updating this one instead: ");
//  278     PRINT6ADDR(ipaddr);
//  279     PRINTF("\n");
//  280   } else {
//  281     struct uip_ds6_route_neighbor_routes *routes;
//  282     /* If there is no routing entry, create one */
//  283 
//  284     /* Every neighbor on our neighbor table holds a struct
//  285        uip_ds6_route_neighbor_routes which holds a list of routes that
//  286        go through the neighbor. We add our route entry to this list.
//  287 
//  288        We first check to see if we already have this neighbor in our
//  289        nbr_route table. If so, the neighbor already has a route entry
//  290        list.
//  291     */
//  292     routes = nbr_table_get_from_lladdr(nbr_routes,
//  293                                        (rimeaddr_t *)nexthop_lladdr);
        ; Setup parameters for call to function nbr_table_get_from_lladdr
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     DPTR,#nbr_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??nbr_table_get_from_lladdr?relay
        MOV     ?V0 + 10,R2
        MOV     ?V0 + 11,R3
        MOV     ?V0 + 0,?V0 + 10
        MOV     ?V0 + 1,?V0 + 11
//  294 
//  295     if(routes == NULL) {
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??uip_ds6_route_add_3
//  296       /* If the neighbor did not have an entry in our neighbor table,
//  297          we create one. The nbr_table_add_lladdr() function returns a
//  298          pointer to a pointer that we may use for our own purposes. We
//  299          initialize this pointer with the list of routing entries that
//  300          are attached to this neighbor. */
//  301       routes = nbr_table_add_lladdr(nbr_routes,
//  302                                     (rimeaddr_t *)nexthop_lladdr);
        ; Setup parameters for call to function nbr_table_add_lladdr
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     DPTR,#nbr_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??nbr_table_add_lladdr?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
//  303       if(routes == NULL) {
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??uip_ds6_route_add_4
//  304         PRINTF("uip_ds6_route_add: could not allocate a neighbor table entri for new route to ");
//  305         PRINT6ADDR(ipaddr);
//  306         PRINTF(", dropping it\n");
//  307         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??uip_ds6_route_add_1 & 0xFFFF
//  308       }
//  309       LIST_STRUCT_INIT(routes, route_list);
??uip_ds6_route_add_4:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOV     A,#0x0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x0
        MOVX    @DPTR,A
        ; Setup parameters for call to function list_init
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_init?relay
//  310     }
//  311 
//  312     /* Allocate a routing entry and populate it. */
//  313     r = memb_alloc(&routememb);
??uip_ds6_route_add_3:
        ; Setup parameters for call to function memb_alloc
        MOV     R2,#routememb & 0xff
        MOV     R3,#(routememb >> 8) & 0xff
        LCALL   ??memb_alloc?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R6,?V0 + 4
        MOV     R7,?V0 + 5
//  314 
//  315     if(r == NULL) {
        MOV     A,R6
        ORL     A,R7
        JNZ     ??uip_ds6_route_add_5
//  316       PRINTF("uip_ds6_route_add: could not allocate memory for new route to ");
//  317       PRINT6ADDR(ipaddr);
//  318       PRINTF(", dropping it\n");
//  319       return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??uip_ds6_route_add_1 & 0xFFFF
//  320     }
//  321 
//  322 
//  323     /* Add the route to this neighbor */
//  324     list_add(routes->route_list, r);
??uip_ds6_route_add_5:
        ; Setup parameters for call to function list_add
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_add?relay
//  325     num_routes++;
        MOV     DPTR,#num_routes
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOVX    @DPTR,A
//  326 
//  327     PRINTF("uip_ds6_route_add num %d\n", num_routes);
//  328     r->routes = routes;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
//  329   }
//  330 
//  331   uip_ipaddr_copy(&(r->ipaddr), ipaddr);
??uip_ds6_route_add_2:
        ; Setup parameters for call to function memcpy
        MOV     ?V0 + 0,#0x10
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     A,R6
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??memcpy?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
//  332   r->length = length;
        MOV     A,?V0 + 6
        MOV     A,R6
        ADD     A,#0x1c
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
//  333 
//  334 #ifdef UIP_DS6_ROUTE_STATE_TYPE
//  335   memset(&r->state, 0, sizeof(UIP_DS6_ROUTE_STATE_TYPE));
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#0x8
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     A,R6
        ADD     A,#0x14
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
//  336 #endif
//  337 
//  338   PRINTF("uip_ds6_route_add: adding route: ");
//  339   PRINT6ADDR(ipaddr);
//  340   PRINTF(" via ");
//  341   PRINT6ADDR(nexthop);
//  342   PRINTF("\n");
//  343   ANNOTATE("#L %u 1;blue\n", nexthop->u8[sizeof(uip_ipaddr_t) - 1]);
//  344 
//  345 #if UIP_DS6_NOTIFICATIONS
//  346   call_route_callback(UIP_DS6_NOTIFICATION_ROUTE_ADD, ipaddr, nexthop);
        ; Setup parameters for call to function call_route_callback
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   ??call_route_callback?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
//  347 #endif
//  348 
//  349 #if DEBUG != DEBUG_NONE
//  350   assert_nbr_routes_list_sane();
//  351 #endif /* DEBUG != DEBUG_NONE */
//  352   return r;
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??uip_ds6_route_add_1:
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock10
//  353 }
//  354 
//  355 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  356 void
//  357 uip_ds6_route_rm(uip_ds6_route_t *route)
uip_ds6_route_rm:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI Function uip_ds6_route_rm
        CODE
//  358 {
        FUNCALL uip_ds6_route_rm, list_remove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_rm, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_rm, nbr_table_remove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_rm, memb_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_rm, uip_ds6_route_nexthop
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_rm, call_route_callback
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  359 #if DEBUG != DEBUG_NONE
//  360   assert_nbr_routes_list_sane();
//  361 #endif /* DEBUG != DEBUG_NONE */
//  362   if(route != NULL && route->routes != NULL) {
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??uip_ds6_route_rm_0 & 0xFFFF
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JNZ     $+5
        LJMP    ??uip_ds6_route_rm_0 & 0xFFFF
//  363 
//  364     PRINTF("uip_ds6_route_rm: removing route: ");
//  365     PRINT6ADDR(&route->ipaddr);
//  366     PRINTF("\n");
//  367 
//  368     list_remove(route->routes->route_list, route);
        ; Setup parameters for call to function list_remove
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_remove?relay
//  369     if(list_head(route->routes->route_list) == NULL) {
        ; Setup parameters for call to function list_head
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??uip_ds6_route_rm_1
//  370       /* If this was the only route using this neighbor, remove the
//  371          neibhor from the table */
//  372       PRINTF("uip_ds6_route_rm: removing neighbor too\n");
//  373       nbr_table_remove(nbr_routes, route->routes->route_list);
        ; Setup parameters for call to function nbr_table_remove
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     DPTR,#nbr_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??nbr_table_remove?relay
//  374     }
//  375     memb_free(&routememb, route);
??uip_ds6_route_rm_1:
        ; Setup parameters for call to function memb_free
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#routememb & 0xff
        MOV     R3,#(routememb >> 8) & 0xff
        LCALL   ??memb_free?relay
        MOV     A,R1
//  376 
//  377     num_routes--;
        MOV     DPTR,#num_routes
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOVX    @DPTR,A
//  378 
//  379     PRINTF("uip_ds6_route_rm num %d\n", num_routes);
//  380 
//  381 #if UIP_DS6_NOTIFICATIONS
//  382     call_route_callback(UIP_DS6_NOTIFICATION_ROUTE_RM,
//  383         &route->ipaddr, uip_ds6_route_nexthop(route));
        ; Setup parameters for call to function call_route_callback
        ; Setup parameters for call to function uip_ds6_route_nexthop
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??uip_ds6_route_nexthop?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        ADD     A,#0x4
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     R2,#0x3
        MOV     R3,#0x0
        LCALL   ??call_route_callback?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  384 #endif
//  385 #if 0 //(DEBUG & DEBUG_ANNOTATE) == DEBUG_ANNOTATE
//  386     /* we need to check if this was the last route towards "nexthop" */
//  387     /* if so - remove that link (annotation) */
//  388     uip_ds6_route_t *r;
//  389     for(r = uip_ds6_route_head();
//  390         r != NULL;
//  391         r = uip_ds6_route_next(r)) {
//  392       uip_ipaddr_t *nextr, *nextroute;
//  393       nextr = uip_ds6_route_nexthop(r);
//  394       nextroute = uip_ds6_route_nexthop(route);
//  395       if(nextr != NULL &&
//  396          nextroute != NULL &&
//  397          uip_ipaddr_cmp(nextr, nextroute)) {
//  398         /* we found another link using the specific nexthop, so keep the #L */
//  399         return;
//  400       }
//  401     }
//  402     ANNOTATE("#L %u 0\n", uip_ds6_route_nexthop(route)->u8[sizeof(uip_ipaddr_t) - 1]);
//  403 #endif
//  404   }
//  405 
//  406 #if DEBUG != DEBUG_NONE
//  407   assert_nbr_routes_list_sane();
//  408 #endif /* DEBUG != DEBUG_NONE */
//  409   return;
??uip_ds6_route_rm_0:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock11
//  410 }
//  411 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  412 static void
//  413 rm_routelist(struct uip_ds6_route_neighbor_routes *routes)
rm_routelist:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function rm_routelist
        CODE
//  414 {
        FUNCALL rm_routelist, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL rm_routelist, uip_ds6_route_rm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL rm_routelist, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL rm_routelist, nbr_table_remove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  415 #if DEBUG != DEBUG_NONE
//  416   assert_nbr_routes_list_sane();
//  417 #endif /* DEBUG != DEBUG_NONE */
//  418   PRINTF("uip_ds6_route_rm_routelist\n");
//  419   if(routes != NULL && routes->route_list != NULL) {
        MOV     A,R6
        ORL     A,R7
        JZ      ??rm_routelist_0
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??rm_routelist_0
//  420     uip_ds6_route_t *r;
//  421     r = list_head(routes->route_list);
        ; Setup parameters for call to function list_head
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        SJMP    ??rm_routelist_1
//  422     while(r != NULL) {
//  423       uip_ds6_route_rm(r);
??rm_routelist_2:
        ; Setup parameters for call to function uip_ds6_route_rm
        LCALL   ??uip_ds6_route_rm?relay
//  424       r = list_head(routes->route_list);
        ; Setup parameters for call to function list_head
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
//  425     }
??rm_routelist_1:
        MOV     A,R2
        ORL     A,R3
        JNZ     ??rm_routelist_2
//  426     nbr_table_remove(nbr_routes, routes);
        ; Setup parameters for call to function nbr_table_remove
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPTR,#nbr_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??nbr_table_remove?relay
//  427   }
//  428 #if DEBUG != DEBUG_NONE
//  429   assert_nbr_routes_list_sane();
//  430 #endif /* DEBUG != DEBUG_NONE */
//  431 }
??rm_routelist_0:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock12
//  432 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  433 static void
//  434 rm_routelist_callback(nbr_table_item_t *ptr)
rm_routelist_callback:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI Function rm_routelist_callback
        CODE
//  435 {
        FUNCALL rm_routelist_callback, rm_routelist
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  436   rm_routelist((struct uip_ds6_route_neighbor_routes *)ptr);
        ; Setup parameters for call to function rm_routelist
        LCALL   ??rm_routelist?relay
//  437 }
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock13
//  438 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  439 void
//  440 uip_ds6_route_rm_by_nexthop(uip_ipaddr_t *nexthop)
uip_ds6_route_rm_by_nexthop:
          CFI Block cfiBlock14 Using cfiCommon0
          CFI Function uip_ds6_route_rm_by_nexthop
        CODE
//  441 {
        FUNCALL uip_ds6_route_rm_by_nexthop, uip_ds6_nbr_lladdr_from_ipaddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_rm_by_nexthop, nbr_table_get_from_lladdr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_route_rm_by_nexthop, rm_routelist
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  442   /* Get routing entry list of this neighbor */
//  443   uip_lladdr_t *nexthop_lladdr;
//  444   struct uip_ds6_route_neighbor_routes *routes;
//  445 
//  446   nexthop_lladdr = uip_ds6_nbr_lladdr_from_ipaddr(nexthop);
        ; Setup parameters for call to function uip_ds6_nbr_lladdr_from_ipaddr
        LCALL   ??uip_ds6_nbr_lladdr_from_ipaddr?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
//  447   routes = nbr_table_get_from_lladdr(nbr_routes,
//  448                                      (rimeaddr_t *)nexthop_lladdr);
        ; Setup parameters for call to function nbr_table_get_from_lladdr
        MOV     DPTR,#nbr_routes
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??nbr_table_get_from_lladdr?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
//  449   rm_routelist(routes);
        ; Setup parameters for call to function rm_routelist
        LCALL   ??rm_routelist?relay
//  450 }
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock14
//  451 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  452 uip_ds6_defrt_t *
//  453 uip_ds6_defrt_add(uip_ipaddr_t *ipaddr, unsigned long interval)
uip_ds6_defrt_add:
          CFI Block cfiBlock15 Using cfiCommon0
          CFI Function uip_ds6_defrt_add
        CODE
//  454 {
        FUNCALL uip_ds6_defrt_add, uip_ds6_defrt_lookup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_add, memb_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_add, list_push
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_add, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_add, stimer_set
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_add, call_route_callback
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  455   uip_ds6_defrt_t *d;
//  456 
//  457 #if DEBUG != DEBUG_NONE
//  458   assert_nbr_routes_list_sane();
//  459 #endif /* DEBUG != DEBUG_NONE */
//  460 
//  461   PRINTF("uip_ds6_defrt_add\n");
//  462   d = uip_ds6_defrt_lookup(ipaddr);
        ; Setup parameters for call to function uip_ds6_defrt_lookup
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??uip_ds6_defrt_lookup?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
//  463   if(d == NULL) {
        MOV     A,R6
        ORL     A,R7
        JNZ     ??uip_ds6_defrt_add_0
//  464     d = memb_alloc(&defaultroutermemb);
        ; Setup parameters for call to function memb_alloc
        MOV     R2,#defaultroutermemb & 0xff
        MOV     R3,#(defaultroutermemb >> 8) & 0xff
        LCALL   ??memb_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
//  465     if(d == NULL) {
        MOV     A,R6
        ORL     A,R7
        JNZ     ??uip_ds6_defrt_add_1
//  466       PRINTF("uip_ds6_defrt_add: could not add default route to ");
//  467       PRINT6ADDR(ipaddr);
//  468       PRINTF(", out of memory\n");
//  469       return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??uip_ds6_defrt_add_2 & 0xFFFF
//  470     } else {
//  471       PRINTF("uip_ds6_defrt_add: adding default route to ");
//  472       PRINT6ADDR(ipaddr);
//  473       PRINTF("\n");
//  474     }
//  475 
//  476     list_push(defaultrouterlist, d);
??uip_ds6_defrt_add_1:
        ; Setup parameters for call to function list_push
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPTR,#defaultrouterlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_push?relay
//  477   }
//  478 
//  479   uip_ipaddr_copy(&d->ipaddr, ipaddr);
??uip_ds6_defrt_add_0:
        ; Setup parameters for call to function memcpy
        MOV     ?V0 + 2,#0x10
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??memcpy?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
//  480   if(interval != 0) {
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        ORL     A,?V0 + 6
        ORL     A,?V0 + 7
        JZ      ??uip_ds6_defrt_add_3
//  481     stimer_set(&d->lifetime, interval);
        ; Setup parameters for call to function stimer_set
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R6
        ADD     A,#0x12
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??stimer_set?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
//  482     d->isinfinite = 0;
        MOV     A,R6
        ADD     A,#0x1a
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOV     A,#0x0
        MOVX    @DPTR,A
        SJMP    ??uip_ds6_defrt_add_4
//  483   } else {
//  484     d->isinfinite = 1;
??uip_ds6_defrt_add_3:
        MOV     A,R6
        ADD     A,#0x1a
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOV     A,#0x1
        MOVX    @DPTR,A
//  485   }
//  486 
//  487   ANNOTATE("#L %u 1\n", ipaddr->u8[sizeof(uip_ipaddr_t) - 1]);
//  488 
//  489 #if UIP_DS6_NOTIFICATIONS
//  490   call_route_callback(UIP_DS6_NOTIFICATION_DEFRT_ADD, ipaddr, ipaddr);
??uip_ds6_defrt_add_4:
        ; Setup parameters for call to function call_route_callback
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   ??call_route_callback?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
//  491 #endif
//  492 
//  493 #if DEBUG != DEBUG_NONE
//  494   assert_nbr_routes_list_sane();
//  495 #endif /* DEBUG != DEBUG_NONE */
//  496 
//  497   return d;
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??uip_ds6_defrt_add_2:
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock15
//  498 }
//  499 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  500 void
//  501 uip_ds6_defrt_rm(uip_ds6_defrt_t *defrt)
uip_ds6_defrt_rm:
          CFI Block cfiBlock16 Using cfiCommon0
          CFI Function uip_ds6_defrt_rm
        CODE
//  502 {
        FUNCALL uip_ds6_defrt_rm, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_rm, list_item_next
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_rm, list_remove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_rm, memb_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_rm, call_route_callback
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  503   uip_ds6_defrt_t *d;
//  504 
//  505 #if DEBUG != DEBUG_NONE
//  506   assert_nbr_routes_list_sane();
//  507 #endif /* DEBUG != DEBUG_NONE */
//  508 
//  509   /* Make sure that the defrt is in the list before we remove it. */
//  510   for(d = list_head(defaultrouterlist);
        ; Setup parameters for call to function list_head
        MOV     DPTR,#defaultrouterlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        SJMP    ??uip_ds6_defrt_rm_0
//  511       d != NULL;
//  512       d = list_item_next(d)) {
??uip_ds6_defrt_rm_1:
        ; Setup parameters for call to function list_item_next
        LCALL   ??list_item_next?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
??uip_ds6_defrt_rm_0:
        MOV     A,R2
        ORL     A,R3
        JZ      ??uip_ds6_defrt_rm_2
//  513     if(d == defrt) {
        MOV     A,R6
        XRL     A,R2
        JNZ     ??uip_ds6_defrt_rm_3
        MOV     A,R7
        XRL     A,R3
??uip_ds6_defrt_rm_3:
        JNZ     ??uip_ds6_defrt_rm_1
//  514       PRINTF("Removing default route\n");
//  515       list_remove(defaultrouterlist, defrt);
        ; Setup parameters for call to function list_remove
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPTR,#defaultrouterlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_remove?relay
//  516       memb_free(&defaultroutermemb, defrt);
        ; Setup parameters for call to function memb_free
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#defaultroutermemb & 0xff
        MOV     R3,#(defaultroutermemb >> 8) & 0xff
        LCALL   ??memb_free?relay
        MOV     A,R1
//  517       ANNOTATE("#L %u 0\n", defrt->ipaddr.u8[sizeof(uip_ipaddr_t) - 1]);
//  518 #if UIP_DS6_NOTIFICATIONS
//  519       call_route_callback(UIP_DS6_NOTIFICATION_DEFRT_RM,
//  520 			  &defrt->ipaddr, &defrt->ipaddr);
        ; Setup parameters for call to function call_route_callback
        MOV     A,R6
        ADD     A,#0x2
        MOV     ?V0 + 0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     R2,#0x1
        MOV     R3,#0x0
        LCALL   ??call_route_callback?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  521 #endif
//  522       return;
//  523     }
//  524   }
//  525 #if DEBUG != DEBUG_NONE
//  526   assert_nbr_routes_list_sane();
//  527 #endif /* DEBUG != DEBUG_NONE */
//  528 
//  529 }
??uip_ds6_defrt_rm_2:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock16
//  530 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  531 uip_ds6_defrt_t *
//  532 uip_ds6_defrt_lookup(uip_ipaddr_t *ipaddr)
uip_ds6_defrt_lookup:
          CFI Block cfiBlock17 Using cfiCommon0
          CFI Function uip_ds6_defrt_lookup
        CODE
//  533 {
        FUNCALL uip_ds6_defrt_lookup, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_lookup, list_item_next
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_lookup, memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  534   uip_ds6_defrt_t *d;
//  535   for(d = list_head(defaultrouterlist);
        ; Setup parameters for call to function list_head
        MOV     DPTR,#defaultrouterlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        SJMP    ??uip_ds6_defrt_lookup_0
//  536       d != NULL;
//  537       d = list_item_next(d)) {
??uip_ds6_defrt_lookup_1:
        ; Setup parameters for call to function list_item_next
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??list_item_next?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
??uip_ds6_defrt_lookup_0:
        MOV     A,R6
        ORL     A,R7
        JZ      ??uip_ds6_defrt_lookup_2
//  538     if(uip_ipaddr_cmp(&d->ipaddr, ipaddr)) {
        ; Setup parameters for call to function memcmp
        MOV     ?V0 + 2,#0x10
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??memcmp?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JNZ     ??uip_ds6_defrt_lookup_1
//  539       return d;
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        SJMP    ??uip_ds6_defrt_lookup_3
//  540     }
//  541   }
//  542   return NULL;
??uip_ds6_defrt_lookup_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
??uip_ds6_defrt_lookup_3:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock17
//  543 }
//  544 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  545 uip_ipaddr_t *
//  546 uip_ds6_defrt_choose(void)
uip_ds6_defrt_choose:
          CFI Block cfiBlock18 Using cfiCommon0
          CFI Function uip_ds6_defrt_choose
        CODE
//  547 {
        FUNCALL uip_ds6_defrt_choose, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_choose, list_item_next
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_choose, uip_ds6_nbr_lookup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
//  548   uip_ds6_defrt_t *d;
//  549   uip_ds6_nbr_t *bestnbr;
//  550   uip_ipaddr_t *addr;
//  551 
//  552   addr = NULL;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
//  553   for(d = list_head(defaultrouterlist);
        ; Setup parameters for call to function list_head
        MOV     DPTR,#defaultrouterlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        SJMP    ??uip_ds6_defrt_choose_0
//  554       d != NULL;
//  555       d = list_item_next(d)) {
//  556     PRINTF("Defrt, IP address ");
//  557     PRINT6ADDR(&d->ipaddr);
//  558     PRINTF("\n");
//  559     bestnbr = uip_ds6_nbr_lookup(&d->ipaddr);
//  560     if(bestnbr != NULL && bestnbr->state != NBR_INCOMPLETE) {
//  561       PRINTF("Defrt found, IP address ");
//  562       PRINT6ADDR(&d->ipaddr);
//  563       PRINTF("\n");
//  564       return &d->ipaddr;
//  565     } else {
//  566       addr = &d->ipaddr;
??uip_ds6_defrt_choose_1:
        MOV     A,R6
        ADD     A,#0x2
        MOV     ?V0 + 0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
//  567       PRINTF("Defrt INCOMPLETE found, IP address ");
//  568       PRINT6ADDR(&d->ipaddr);
//  569       PRINTF("\n");
//  570     }
        ; Setup parameters for call to function list_item_next
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??list_item_next?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
??uip_ds6_defrt_choose_0:
        MOV     A,R6
        ORL     A,R7
        JZ      ??uip_ds6_defrt_choose_2
        ; Setup parameters for call to function uip_ds6_nbr_lookup
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??uip_ds6_nbr_lookup?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        ORL     A,R1
        JZ      ??uip_ds6_defrt_choose_1
        MOV     A,R0
        ADD     A,#0x22
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        JZ      ??uip_ds6_defrt_choose_1
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        SJMP    ??uip_ds6_defrt_choose_3
//  571   }
//  572   return addr;
??uip_ds6_defrt_choose_2:
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
??uip_ds6_defrt_choose_3:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock18
//  573 }
//  574 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  575 void
//  576 uip_ds6_defrt_periodic(void)
uip_ds6_defrt_periodic:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI Function uip_ds6_defrt_periodic
        CODE
//  577 {
        FUNCALL uip_ds6_defrt_periodic, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_periodic, uip_ds6_defrt_rm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_periodic, list_head
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_periodic, stimer_expired
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL uip_ds6_defrt_periodic, list_item_next
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  578   uip_ds6_defrt_t *d;
//  579   d = list_head(defaultrouterlist);
        ; Setup parameters for call to function list_head
        MOV     DPTR,#defaultrouterlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
        SJMP    ??uip_ds6_defrt_periodic_0
//  580   while(d != NULL) {
//  581     if(!d->isinfinite &&
//  582        stimer_expired(&d->lifetime)) {
//  583       PRINTF("uip_ds6_defrt_periodic: defrt lifetime expired\n");
//  584       uip_ds6_defrt_rm(d);
??uip_ds6_defrt_periodic_1:
        ; Setup parameters for call to function uip_ds6_defrt_rm
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??uip_ds6_defrt_rm?relay
//  585       d = list_head(defaultrouterlist);
        ; Setup parameters for call to function list_head
        MOV     DPTR,#defaultrouterlist
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??list_head?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
//  586     } else {
??uip_ds6_defrt_periodic_0:
        MOV     A,R6
        ORL     A,R7
        JZ      ??uip_ds6_defrt_periodic_2
        MOV     A,R6
        ADD     A,#0x1a
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??uip_ds6_defrt_periodic_3
        ; Setup parameters for call to function stimer_expired
        MOV     A,R6
        ADD     A,#0x12
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??stimer_expired?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??uip_ds6_defrt_periodic_1
//  587       d = list_item_next(d);
??uip_ds6_defrt_periodic_3:
        ; Setup parameters for call to function list_item_next
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??list_item_next?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
        SJMP    ??uip_ds6_defrt_periodic_0
//  588     }
//  589   }
//  590 }
??uip_ds6_defrt_periodic_2:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock19

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for nbr_routes_struct>`:
        DATA16
        DW 0
        DW 4
        DW 0H
        DW _nbr_routes_mem

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for nbr_routes>`:
        DATA16
        DW nbr_routes_struct

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for routememb>`:
        DATA16
        DW 29
        DW 4
        DW routememb_memb_count
        DW routememb_memb_mem

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for defaultrouterlist>`:
        DATA16
        DW defaultrouterlist_list

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for defaultroutermemb>`:
        DATA16
        DW 27
        DW 2
        DW defaultroutermemb_memb_count
        DW defaultroutermemb_memb_mem

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for notificationlist>`:
        DATA16
        DW notificationlist_list

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??call_route_callback?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    call_route_callback

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_notification_add?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_notification_add

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_notification_rm?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_notification_rm

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_init?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_nexthop_lladdr?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_nexthop_lladdr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_nexthop?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_nexthop

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_head?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_head

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_next?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_next

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_num_routes?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_num_routes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_lookup?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_lookup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_add?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_add

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_rm?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_rm

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rm_routelist?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    rm_routelist

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rm_routelist_callback?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    rm_routelist_callback

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_route_rm_by_nexthop?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_route_rm_by_nexthop

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_defrt_add?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_defrt_add

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_defrt_rm?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_defrt_rm

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_defrt_lookup?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_defrt_lookup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_defrt_choose?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_defrt_choose

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??uip_ds6_defrt_periodic?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uip_ds6_defrt_periodic

        END
//  591 /*---------------------------------------------------------------------------*/
//  592 
//  593 #endif /* UIP_CONF_IPV6 */
// 
// 2 060 bytes in segment BANKED_CODE
//   120 bytes in segment BANK_RELAYS
//    30 bytes in segment XDATA_I
//    30 bytes in segment XDATA_ID
//   198 bytes in segment XDATA_Z
// 
// 2 210 bytes of CODE  memory
//   228 bytes of XDATA memory
//
//Errors: none
//Warnings: none
