///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            03/Apr/2014  10:45:49 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\myWork\myWork\platform\wsn2530dk\dev\leds-arch /
//                          .c                                                /
//    Command line       =  D:\myWork\myWork\platform\wsn2530dk\dev\leds-arch /
//                          .c -D AUTOSTART_ENABLE -D PROJECT_CONF_H -lC      /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\coo /
//                          rd\List\ -lA D:\myWork\myWork\examples\wsn2530dk\ /
//                          myProject\coord\List\ --diag_suppress             /
//                          Pa050,Pa082,Pe550 --diag_warning Pe144 -o         /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\coo /
//                          rd\Obj\ -e --no_cse --no_unroll --no_inline       /
//                          --no_code_motion --no_tbaa --debug --core=plain   /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data --nr_virtual_regs  /
//                          16 --preinclude D:\myWork\myWork\examples\wsn2530 /
//                          dk\myProject\..\..\..\cpu\cc253x\cc253x.h -I      /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\..\ /
//                          ..\..\cpu\cc253x\ -I D:\myWork\myWork\examples\ws /
//                          n2530dk\myProject\..\..\..\platform\wsn2530dk\    /
//                          -I D:\myWork\myWork\examples\wsn2530dk\myProject\ /
//                          ..\..\..\core\ -I D:\myWork\myWork\examples\wsn25 /
//                          30dk\myProject\..\..\..\apps\ -I                  /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\    /
//                          -Ol                                               /
//    List file          =  D:\myWork\myWork\examples\wsn2530dk\myProject\coo /
//                          rd\List\leds-arch.s51                             /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME `leds-arch`

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET

        PUBLIC ??leds_arch_get?relay
        FUNCTION ??leds_arch_get?relay,0203H
        PUBLIC ??leds_arch_init?relay
        FUNCTION ??leds_arch_init?relay,0203H
        PUBLIC ??leds_arch_set?relay
        FUNCTION ??leds_arch_set?relay,0203H
        PUBWEAK P1DIR
        PUBWEAK P1SEL
        PUBWEAK _A_P1
        PUBLIC leds_arch_get
        FUNCTION leds_arch_get,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC leds_arch_init
        FUNCTION leds_arch_init,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC leds_arch_set
        FUNCTION leds_arch_set,0203H
        ARGFRAME XSTACK, 0, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
leds_arch_get       SYMBOL "leds_arch_get"
??leds_arch_get?relay SYMBOL "?relay", leds_arch_get
leds_arch_init      SYMBOL "leds_arch_init"
??leds_arch_init?relay SYMBOL "?relay", leds_arch_init
leds_arch_set       SYMBOL "leds_arch_set"
??leds_arch_set?relay SYMBOL "?relay", leds_arch_set


        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f4H
// unsigned char volatile __sfr P1SEL
P1SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0feH
// unsigned char volatile __sfr P1DIR
P1DIR:
        DATA8
        DS 1
// D:\myWork\myWork\platform\wsn2530dk\dev\leds-arch.c
//    1 /*
//    2  * Copyright (c) 2011, George Oikonomou - <oikonomou@users.sourceforge.net>
//    3  * All rights reserved.
//    4  *
//    5  * Redistribution and use in source and binary forms, with or without
//    6  * modification, are permitted provided that the following conditions
//    7  * are met:
//    8  * 1. Redistributions of source code must retain the above copyright
//    9  *    notice, this list of conditions and the following disclaimer.
//   10  * 2. Redistributions in binary form must reproduce the above copyright
//   11  *    notice, this list of conditions and the following disclaimer in the
//   12  *    documentation and/or other materials provided with the distribution.
//   13  * 3. Neither the name of the Institute nor the names of its contributors
//   14  *    may be used to endorse or promote products derived from this software
//   15  *    without specific prior written permission.
//   16  *
//   17  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
//   18  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
//   19  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
//   20  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
//   21  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
//   22  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
//   23  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//   24  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
//   25  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
//   26  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
//   27  * SUCH DAMAGE.
//   28  *
//   29  * This file is part of the Contiki operating system.
//   30  */
//   31 
//   32 /**
//   33  * \file
//   34  *         Platform-specific led driver for the TI SmartRF05 and WSN2530DK Eval. Board.
//   35  *
//   36  * \author
//   37  *         George Oikonomou - <oikonomou@users.sourceforge.net>
//   38  *         YoCiHou - <www.iotdev.net>
//   39  */
//   40 #include "contiki-conf.h"
//   41 #include "dev/leds.h"
//   42 #include "dev/leds-arch.h"
//   43 #include "cc253x.h"
//   44 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   45 void
//   46 leds_arch_init(void)
leds_arch_init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function leds_arch_init
        CODE
//   47 {
        ; Saved register size: 0
        ; Auto size: 0
//   48 #if MODELS_CONF_CC2531_USB_STICK
//   49   P1SEL &= ~LED1_MASK;
//   50   P1DIR |= LED1_MASK;
//   51   P0SEL &= ~LED2_MASK;
//   52   P0DIR |= LED2_MASK;
//   53 #elif MODEL_WSN2530
//   54   P1SEL &= ~(LED1_MASK | LED2_MASK);
        ANL     0xf4,#0xfc
//   55   P1DIR |= (LED1_MASK | LED2_MASK);
        ORL     0xfe,#0x3
//   56 #else
//   57   P1SEL &= ~(LED1_MASK | LED2_MASK | LED3_MASK);
//   58   P1DIR |= (LED1_MASK | LED2_MASK | LED3_MASK);
//   59 #endif
//   60 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock0
        REQUIRE P1SEL
        REQUIRE P1DIR
//   61 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   62 unsigned char
//   63 leds_arch_get(void)
leds_arch_get:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function leds_arch_get
        CODE
//   64 {
        ; Saved register size: 0
        ; Auto size: 0
//   65 #if MODELS_CONF_CC2531_USB_STICK
//   66   return (unsigned char)(LED1_PIN | ((LED2_PIN ^ 0x01) << 1));
//   67 #elif MODEL_WSN2530
//   68   return (unsigned char)(LED1_PIN | (LED2_PIN << 1));
        MOV     C,0x90.1
        CLR     A
        RLC     A
        CLR     C
        RLC     A
        MOV     R0,A
        MOV     C,0x90.0
        CLR     A
        RLC     A
        ORL     A,R0
        MOV     R1,A
        LJMP    ?BRET
          CFI EndBlock cfiBlock1
        REQUIRE _A_P1
//   69 #else
//   70   return (unsigned char)(LED1_PIN | (LED2_PIN << 1) | (LED3_PIN << 2));
//   71 #endif
//   72 }
//   73 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   74 void
//   75 leds_arch_set(unsigned char leds)
leds_arch_set:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function leds_arch_set
        CODE
//   76 {
        ; Saved register size: 0
        ; Auto size: 0
//   77   LED1_PIN = leds & 0x01;
        MOV     A,R1
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        MOV     R0,A
        MOV     A,R1
        MOV     C,0xE0 /* A   */.0
        MOV     0x90.0,C
//   78 #if MODELS_CONF_CC2531_USB_STICK
//   79   LED2_PIN = ((leds & 0x02) >> 1) ^ 0x01;
//   80 #elif MODEL_WSN2530
//   81   LED2_PIN = (leds & 0x02) >> 1;
        MOV     A,R1
        MOV     C,0xE0 /* A   */.1
        CLR     A
        RLC     A
        MOV     R2,A
        MOV     A,R1
        MOV     C,0xE0 /* A   */.1
        MOV     0x90.1,C
//   82 #else
//   83   LED2_PIN = (leds & 0x02) >> 1;
//   84   LED3_PIN = (leds & 0x04) >> 2;
//   85 #endif
//   86 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock2
        REQUIRE _A_P1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??leds_arch_init?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    leds_arch_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??leds_arch_get?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    leds_arch_get

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??leds_arch_set?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    leds_arch_set

        END
//   87 /*---------------------------------------------------------------------------*/
// 
// 50 bytes in segment BANKED_CODE
// 18 bytes in segment BANK_RELAYS
//  3 bytes in segment SFR_AN
// 
// 68 bytes of CODE memory
//  0 bytes of DATA memory (+ 3 bytes shared)
//
//Errors: none
//Warnings: none
