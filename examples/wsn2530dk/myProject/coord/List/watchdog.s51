///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            03/Apr/2014  10:45:55 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\myWork\myWork\cpu\cc253x\dev\watchdog.c        /
//    Command line       =  D:\myWork\myWork\cpu\cc253x\dev\watchdog.c -D     /
//                          AUTOSTART_ENABLE -D PROJECT_CONF_H -lC            /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\coo /
//                          rd\List\ -lA D:\myWork\myWork\examples\wsn2530dk\ /
//                          myProject\coord\List\ --diag_suppress             /
//                          Pa050,Pa082,Pe550 --diag_warning Pe144 -o         /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\coo /
//                          rd\Obj\ -e --no_cse --no_unroll --no_inline       /
//                          --no_code_motion --no_tbaa --debug --core=plain   /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data --nr_virtual_regs  /
//                          16 --preinclude D:\myWork\myWork\examples\wsn2530 /
//                          dk\myProject\..\..\..\cpu\cc253x\cc253x.h -I      /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\..\ /
//                          ..\..\cpu\cc253x\ -I D:\myWork\myWork\examples\ws /
//                          n2530dk\myProject\..\..\..\platform\wsn2530dk\    /
//                          -I D:\myWork\myWork\examples\wsn2530dk\myProject\ /
//                          ..\..\..\core\ -I D:\myWork\myWork\examples\wsn25 /
//                          30dk\myProject\..\..\..\apps\ -I                  /
//                          D:\myWork\myWork\examples\wsn2530dk\myProject\    /
//                          -Ol                                               /
//    List file          =  D:\myWork\myWork\examples\wsn2530dk\myProject\coo /
//                          rd\List\watchdog.s51                              /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME watchdog

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET

        PUBLIC ??watchdog_init?relay
        FUNCTION ??watchdog_init?relay,0203H
        PUBLIC ??watchdog_periodic?relay
        FUNCTION ??watchdog_periodic?relay,0203H
        PUBLIC ??watchdog_reboot?relay
        FUNCTION ??watchdog_reboot?relay,0203H
        PUBLIC ??watchdog_start?relay
        FUNCTION ??watchdog_start?relay,0203H
        PUBWEAK WDCTL
        PUBWEAK _A_IEN0
        PUBLIC watchdog_init
        FUNCTION watchdog_init,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC watchdog_periodic
        FUNCTION watchdog_periodic,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC watchdog_reboot
        FUNCTION watchdog_reboot,080203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC watchdog_start
        FUNCTION watchdog_start,0203H
        ARGFRAME XSTACK, 0, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
watchdog_init       SYMBOL "watchdog_init"
??watchdog_init?relay SYMBOL "?relay", watchdog_init
watchdog_periodic   SYMBOL "watchdog_periodic"
??watchdog_periodic?relay SYMBOL "?relay", watchdog_periodic
watchdog_reboot     SYMBOL "watchdog_reboot"
??watchdog_reboot?relay SYMBOL "?relay", watchdog_reboot
watchdog_start      SYMBOL "watchdog_start"
??watchdog_start?relay SYMBOL "?relay", watchdog_start


        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c9H
// unsigned char volatile __sfr WDCTL
WDCTL:
        DATA8
        DS 1
// D:\myWork\myWork\cpu\cc253x\dev\watchdog.c
//    1 /*
//    2  * Copyright (c) 2010, Loughborough University - Computer Science
//    3  * All rights reserved.
//    4  *
//    5  * Redistribution and use in source and binary forms, with or without
//    6  * modification, are permitted provided that the following conditions
//    7  * are met:
//    8  * 1. Redistributions of source code must retain the above copyright
//    9  *    notice, this list of conditions and the following disclaimer.
//   10  * 2. Redistributions in binary form must reproduce the above copyright
//   11  *    notice, this list of conditions and the following disclaimer in the
//   12  *    documentation and/or other materials provided with the distribution.
//   13  * 3. Neither the name of the Institute nor the names of its contributors
//   14  *    may be used to endorse or promote products derived from this software
//   15  *    without specific prior written permission.
//   16  *
//   17  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
//   18  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
//   19  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
//   20  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
//   21  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
//   22  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
//   23  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//   24  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
//   25  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
//   26  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
//   27  * SUCH DAMAGE.
//   28  *
//   29  * This file is part of the Contiki operating system.
//   30  */
//   31 
//   32 /**
//   33  * \file
//   34  *         Hardware-dependent functions for the cc253x watchdog.
//   35  *
//   36  *         This file contains an ISR and must reside in the HOME bank.
//   37  *
//   38  * \author
//   39  *         George Oikonomou - <oikonomou@users.sourceforge.net>
//   40  *         YoCiHou - < www.iotdev.net >
//   41  */
//   42 
//   43 #include "cc253x.h"
//   44 #include "sfr-bits.h"
//   45 #include "contiki-conf.h"
//   46 
//   47 #define WDT_TIMEOUT_MIN    (WDCTL_INT1 | WDCTL_INT0)
//   48 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   49 void
//   50 watchdog_init(void)
watchdog_init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function watchdog_init
        CODE
//   51 {
        ; Saved register size: 0
        ; Auto size: 0
//   52   WDCTL = 0; /* IDLE, Max Interval */
        MOV     0xc9,#0x0
//   53 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock0
        REQUIRE WDCTL
//   54 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   55 void
//   56 watchdog_start(void)
watchdog_start:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function watchdog_start
        CODE
//   57 {
        ; Saved register size: 0
        ; Auto size: 0
//   58   WDCTL |= WDCTL_MODE1; /* Start in Watchdog mode */
        ORL     0xc9,#0x8
//   59 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock1
        REQUIRE WDCTL
//   60 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   61 void
//   62 watchdog_periodic(void)
watchdog_periodic:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function watchdog_periodic
        CODE
//   63 {
        ; Saved register size: 0
        ; Auto size: 0
//   64   /* Write the 'clear' sequence while maintaining mode and interval setting */
//   65   WDCTL = (WDCTL & 0x0F) | WDCTL_CLR3 | WDCTL_CLR1;
        MOV     A,0xc9
        ANL     A,#0xf
        ORL     A,#0xa0
        MOV     0xc9,A
//   66   WDCTL = (WDCTL & 0x0F) | WDCTL_CLR2 | WDCTL_CLR0;
        MOV     A,0xc9
        ANL     A,#0xf
        ORL     A,#0x50
        MOV     0xc9,A
//   67 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock2
        REQUIRE WDCTL
//   68 /*---------------------------------------------------------------------------*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   69 void
//   70 watchdog_reboot(void)
watchdog_reboot:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function watchdog_reboot
        CODE
//   71 {
        ; Saved register size: 0
        ; Auto size: 0
//   72   WDCTL = WDT_TIMEOUT_MIN;
        MOV     0xc9,#0x3
//   73   /* Dis-acknowledge all interrupts while we wait for the dog to bark */
//   74   DISABLE_INTERRUPTS();
        CLR     0xa8.7
//   75 
//   76   WDCTL |= WDCTL_MODE1; /* Just in case it's not started... */
        ORL     0xc9,#0x8
//   77 
//   78   /* NOP till the dog barks... */
//   79   while(1) {
//   80     asm("nop");
??watchdog_reboot_0:
        nop
        SJMP    ??watchdog_reboot_0
          CFI EndBlock cfiBlock3
        REQUIRE WDCTL
        REQUIRE _A_IEN0
//   81   }
//   82 }

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??watchdog_init?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    watchdog_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??watchdog_start?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    watchdog_start

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??watchdog_periodic?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    watchdog_periodic

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??watchdog_reboot?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    watchdog_reboot

        END
// 
// 42 bytes in segment BANKED_CODE
// 24 bytes in segment BANK_RELAYS
//  2 bytes in segment SFR_AN
// 
// 66 bytes of CODE memory
//  0 bytes of DATA memory (+ 2 bytes shared)
//
//Errors: none
//Warnings: none
