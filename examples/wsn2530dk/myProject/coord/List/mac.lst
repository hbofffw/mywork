###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             03/Apr/2014  10:45:49 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  D:\myWork\myWork\core\net\mac\mac.c                #
#    Command line       =  D:\myWork\myWork\core\net\mac\mac.c -D             #
#                          AUTOSTART_ENABLE -D PROJECT_CONF_H -lC             #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\List\ -lA D:\myWork\myWork\examples\wsn2530dk\my #
#                          Project\coord\List\ --diag_suppress                #
#                          Pa050,Pa082,Pe550 --diag_warning Pe144 -o          #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\Obj\ -e --no_cse --no_unroll --no_inline         #
#                          --no_code_motion --no_tbaa --debug --core=plain    #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data --nr_virtual_regs    #
#                          16 --preinclude D:\myWork\myWork\examples\wsn2530d #
#                          k\myProject\..\..\..\cpu\cc253x\cc253x.h -I        #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\..\. #
#                          .\..\cpu\cc253x\ -I D:\myWork\myWork\examples\wsn2 #
#                          530dk\myProject\..\..\..\platform\wsn2530dk\ -I    #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\..\. #
#                          .\..\core\ -I D:\myWork\myWork\examples\wsn2530dk\ #
#                          myProject\..\..\..\apps\ -I                        #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\ -Ol #
#    List file          =  D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\List\mac.lst                                     #
#    Object file        =  D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\Obj\mac.r51                                      #
#                                                                             #
#                                                                             #
###############################################################################

D:\myWork\myWork\core\net\mac\mac.c
      1          /*
      2           * Copyright (c) 2010, Swedish Institute of Computer Science.
      3           * All rights reserved.
      4           *
      5           * Redistribution and use in source and binary forms, with or without
      6           * modification, are permitted provided that the following conditions
      7           * are met:
      8           * 1. Redistributions of source code must retain the above copyright
      9           *    notice, this list of conditions and the following disclaimer.
     10           * 2. Redistributions in binary form must reproduce the above copyright
     11           *    notice, this list of conditions and the following disclaimer in the
     12           *    documentation and/or other materials provided with the distribution.
     13           * 3. Neither the name of the Institute nor the names of its contributors
     14           *    may be used to endorse or promote products derived from this software
     15           *    without specific prior written permission.
     16           *
     17           * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
     18           * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     19           * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
     20           * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
     21           * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     22           * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
     23           * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
     24           * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
     25           * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
     26           * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
     27           * SUCH DAMAGE.
     28           *
     29           * This file is part of the Contiki operating system.
     30           *
     31           */
     32          
     33          #include "net/mac/mac.h"
     34          
     35          #define DEBUG 0
     36          #if DEBUG
     37          #include <stdio.h>
     38          #define PRINTF(...) printf(__VA_ARGS__)
     39          #else /* DEBUG */
     40          #define PRINTF(...)
     41          #endif /* DEBUG */
     42          
     43          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     44          void
     45          mac_call_sent_callback(mac_callback_t sent, void *ptr, int status, int num_tx)
   \                     mac_call_sent_callback:
     46          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   EC           MOV     A,R4
   \   00000A   FA           MOV     R2,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FB           MOV     R3,A
   \   00000D   740E         MOV     A,#0xe
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 2,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   F5..         MOV     ?V0 + 3,A
   \   000019   740C         MOV     A,#0xc
   \   00001B   12....       LCALL   ?XSTACK_DISP0_8
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   FC           MOV     R4,A
   \   000020   A3           INC     DPTR
   \   000021   E0           MOVX    A,@DPTR
   \   000022   FD           MOV     R5,A
     47            PRINTF("mac_callback_t %p ptr %p status %d num_tx %d\n",
     48                   (void *)sent, ptr, status, num_tx);
     49            switch(status) {
   \   000023   8C..         MOV     ?V0 + 0,R4
   \   000025   8D..         MOV     ?V0 + 1,R5
   \   000027   78..         MOV     R0,#?V0 + 0
   \   000029   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for mac_call_sent_callback>_0`:
   \   00002C   0000         DW        0
   \   00002E   02           DB        2
   \   00002F   ....         DW        ??mac_call_sent_callback_0
   \   000031   ....         DW        ??mac_call_sent_callback_0
   \   000033   ....         DW        ??mac_call_sent_callback_0
   \   000035   ....         DW        ??mac_call_sent_callback_0
     50            case MAC_TX_COLLISION:
     51              PRINTF("mac: collision after %d tx\n", num_tx);
     52              break; 
     53            case MAC_TX_NOACK:
     54              PRINTF("mac: noack after %d tx\n", num_tx);
     55              break;
     56            case MAC_TX_OK:
     57              PRINTF("mac: sent after %d tx\n", num_tx);
     58              break;
     59            default:
     60              PRINTF("mac: error %d after %d tx\n", status, num_tx);
     61            }
     62          
     63            if(sent) {
   \                     ??mac_call_sent_callback_0:
   \   000037   EE           MOV     A,R6
   \   000038   4F           ORL     A,R7
   \   000039   6011         JZ      ??mac_call_sent_callback_1
     64              sent(ptr, status, num_tx);
   \   00003B                ; Setup parameters for indirect call
   \   00003B   78..         MOV     R0,#?V0 + 2
   \   00003D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000040   8E82         MOV     DPL,R6
   \   000042   8F83         MOV     DPH,R7
   \   000044   12....       LCALL   ?CALL_IND
   \   000047   7402         MOV     A,#0x2
   \   000049   12....       LCALL   ?DEALLOC_XSTACK8
     65            }
     66          }
   \                     ??mac_call_sent_callback_1:
   \   00004C   7F04         MOV     R7,#0x4
   \   00004E   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??mac_call_sent_callback?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    mac_call_sent_callback
     67          /*---------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       0      0     18  mac_call_sent_callback


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ??mac_call_sent_callback?relay
      81  mac_call_sent_callback

 
 81 bytes in segment BANKED_CODE
  6 bytes in segment BANK_RELAYS
 
 87 bytes of CODE memory

Errors: none
Warnings: none
