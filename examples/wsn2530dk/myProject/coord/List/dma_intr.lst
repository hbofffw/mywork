###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             03/Apr/2014  10:45:48 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  D:\myWork\myWork\cpu\cc253x\dev\dma_intr.c         #
#    Command line       =  D:\myWork\myWork\cpu\cc253x\dev\dma_intr.c -D      #
#                          AUTOSTART_ENABLE -D PROJECT_CONF_H -lC             #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\List\ -lA D:\myWork\myWork\examples\wsn2530dk\my #
#                          Project\coord\List\ --diag_suppress                #
#                          Pa050,Pa082,Pe550 --diag_warning Pe144 -o          #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\Obj\ -e --no_cse --no_unroll --no_inline         #
#                          --no_code_motion --no_tbaa --debug --core=plain    #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data --nr_virtual_regs    #
#                          16 --preinclude D:\myWork\myWork\examples\wsn2530d #
#                          k\myProject\..\..\..\cpu\cc253x\cc253x.h -I        #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\..\. #
#                          .\..\cpu\cc253x\ -I D:\myWork\myWork\examples\wsn2 #
#                          530dk\myProject\..\..\..\platform\wsn2530dk\ -I    #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\..\. #
#                          .\..\core\ -I D:\myWork\myWork\examples\wsn2530dk\ #
#                          myProject\..\..\..\apps\ -I                        #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\ -Ol #
#    List file          =  D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\List\dma_intr.lst                                #
#    Object file        =  D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\Obj\dma_intr.r51                                 #
#                                                                             #
#                                                                             #
###############################################################################


   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc0
   \   union <unnamed> volatile __sfr _A_IRCON
   \                     _A_IRCON:
   \   000000                DS 1
D:\myWork\myWork\cpu\cc253x\dev\dma_intr.c
      1          /**
      2           * \file
      3           *         DMA driver ISRs
      4           * \author
      5           *         Original: Martti Huttunen <martti@sensinode.com>
      6           *         Port: YoCiHou - < www.iotdev.net >
      7           *
      8           *         DMA interrupt routines, must be stored in HOME bank
      9           */
     10          
     11          #include <stdio.h>
     12          
     13          #include "contiki.h"
     14          
     15          #include "dev/dma.h"
     16          #include "cc253x.h"
     17          
     18          #if DMA_ON
     19          extern struct process *dma_callback[DMA_CHANNEL_COUNT];
     20          #endif
     21          
     22          /*---------------------------------------------------------------------------*/
     23          #ifdef HAVE_RF_DMA
     24          extern void rf_dma_callback_isr(void);
     25          #endif
     26          #ifdef SPI_DMA_RX
     27          extern void spi_rx_dma_callback(void);
     28          #endif
     29          /*---------------------------------------------------------------------------*/
     30          /**
     31           * DMA interrupt service routine.
     32           *
     33           * if callback defined a poll is made to that process
     34           */
     35          /* Avoid referencing bits, we don't call code which use them */
     36          #pragma save
                         ^
Warning[Pe161]: unrecognized #pragma
     37          #if CC_CONF_OPTIMIZE_STACK_SIZE
     38          #pragma exclude bits
     39          #endif
     40          #pragma vector = DMA_VECTOR

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     41          __interrupt void dma_isr(void)
   \                     dma_isr:
     42          {
   \   000000                ; Saved register size: 1
   \   000000                ; Auto size: 0
     43          #if DMA_ON
     44            uint8_t i;
     45          #endif
     46            EA = 0;
   \   000000   C2AF         CLR     0xa8.7
     47            DMAIF = 0;
   \   000002   C2C0         CLR     0xc0.0
     48          #ifdef HAVE_RF_DMA
     49            if((DMAIRQ & 1) != 0) {
     50              DMAIRQ = ~1;
     51              DMAARM = 0x81;
     52              rf_dma_callback_isr();
     53            }
     54          #endif
     55          #ifdef SPI_DMA_RX
     56            if((DMAIRQ & 0x08) != 0) {
     57              DMAIRQ = ~(1 << 3);
     58              spi_rx_dma_callback();
     59            }
     60          #endif
     61          #if DMA_ON
     62            for(i = 0; i < DMA_CHANNEL_COUNT; i++) {
     63              if((DMAIRQ & (1 << i)) != 0) {
     64                DMAIRQ = ~(1 << i);
     65                if(dma_callback[i] != 0) {
     66                  process_poll(dma_callback[i]);
     67                }
     68              }
     69            }
     70          #endif
     71            EA = 1;
   \   000004   D2AF         SETB    0xa8.7
     72          }
   \   000006   32           RETI
   \   000007                REQUIRE _A_IEN0
   \   000007                REQUIRE _A_IRCON

   \                                 In  segment INTVEC, offset 0x43, root
   \                     `??dma_isr??INTVEC 67`:
   \   000043   02....       LJMP       (dma_isr)
     73          #pragma restore
                         ^
Warning[Pe161]: unrecognized #pragma
     74          /*---------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       1      0      0  dma_isr


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       3  ??dma_isr??INTVEC 67
       1  _A_IEN0
       1  _A_IRCON
       7  dma_isr

 
 3 bytes in segment INTVEC
 7 bytes in segment NEAR_CODE
 2 bytes in segment SFR_AN
 
 7 bytes of CODE memory (+ 3 bytes shared)
 0 bytes of DATA memory (+ 2 bytes shared)

Errors: none
Warnings: 2
