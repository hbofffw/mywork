###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             03/Apr/2014  10:45:40 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  D:\myWork\myWork\core\net\rpl\rpl-dag.c            #
#    Command line       =  D:\myWork\myWork\core\net\rpl\rpl-dag.c -D         #
#                          AUTOSTART_ENABLE -D PROJECT_CONF_H -lC             #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\List\ -lA D:\myWork\myWork\examples\wsn2530dk\my #
#                          Project\coord\List\ --diag_suppress                #
#                          Pa050,Pa082,Pe550 --diag_warning Pe144 -o          #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\Obj\ -e --no_cse --no_unroll --no_inline         #
#                          --no_code_motion --no_tbaa --debug --core=plain    #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data --nr_virtual_regs    #
#                          16 --preinclude D:\myWork\myWork\examples\wsn2530d #
#                          k\myProject\..\..\..\cpu\cc253x\cc253x.h -I        #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\..\. #
#                          .\..\cpu\cc253x\ -I D:\myWork\myWork\examples\wsn2 #
#                          530dk\myProject\..\..\..\platform\wsn2530dk\ -I    #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\..\. #
#                          .\..\core\ -I D:\myWork\myWork\examples\wsn2530dk\ #
#                          myProject\..\..\..\apps\ -I                        #
#                          D:\myWork\myWork\examples\wsn2530dk\myProject\ -Ol #
#    List file          =  D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\List\rpl-dag.lst                                 #
#    Object file        =  D:\myWork\myWork\examples\wsn2530dk\myProject\coor #
#                          d\Obj\rpl-dag.r51                                  #
#                                                                             #
#                                                                             #
###############################################################################

D:\myWork\myWork\core\net\rpl\rpl-dag.c
      1          /**
      2           * \addtogroup uip6
      3           * @{
      4           */
      5          /*
      6           * Copyright (c) 2010, Swedish Institute of Computer Science.
      7           * All rights reserved.
      8           *
      9           * Redistribution and use in source and binary forms, with or without
     10           * modification, are permitted provided that the following conditions
     11           * are met:
     12           * 1. Redistributions of source code must retain the above copyright
     13           *    notice, this list of conditions and the following disclaimer.
     14           * 2. Redistributions in binary form must reproduce the above copyright
     15           *    notice, this list of conditions and the following disclaimer in the
     16           *    documentation and/or other materials provided with the distribution.
     17           * 3. Neither the name of the Institute nor the names of its contributors
     18           *    may be used to endorse or promote products derived from this software
     19           *    without specific prior written permission.
     20           *
     21           * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
     22           * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     23           * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
     24           * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
     25           * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     26           * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
     27           * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
     28           * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
     29           * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
     30           * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
     31           * SUCH DAMAGE.
     32           *
     33           * This file is part of the Contiki operating system.
     34           *
     35           */
     36          /**
     37           * \file
     38           *         Logic for Directed Acyclic Graphs in RPL.
     39           *
     40           * \author Joakim Eriksson <joakime@sics.se>, Nicolas Tsiftes <nvt@sics.se>
     41           */
     42          
     43          
     44          #include "contiki.h"
     45          #include "net/rpl/rpl-private.h"
     46          #include "net/uip.h"
     47          #include "net/uip-nd6.h"
     48          #include "net/nbr-table.h"
     49          #include "lib/list.h"
     50          #include "lib/memb.h"
     51          #include "sys/ctimer.h"
     52          
     53          #include <limits.h>
     54          #include <string.h>
     55          
     56          #define DEBUG DEBUG_NONE
     57          #include "net/uip-debug.h"
     58          
     59          #if UIP_CONF_IPV6
     60          /*---------------------------------------------------------------------------*/
     61          extern rpl_of_t RPL_OF;

   \                                 In  segment XDATA_I, align 1, keep-with-next
     62          static rpl_of_t * const objective_functions[] = {&RPL_OF};
   \                     objective_functions:
   \   000000                DS 2
   \   000002                REQUIRE `?<Initializer for objective_functions>`
   \   000002                REQUIRE __INIT_XDATA_I
     63          
     64          /*---------------------------------------------------------------------------*/
     65          /* RPL definitions. */
     66          
     67          #ifndef RPL_CONF_GROUNDED
     68          #define RPL_GROUNDED                    0
     69          #else
     70          #define RPL_GROUNDED                    RPL_CONF_GROUNDED
     71          #endif /* !RPL_CONF_GROUNDED */
     72          
     73          /*---------------------------------------------------------------------------*/
     74          /* Per-parent RPL information */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     75          NBR_TABLE(rpl_parent_t, rpl_parents);
   \                     _rpl_parents_mem:
   \   000000                DS 40
   \   000028                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \   static nbr_table_t rpl_parents_struct
   \                     rpl_parents_struct:
   \   000000                DS 8
   \   000008                REQUIRE `?<Initializer for rpl_parents_struct>`
   \   000008                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \   static nbr_table_t *__xdata rpl_parents
   \                     rpl_parents:
   \   000000                DS 2
   \   000002                REQUIRE `?<Initializer for rpl_parents>`
   \   000002                REQUIRE __INIT_XDATA_I
     76          /*---------------------------------------------------------------------------*/
     77          /* Allocate instance table. */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     78          rpl_instance_t instance_table[RPL_MAX_INSTANCES];
   \                     instance_table:
   \   000000                DS 174
   \   0000AE                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     79          rpl_instance_t *default_instance;
   \                     default_instance:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     80          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     81          void
     82          rpl_dag_init(void)
   \                     rpl_dag_init:
     83          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     84            nbr_table_register(rpl_parents, (nbr_table_callback *)rpl_remove_parent);
   \   000004                ; Setup parameters for call to function nbr_table_register
   \   000004   7C..         MOV     R4,#??rpl_remove_parent?relay & 0xff
   \   000006   7D..         MOV     R5,#(??rpl_remove_parent?relay >> 8) & 0xff
   \   000008   90....       MOV     DPTR,#rpl_parents
   \   00000B   E0           MOVX    A,@DPTR
   \   00000C   FA           MOV     R2,A
   \   00000D   A3           INC     DPTR
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   FB           MOV     R3,A
   \   000010   12....       LCALL   ??nbr_table_register?relay
     85          }
   \   000013   D083         POP     DPH
   \   000015   D082         POP     DPL
   \   000017   02....       LJMP    ?BRET
     86          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     87          rpl_rank_t
     88          rpl_get_parent_rank(uip_lladdr_t *addr)
   \                     rpl_get_parent_rank:
     89          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     90            rpl_parent_t *p = nbr_table_get_from_lladdr(rpl_parents, (rimeaddr_t *)addr);
   \   000005                ; Setup parameters for call to function nbr_table_get_from_lladdr
   \   000005   EA           MOV     A,R2
   \   000006   FC           MOV     R4,A
   \   000007   EB           MOV     A,R3
   \   000008   FD           MOV     R5,A
   \   000009   90....       MOV     DPTR,#rpl_parents
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   FA           MOV     R2,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   FB           MOV     R3,A
   \   000011   12....       LCALL   ??nbr_table_get_from_lladdr?relay
   \   000014   8A..         MOV     ?V0 + 0,R2
   \   000016   8B..         MOV     ?V0 + 1,R3
   \   000018   85..82       MOV     DPL,?V0 + 0
   \   00001B   85..83       MOV     DPH,?V0 + 1
     91            if(p != NULL) {
   \   00001E   E582         MOV     A,DPL
   \   000020   4583         ORL     A,DPH
   \   000022   600B         JZ      ??rpl_get_parent_rank_0
     92              return p->rank;
   \   000024   A3           INC     DPTR
   \   000025   A3           INC     DPTR
   \   000026   A3           INC     DPTR
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   FA           MOV     R2,A
   \   00002A   A3           INC     DPTR
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   FB           MOV     R3,A
   \   00002D   8004         SJMP    ??rpl_get_parent_rank_1
     93            } else {
     94              return 0;
   \                     ??rpl_get_parent_rank_0:
   \   00002F   7A00         MOV     R2,#0x0
   \   000031   7B00         MOV     R3,#0x0
   \                     ??rpl_get_parent_rank_1:
   \   000033   7F02         MOV     R7,#0x2
   \   000035   02....       LJMP    ?BANKED_LEAVE_XDATA
     95            }
     96          }
     97          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     98          uint16_t
     99          rpl_get_parent_link_metric(uip_lladdr_t *addr)
   \                     rpl_get_parent_link_metric:
    100          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    101            rpl_parent_t *p = nbr_table_get_from_lladdr(rpl_parents, (rimeaddr_t *)addr);
   \   000005                ; Setup parameters for call to function nbr_table_get_from_lladdr
   \   000005   EA           MOV     A,R2
   \   000006   FC           MOV     R4,A
   \   000007   EB           MOV     A,R3
   \   000008   FD           MOV     R5,A
   \   000009   90....       MOV     DPTR,#rpl_parents
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   FA           MOV     R2,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   FB           MOV     R3,A
   \   000011   12....       LCALL   ??nbr_table_get_from_lladdr?relay
   \   000014   8A..         MOV     ?V0 + 0,R2
   \   000016   8B..         MOV     ?V0 + 1,R3
   \   000018   85..82       MOV     DPL,?V0 + 0
   \   00001B   85..83       MOV     DPH,?V0 + 1
    102            if(p != NULL) {
   \   00001E   E582         MOV     A,DPL
   \   000020   4583         ORL     A,DPH
   \   000022   600D         JZ      ??rpl_get_parent_link_metric_0
    103              return p->link_metric;
   \   000024   A3           INC     DPTR
   \   000025   A3           INC     DPTR
   \   000026   A3           INC     DPTR
   \   000027   A3           INC     DPTR
   \   000028   A3           INC     DPTR
   \   000029   A3           INC     DPTR
   \   00002A   E0           MOVX    A,@DPTR
   \   00002B   FA           MOV     R2,A
   \   00002C   A3           INC     DPTR
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   FB           MOV     R3,A
   \   00002F   8004         SJMP    ??rpl_get_parent_link_metric_1
    104            } else {
    105              return 0;
   \                     ??rpl_get_parent_link_metric_0:
   \   000031   7A00         MOV     R2,#0x0
   \   000033   7B00         MOV     R3,#0x0
   \                     ??rpl_get_parent_link_metric_1:
   \   000035   7F02         MOV     R7,#0x2
   \   000037   02....       LJMP    ?BANKED_LEAVE_XDATA
    106            }
    107          }
    108          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    109          uip_ipaddr_t *
    110          rpl_get_parent_ipaddr(rpl_parent_t *p)
   \                     rpl_get_parent_ipaddr:
    111          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    112            rimeaddr_t *lladdr = nbr_table_get_lladdr(rpl_parents, p);
   \   000005                ; Setup parameters for call to function nbr_table_get_lladdr
   \   000005   EA           MOV     A,R2
   \   000006   FC           MOV     R4,A
   \   000007   EB           MOV     A,R3
   \   000008   FD           MOV     R5,A
   \   000009   90....       MOV     DPTR,#rpl_parents
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   FA           MOV     R2,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   FB           MOV     R3,A
   \   000011   12....       LCALL   ??nbr_table_get_lladdr?relay
   \   000014   8A..         MOV     ?V0 + 0,R2
   \   000016   8B..         MOV     ?V0 + 1,R3
   \   000018   AA..         MOV     R2,?V0 + 0
   \   00001A   AB..         MOV     R3,?V0 + 1
    113            return uip_ds6_nbr_ipaddr_from_lladdr((uip_lladdr_t *)lladdr);
   \   00001C                ; Setup parameters for call to function uip_ds6_nbr_ipaddr_from_lladdr
   \   00001C   12....       LCALL   ??uip_ds6_nbr_ipaddr_from_lladdr?relay
   \   00001F   7F02         MOV     R7,#0x2
   \   000021   02....       LJMP    ?BANKED_LEAVE_XDATA
    114          }
    115          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    116          static void
    117          rpl_set_preferred_parent(rpl_dag_t *dag, rpl_parent_t *p)
   \                     rpl_set_preferred_parent:
    118          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
    119            if(dag != NULL && dag->preferred_parent != p) {
   \   00000D   E5..         MOV     A,?V0 + 0
   \   00000F   45..         ORL     A,?V0 + 1
   \   000011   6055         JZ      ??rpl_set_preferred_parent_0
   \   000013   E5..         MOV     A,?V0 + 0
   \   000015   2417         ADD     A,#0x17
   \   000017   F582         MOV     DPL,A
   \   000019   E5..         MOV     A,?V0 + 1
   \   00001B   3400         ADDC    A,#0x0
   \   00001D   F583         MOV     DPH,A
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   F8           MOV     R0,A
   \   000021   A3           INC     DPTR
   \   000022   E0           MOVX    A,@DPTR
   \   000023   F9           MOV     R1,A
   \   000024   EE           MOV     A,R6
   \   000025   68           XRL     A,R0
   \   000026   7002         JNZ     ??rpl_set_preferred_parent_1
   \   000028   EF           MOV     A,R7
   \   000029   69           XRL     A,R1
   \                     ??rpl_set_preferred_parent_1:
   \   00002A   603C         JZ      ??rpl_set_preferred_parent_0
    120              PRINTF("RPL: rpl_set_preferred_parent ");
    121              if(p != NULL) {
    122                PRINT6ADDR(rpl_get_parent_ipaddr(p));
    123              } else {
    124                PRINTF("NULL");
    125              }
    126              PRINTF(" used to be ");
    127              if(dag->preferred_parent != NULL) {
    128                PRINT6ADDR(rpl_get_parent_ipaddr(dag->preferred_parent));
    129              } else {
    130                PRINTF("NULL");
    131              }
    132              PRINTF("\n");
    133          
    134              /* Always keep the preferred parent locked, so it remains in the
    135               * neighbor table. */
    136              nbr_table_unlock(rpl_parents, dag->preferred_parent);
   \   00002C                ; Setup parameters for call to function nbr_table_unlock
   \   00002C   E5..         MOV     A,?V0 + 0
   \   00002E   2417         ADD     A,#0x17
   \   000030   F582         MOV     DPL,A
   \   000032   E5..         MOV     A,?V0 + 1
   \   000034   3400         ADDC    A,#0x0
   \   000036   F583         MOV     DPH,A
   \   000038   E0           MOVX    A,@DPTR
   \   000039   FC           MOV     R4,A
   \   00003A   A3           INC     DPTR
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   FD           MOV     R5,A
   \   00003D   90....       MOV     DPTR,#rpl_parents
   \   000040   E0           MOVX    A,@DPTR
   \   000041   FA           MOV     R2,A
   \   000042   A3           INC     DPTR
   \   000043   E0           MOVX    A,@DPTR
   \   000044   FB           MOV     R3,A
   \   000045   12....       LCALL   ??nbr_table_unlock?relay
    137              nbr_table_lock(rpl_parents, p);
   \   000048                ; Setup parameters for call to function nbr_table_lock
   \   000048   EE           MOV     A,R6
   \   000049   FC           MOV     R4,A
   \   00004A   EF           MOV     A,R7
   \   00004B   FD           MOV     R5,A
   \   00004C   90....       MOV     DPTR,#rpl_parents
   \   00004F   E0           MOVX    A,@DPTR
   \   000050   FA           MOV     R2,A
   \   000051   A3           INC     DPTR
   \   000052   E0           MOVX    A,@DPTR
   \   000053   FB           MOV     R3,A
   \   000054   12....       LCALL   ??nbr_table_lock?relay
    138              dag->preferred_parent = p;
   \   000057   E5..         MOV     A,?V0 + 0
   \   000059   2417         ADD     A,#0x17
   \   00005B   F582         MOV     DPL,A
   \   00005D   E5..         MOV     A,?V0 + 1
   \   00005F   3400         ADDC    A,#0x0
   \   000061   F583         MOV     DPH,A
   \   000063   EE           MOV     A,R6
   \   000064   F0           MOVX    @DPTR,A
   \   000065   A3           INC     DPTR
   \   000066   EF           MOV     A,R7
   \   000067   F0           MOVX    @DPTR,A
    139            }
    140          }
   \                     ??rpl_set_preferred_parent_0:
   \   000068   7F02         MOV     R7,#0x2
   \   00006A   02....       LJMP    ?BANKED_LEAVE_XDATA
    141          /*---------------------------------------------------------------------------*/
    142          /* Greater-than function for the lollipop counter.                      */
    143          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    144          static int
    145          lollipop_greater_than(int a, int b)
   \                     lollipop_greater_than:
    146          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    147            /* Check if we are comparing an initial value with an old value */
    148            if(a > RPL_LOLLIPOP_CIRCULAR_REGION && b <= RPL_LOLLIPOP_CIRCULAR_REGION) {
   \   000000   C3           CLR     C
   \   000001   EA           MOV     A,R2
   \   000002   9480         SUBB    A,#-0x80
   \   000004   EB           MOV     A,R3
   \   000005   9400         SUBB    A,#0x0
   \   000007   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000009   65D0         XRL     A,PSW
   \   00000B   33           RLC     A
   \   00000C   403A         JC      ??lollipop_greater_than_0
   \   00000E   C3           CLR     C
   \   00000F   EC           MOV     A,R4
   \   000010   9480         SUBB    A,#-0x80
   \   000012   ED           MOV     A,R5
   \   000013   9400         SUBB    A,#0x0
   \   000015   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000017   65D0         XRL     A,PSW
   \   000019   33           RLC     A
   \   00001A   502C         JNC     ??lollipop_greater_than_0
    149              return (RPL_LOLLIPOP_MAX_VALUE + 1 + b - a) > RPL_LOLLIPOP_SEQUENCE_WINDOWS;
   \   00001C   EC           MOV     A,R4
   \   00001D   2400         ADD     A,#0x0
   \   00001F   F8           MOV     R0,A
   \   000020   ED           MOV     A,R5
   \   000021   3401         ADDC    A,#0x1
   \   000023   F9           MOV     R1,A
   \   000024   E8           MOV     A,R0
   \   000025   C3           CLR     C
   \   000026   9A           SUBB    A,R2
   \   000027   F8           MOV     R0,A
   \   000028   E9           MOV     A,R1
   \   000029   9B           SUBB    A,R3
   \   00002A   F9           MOV     R1,A
   \   00002B   C3           CLR     C
   \   00002C   E8           MOV     A,R0
   \   00002D   9411         SUBB    A,#0x11
   \   00002F   E9           MOV     A,R1
   \   000030   9400         SUBB    A,#0x0
   \   000032   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000034   65D0         XRL     A,PSW
   \   000036   33           RLC     A
   \   000037   4004         JC      ??lollipop_greater_than_1
   \   000039   D2F0         SETB    B.0
   \   00003B   8002         SJMP    ??lollipop_greater_than_2
   \                     ??lollipop_greater_than_1:
   \   00003D   C2F0         CLR     B.0
   \                     ??lollipop_greater_than_2:
   \   00003F   A2F0         MOV     C,B.0
   \   000041   E4           CLR     A
   \   000042   33           RLC     A
   \   000043   FA           MOV     R2,A
   \   000044   7B00         MOV     R3,#0x0
   \   000046   804F         SJMP    ??lollipop_greater_than_3
    150            }
    151            /* Otherwise check if a > b and comparable => ok, or
    152               if they have wrapped and are still comparable */
    153            return (a > b && (a - b) < RPL_LOLLIPOP_SEQUENCE_WINDOWS) ||
    154              (a < b && (b - a) > (RPL_LOLLIPOP_CIRCULAR_REGION + 1-
    155          			 RPL_LOLLIPOP_SEQUENCE_WINDOWS));
   \                     ??lollipop_greater_than_0:
   \   000048   C3           CLR     C
   \   000049   EC           MOV     A,R4
   \   00004A   9A           SUBB    A,R2
   \   00004B   ED           MOV     A,R5
   \   00004C   9B           SUBB    A,R3
   \   00004D   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00004F   65D0         XRL     A,PSW
   \   000051   33           RLC     A
   \   000052   5015         JNC     ??lollipop_greater_than_4
   \   000054   EA           MOV     A,R2
   \   000055   C3           CLR     C
   \   000056   9C           SUBB    A,R4
   \   000057   F8           MOV     R0,A
   \   000058   EB           MOV     A,R3
   \   000059   9D           SUBB    A,R5
   \   00005A   F9           MOV     R1,A
   \   00005B   C3           CLR     C
   \   00005C   E8           MOV     A,R0
   \   00005D   9410         SUBB    A,#0x10
   \   00005F   E9           MOV     A,R1
   \   000060   9400         SUBB    A,#0x0
   \   000062   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000064   65D0         XRL     A,PSW
   \   000066   33           RLC     A
   \   000067   4021         JC      ??lollipop_greater_than_5
   \                     ??lollipop_greater_than_4:
   \   000069   C3           CLR     C
   \   00006A   EA           MOV     A,R2
   \   00006B   9C           SUBB    A,R4
   \   00006C   EB           MOV     A,R3
   \   00006D   9D           SUBB    A,R5
   \   00006E   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000070   65D0         XRL     A,PSW
   \   000072   33           RLC     A
   \   000073   5019         JNC     ??lollipop_greater_than_6
   \   000075   EC           MOV     A,R4
   \   000076   C3           CLR     C
   \   000077   9A           SUBB    A,R2
   \   000078   F8           MOV     R0,A
   \   000079   ED           MOV     A,R5
   \   00007A   9B           SUBB    A,R3
   \   00007B   F9           MOV     R1,A
   \   00007C   C3           CLR     C
   \   00007D   E8           MOV     A,R0
   \   00007E   9471         SUBB    A,#0x71
   \   000080   E9           MOV     A,R1
   \   000081   9400         SUBB    A,#0x0
   \   000083   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000085   65D0         XRL     A,PSW
   \   000087   33           RLC     A
   \   000088   4004         JC      ??lollipop_greater_than_6
   \                     ??lollipop_greater_than_5:
   \   00008A   D2F0         SETB    B.0
   \   00008C   8002         SJMP    ??lollipop_greater_than_7
   \                     ??lollipop_greater_than_6:
   \   00008E   C2F0         CLR     B.0
   \                     ??lollipop_greater_than_7:
   \   000090   A2F0         MOV     C,B.0
   \   000092   E4           CLR     A
   \   000093   33           RLC     A
   \   000094   FA           MOV     R2,A
   \   000095   7B00         MOV     R3,#0x0
   \                     ??lollipop_greater_than_3:
   \   000097   02....       LJMP    ?BRET
    156          }
    157          /*---------------------------------------------------------------------------*/
    158          /* Remove DAG parents with a rank that is at least the same as minimum_rank. */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    159          static void
    160          remove_parents(rpl_dag_t *dag, rpl_rank_t minimum_rank)
   \                     remove_parents:
    161          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   8C..         MOV     ?V0 + 2,R4
   \   00000B   8D..         MOV     ?V0 + 3,R5
    162            rpl_parent_t *p;
    163          
    164            PRINTF("RPL: Removing parents (minimum rank %u)\n",
    165          	minimum_rank);
    166          
    167            p = nbr_table_head(rpl_parents);
   \   00000D                ; Setup parameters for call to function nbr_table_head
   \   00000D   90....       MOV     DPTR,#rpl_parents
   \   000010   E0           MOVX    A,@DPTR
   \   000011   FA           MOV     R2,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   FB           MOV     R3,A
   \   000015   12....       LCALL   ??nbr_table_head?relay
   \   000018   8A..         MOV     ?V0 + 4,R2
   \   00001A   8B..         MOV     ?V0 + 5,R3
   \   00001C   AE..         MOV     R6,?V0 + 4
   \   00001E   AF..         MOV     R7,?V0 + 5
   \   000020   8045         SJMP    ??remove_parents_0
    168            while(p != NULL) {
    169              if(dag == p->dag && p->rank >= minimum_rank) {
   \                     ??remove_parents_1:
   \   000022   8E82         MOV     DPL,R6
   \   000024   8F83         MOV     DPH,R7
   \   000026   A3           INC     DPTR
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F8           MOV     R0,A
   \   00002A   A3           INC     DPTR
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   F9           MOV     R1,A
   \   00002D   E5..         MOV     A,?V0 + 0
   \   00002F   68           XRL     A,R0
   \   000030   7003         JNZ     ??remove_parents_2
   \   000032   E5..         MOV     A,?V0 + 1
   \   000034   69           XRL     A,R1
   \                     ??remove_parents_2:
   \   000035   7019         JNZ     ??remove_parents_3
   \   000037   8E82         MOV     DPL,R6
   \   000039   8F83         MOV     DPH,R7
   \   00003B   A3           INC     DPTR
   \   00003C   A3           INC     DPTR
   \   00003D   A3           INC     DPTR
   \   00003E   A3           INC     DPTR
   \   00003F   C3           CLR     C
   \   000040   E0           MOVX    A,@DPTR
   \   000041   95..         SUBB    A,?V0 + 2
   \   000043   A3           INC     DPTR
   \   000044   E0           MOVX    A,@DPTR
   \   000045   95..         SUBB    A,?V0 + 3
   \   000047   4007         JC      ??remove_parents_3
    170                rpl_remove_parent(p);
   \   000049                ; Setup parameters for call to function rpl_remove_parent
   \   000049   EE           MOV     A,R6
   \   00004A   FA           MOV     R2,A
   \   00004B   EF           MOV     A,R7
   \   00004C   FB           MOV     R3,A
   \   00004D   12....       LCALL   ??rpl_remove_parent?relay
    171              }
    172              p = nbr_table_next(rpl_parents, p);
   \                     ??remove_parents_3:
   \   000050                ; Setup parameters for call to function nbr_table_next
   \   000050   EE           MOV     A,R6
   \   000051   FC           MOV     R4,A
   \   000052   EF           MOV     A,R7
   \   000053   FD           MOV     R5,A
   \   000054   90....       MOV     DPTR,#rpl_parents
   \   000057   E0           MOVX    A,@DPTR
   \   000058   FA           MOV     R2,A
   \   000059   A3           INC     DPTR
   \   00005A   E0           MOVX    A,@DPTR
   \   00005B   FB           MOV     R3,A
   \   00005C   12....       LCALL   ??nbr_table_next?relay
   \   00005F   8A..         MOV     ?V0 + 4,R2
   \   000061   8B..         MOV     ?V0 + 5,R3
   \   000063   AE..         MOV     R6,?V0 + 4
   \   000065   AF..         MOV     R7,?V0 + 5
    173            }
   \                     ??remove_parents_0:
   \   000067   EE           MOV     A,R6
   \   000068   4F           ORL     A,R7
   \   000069   70B7         JNZ     ??remove_parents_1
    174          }
   \   00006B   7F06         MOV     R7,#0x6
   \   00006D   02....       LJMP    ?BANKED_LEAVE_XDATA
    175          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    176          static void
    177          nullify_parents(rpl_dag_t *dag, rpl_rank_t minimum_rank)
   \                     nullify_parents:
    178          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   8C..         MOV     ?V0 + 2,R4
   \   00000B   8D..         MOV     ?V0 + 3,R5
    179            rpl_parent_t *p;
    180          
    181            PRINTF("RPL: Removing parents (minimum rank %u)\n",
    182          	minimum_rank);
    183          
    184            p = nbr_table_head(rpl_parents);
   \   00000D                ; Setup parameters for call to function nbr_table_head
   \   00000D   90....       MOV     DPTR,#rpl_parents
   \   000010   E0           MOVX    A,@DPTR
   \   000011   FA           MOV     R2,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   FB           MOV     R3,A
   \   000015   12....       LCALL   ??nbr_table_head?relay
   \   000018   8A..         MOV     ?V0 + 4,R2
   \   00001A   8B..         MOV     ?V0 + 5,R3
   \   00001C   AE..         MOV     R6,?V0 + 4
   \   00001E   AF..         MOV     R7,?V0 + 5
   \   000020   8045         SJMP    ??nullify_parents_0
    185            while(p != NULL) {
    186              if(dag == p->dag && p->rank >= minimum_rank) {
   \                     ??nullify_parents_1:
   \   000022   8E82         MOV     DPL,R6
   \   000024   8F83         MOV     DPH,R7
   \   000026   A3           INC     DPTR
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F8           MOV     R0,A
   \   00002A   A3           INC     DPTR
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   F9           MOV     R1,A
   \   00002D   E5..         MOV     A,?V0 + 0
   \   00002F   68           XRL     A,R0
   \   000030   7003         JNZ     ??nullify_parents_2
   \   000032   E5..         MOV     A,?V0 + 1
   \   000034   69           XRL     A,R1
   \                     ??nullify_parents_2:
   \   000035   7019         JNZ     ??nullify_parents_3
   \   000037   8E82         MOV     DPL,R6
   \   000039   8F83         MOV     DPH,R7
   \   00003B   A3           INC     DPTR
   \   00003C   A3           INC     DPTR
   \   00003D   A3           INC     DPTR
   \   00003E   A3           INC     DPTR
   \   00003F   C3           CLR     C
   \   000040   E0           MOVX    A,@DPTR
   \   000041   95..         SUBB    A,?V0 + 2
   \   000043   A3           INC     DPTR
   \   000044   E0           MOVX    A,@DPTR
   \   000045   95..         SUBB    A,?V0 + 3
   \   000047   4007         JC      ??nullify_parents_3
    187                rpl_nullify_parent(p);
   \   000049                ; Setup parameters for call to function rpl_nullify_parent
   \   000049   EE           MOV     A,R6
   \   00004A   FA           MOV     R2,A
   \   00004B   EF           MOV     A,R7
   \   00004C   FB           MOV     R3,A
   \   00004D   12....       LCALL   ??rpl_nullify_parent?relay
    188              }
    189              p = nbr_table_next(rpl_parents, p);
   \                     ??nullify_parents_3:
   \   000050                ; Setup parameters for call to function nbr_table_next
   \   000050   EE           MOV     A,R6
   \   000051   FC           MOV     R4,A
   \   000052   EF           MOV     A,R7
   \   000053   FD           MOV     R5,A
   \   000054   90....       MOV     DPTR,#rpl_parents
   \   000057   E0           MOVX    A,@DPTR
   \   000058   FA           MOV     R2,A
   \   000059   A3           INC     DPTR
   \   00005A   E0           MOVX    A,@DPTR
   \   00005B   FB           MOV     R3,A
   \   00005C   12....       LCALL   ??nbr_table_next?relay
   \   00005F   8A..         MOV     ?V0 + 4,R2
   \   000061   8B..         MOV     ?V0 + 5,R3
   \   000063   AE..         MOV     R6,?V0 + 4
   \   000065   AF..         MOV     R7,?V0 + 5
    190            }
   \                     ??nullify_parents_0:
   \   000067   EE           MOV     A,R6
   \   000068   4F           ORL     A,R7
   \   000069   70B7         JNZ     ??nullify_parents_1
    191          }
   \   00006B   7F06         MOV     R7,#0x6
   \   00006D   02....       LJMP    ?BANKED_LEAVE_XDATA
    192          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    193          static int
    194          should_send_dao(rpl_instance_t *instance, rpl_dio_t *dio, rpl_parent_t *p)
   \                     should_send_dao:
    195          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EC           MOV     A,R4
   \   000006   F8           MOV     R0,A
   \   000007   ED           MOV     A,R5
   \   000008   F9           MOV     R1,A
    196            /* if MOP is set to no downward routes no DAO should be sent */
    197            if(instance->mop == RPL_MOP_NO_DOWNWARD_ROUTES) {
   \   000009   EA           MOV     A,R2
   \   00000A   247E         ADD     A,#0x7e
   \   00000C   F582         MOV     DPL,A
   \   00000E   EB           MOV     A,R3
   \   00000F   3400         ADDC    A,#0x0
   \   000011   F583         MOV     DPH,A
   \   000013   E0           MOVX    A,@DPTR
   \   000014   7006         JNZ     ??should_send_dao_0
    198              return 0;
   \   000016   7A00         MOV     R2,#0x0
   \   000018   7B00         MOV     R3,#0x0
   \   00001A   806A         SJMP    ??should_send_dao_1
    199            }
   \                     ??should_send_dao_0:
   \   00001C   740A         MOV     A,#0xa
   \   00001E   12....       LCALL   ?XSTACK_DISP0_8
   \   000021   E0           MOVX    A,@DPTR
   \   000022   FC           MOV     R4,A
   \   000023   A3           INC     DPTR
   \   000024   E0           MOVX    A,@DPTR
   \   000025   FD           MOV     R5,A
    200            /* check if the new DTSN is more recent */
    201            return p == instance->current_dag->preferred_parent &&
    202              (lollipop_greater_than(dio->dtsn, p->dtsn));
   \   000026   8A82         MOV     DPL,R2
   \   000028   8B83         MOV     DPH,R3
   \   00002A   A3           INC     DPTR
   \   00002B   A3           INC     DPTR
   \   00002C   A3           INC     DPTR
   \   00002D   A3           INC     DPTR
   \   00002E   A3           INC     DPTR
   \   00002F   A3           INC     DPTR
   \   000030   A3           INC     DPTR
   \   000031   A3           INC     DPTR
   \   000032   A3           INC     DPTR
   \   000033   E0           MOVX    A,@DPTR
   \   000034   FA           MOV     R2,A
   \   000035   A3           INC     DPTR
   \   000036   E0           MOVX    A,@DPTR
   \   000037   CA           XCH     A,R2
   \   000038   2417         ADD     A,#0x17
   \   00003A   F582         MOV     DPL,A
   \   00003C   EA           MOV     A,R2
   \   00003D   3400         ADDC    A,#0x0
   \   00003F   F583         MOV     DPH,A
   \   000041   E0           MOVX    A,@DPTR
   \   000042   FA           MOV     R2,A
   \   000043   A3           INC     DPTR
   \   000044   E0           MOVX    A,@DPTR
   \   000045   FB           MOV     R3,A
   \   000046   EC           MOV     A,R4
   \   000047   6A           XRL     A,R2
   \   000048   7002         JNZ     ??should_send_dao_2
   \   00004A   ED           MOV     A,R5
   \   00004B   6B           XRL     A,R3
   \                     ??should_send_dao_2:
   \   00004C   702F         JNZ     ??should_send_dao_3
   \   00004E                ; Setup parameters for call to function lollipop_greater_than
   \   00004E   8C82         MOV     DPL,R4
   \   000050   8D83         MOV     DPH,R5
   \   000052   A3           INC     DPTR
   \   000053   A3           INC     DPTR
   \   000054   A3           INC     DPTR
   \   000055   A3           INC     DPTR
   \   000056   A3           INC     DPTR
   \   000057   A3           INC     DPTR
   \   000058   A3           INC     DPTR
   \   000059   A3           INC     DPTR
   \   00005A   E0           MOVX    A,@DPTR
   \   00005B   FC           MOV     R4,A
   \   00005C   7D00         MOV     R5,#0x0
   \   00005E   E8           MOV     A,R0
   \   00005F   2419         ADD     A,#0x19
   \   000061   F582         MOV     DPL,A
   \   000063   E9           MOV     A,R1
   \   000064   3400         ADDC    A,#0x0
   \   000066   F583         MOV     DPH,A
   \   000068   E0           MOVX    A,@DPTR
   \   000069   FA           MOV     R2,A
   \   00006A   7B00         MOV     R3,#0x0
   \   00006C   12....       LCALL   ??lollipop_greater_than?relay
   \   00006F   8A..         MOV     ?V0 + 0,R2
   \   000071   8B..         MOV     ?V0 + 1,R3
   \   000073   E5..         MOV     A,?V0 + 0
   \   000075   45..         ORL     A,?V0 + 1
   \   000077   6004         JZ      ??should_send_dao_3
   \   000079   D2F0         SETB    B.0
   \   00007B   8002         SJMP    ??should_send_dao_4
   \                     ??should_send_dao_3:
   \   00007D   C2F0         CLR     B.0
   \                     ??should_send_dao_4:
   \   00007F   A2F0         MOV     C,B.0
   \   000081   E4           CLR     A
   \   000082   33           RLC     A
   \   000083   FA           MOV     R2,A
   \   000084   7B00         MOV     R3,#0x0
   \                     ??should_send_dao_1:
   \   000086   7F02         MOV     R7,#0x2
   \   000088   02....       LJMP    ?BANKED_LEAVE_XDATA
    203          }
    204          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    205          static int
    206          acceptable_rank(rpl_dag_t *dag, rpl_rank_t rank)
   \                     acceptable_rank:
    207          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    208            return rank != INFINITE_RANK &&
    209              ((dag->instance->max_rankinc == 0) ||
    210               DAG_RANK(rank, dag->instance) <= DAG_RANK(dag->min_rank + dag->instance->max_rankinc, dag->instance));
   \   000009   74FF         MOV     A,#-0x1
   \   00000B   6C           XRL     A,R4
   \   00000C   7003         JNZ     ??acceptable_rank_0
   \   00000E   74FF         MOV     A,#-0x1
   \   000010   6D           XRL     A,R5
   \                     ??acceptable_rank_0:
   \   000011   7003         JNZ     $+5
   \   000013   02....       LJMP    ??acceptable_rank_1 & 0xFFFF
   \   000016   EE           MOV     A,R6
   \   000017   241B         ADD     A,#0x1b
   \   000019   F582         MOV     DPL,A
   \   00001B   EF           MOV     A,R7
   \   00001C   3400         ADDC    A,#0x0
   \   00001E   F583         MOV     DPH,A
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F8           MOV     R0,A
   \   000022   A3           INC     DPTR
   \   000023   E0           MOVX    A,@DPTR
   \   000024   C8           XCH     A,R0
   \   000025   2486         ADD     A,#-0x7a
   \   000027   F582         MOV     DPL,A
   \   000029   E8           MOV     A,R0
   \   00002A   3400         ADDC    A,#0x0
   \   00002C   F583         MOV     DPH,A
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   F8           MOV     R0,A
   \   000030   A3           INC     DPTR
   \   000031   E0           MOVX    A,@DPTR
   \   000032   F9           MOV     R1,A
   \   000033   E8           MOV     A,R0
   \   000034   49           ORL     A,R1
   \   000035   7003         JNZ     $+5
   \   000037   02....       LJMP    ??acceptable_rank_2 & 0xFFFF
   \   00003A   EE           MOV     A,R6
   \   00003B   2410         ADD     A,#0x10
   \   00003D   F582         MOV     DPL,A
   \   00003F   EF           MOV     A,R7
   \   000040   3400         ADDC    A,#0x0
   \   000042   F583         MOV     DPH,A
   \   000044   E0           MOVX    A,@DPTR
   \   000045   F8           MOV     R0,A
   \   000046   A3           INC     DPTR
   \   000047   E0           MOVX    A,@DPTR
   \   000048   F9           MOV     R1,A
   \   000049   EE           MOV     A,R6
   \   00004A   241B         ADD     A,#0x1b
   \   00004C   F582         MOV     DPL,A
   \   00004E   EF           MOV     A,R7
   \   00004F   3400         ADDC    A,#0x0
   \   000051   F583         MOV     DPH,A
   \   000053   E0           MOVX    A,@DPTR
   \   000054   FA           MOV     R2,A
   \   000055   A3           INC     DPTR
   \   000056   E0           MOVX    A,@DPTR
   \   000057   CA           XCH     A,R2
   \   000058   2486         ADD     A,#-0x7a
   \   00005A   F582         MOV     DPL,A
   \   00005C   EA           MOV     A,R2
   \   00005D   3400         ADDC    A,#0x0
   \   00005F   F583         MOV     DPH,A
   \   000061   E0           MOVX    A,@DPTR
   \   000062   28           ADD     A,R0
   \   000063   F8           MOV     R0,A
   \   000064   A3           INC     DPTR
   \   000065   E0           MOVX    A,@DPTR
   \   000066   39           ADDC    A,R1
   \   000067   F9           MOV     R1,A
   \   000068   EE           MOV     A,R6
   \   000069   241B         ADD     A,#0x1b
   \   00006B   F582         MOV     DPL,A
   \   00006D   EF           MOV     A,R7
   \   00006E   3400         ADDC    A,#0x0
   \   000070   F583         MOV     DPH,A
   \   000072   E0           MOVX    A,@DPTR
   \   000073   FA           MOV     R2,A
   \   000074   A3           INC     DPTR
   \   000075   E0           MOVX    A,@DPTR
   \   000076   CA           XCH     A,R2
   \   000077   2488         ADD     A,#-0x78
   \   000079   F582         MOV     DPL,A
   \   00007B   EA           MOV     A,R2
   \   00007C   3400         ADDC    A,#0x0
   \   00007E   F583         MOV     DPH,A
   \   000080   E0           MOVX    A,@DPTR
   \   000081   FA           MOV     R2,A
   \   000082   A3           INC     DPTR
   \   000083   E0           MOVX    A,@DPTR
   \   000084   FB           MOV     R3,A
   \   000085   12....       LCALL   ?US_DIV_MOD
   \   000088   88..         MOV     ?V0 + 0,R0
   \   00008A   89..         MOV     ?V0 + 1,R1
   \   00008C   EC           MOV     A,R4
   \   00008D   F8           MOV     R0,A
   \   00008E   ED           MOV     A,R5
   \   00008F   F9           MOV     R1,A
   \   000090   EE           MOV     A,R6
   \   000091   241B         ADD     A,#0x1b
   \   000093   F582         MOV     DPL,A
   \   000095   EF           MOV     A,R7
   \   000096   3400         ADDC    A,#0x0
   \   000098   F583         MOV     DPH,A
   \   00009A   E0           MOVX    A,@DPTR
   \   00009B   FA           MOV     R2,A
   \   00009C   A3           INC     DPTR
   \   00009D   E0           MOVX    A,@DPTR
   \   00009E   CA           XCH     A,R2
   \   00009F   2488         ADD     A,#-0x78
   \   0000A1   F582         MOV     DPL,A
   \   0000A3   EA           MOV     A,R2
   \   0000A4   3400         ADDC    A,#0x0
   \   0000A6   F583         MOV     DPH,A
   \   0000A8   E0           MOVX    A,@DPTR
   \   0000A9   FA           MOV     R2,A
   \   0000AA   A3           INC     DPTR
   \   0000AB   E0           MOVX    A,@DPTR
   \   0000AC   FB           MOV     R3,A
   \   0000AD   12....       LCALL   ?US_DIV_MOD
   \   0000B0   88..         MOV     ?V0 + 2,R0
   \   0000B2   89..         MOV     ?V0 + 3,R1
   \   0000B4   C3           CLR     C
   \   0000B5   E5..         MOV     A,?V0 + 0
   \   0000B7   95..         SUBB    A,?V0 + 2
   \   0000B9   E5..         MOV     A,?V0 + 1
   \   0000BB   95..         SUBB    A,?V0 + 3
   \   0000BD   4004         JC      ??acceptable_rank_1
   \                     ??acceptable_rank_2:
   \   0000BF   D2F0         SETB    B.0
   \   0000C1   8002         SJMP    ??acceptable_rank_3
   \                     ??acceptable_rank_1:
   \   0000C3   C2F0         CLR     B.0
   \                     ??acceptable_rank_3:
   \   0000C5   A2F0         MOV     C,B.0
   \   0000C7   E4           CLR     A
   \   0000C8   33           RLC     A
   \   0000C9   FA           MOV     R2,A
   \   0000CA   7B00         MOV     R3,#0x0
   \   0000CC   7F04         MOV     R7,#0x4
   \   0000CE   02....       LJMP    ?BANKED_LEAVE_XDATA
    211          }
    212          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    213          static rpl_dag_t *
    214          get_dag(uint8_t instance_id, uip_ipaddr_t *dag_id)
   \                     get_dag:
    215          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 6,R1
   \   000007   8A..         MOV     ?V0 + 4,R2
   \   000009   8B..         MOV     ?V0 + 5,R3
    216            rpl_instance_t *instance;
    217            rpl_dag_t *dag;
    218            int i;
    219          
    220            instance = rpl_get_instance(instance_id);
   \   00000B                ; Setup parameters for call to function rpl_get_instance
   \   00000B   A9..         MOV     R1,?V0 + 6
   \   00000D   12....       LCALL   ??rpl_get_instance?relay
   \   000010   8A..         MOV     ?V0 + 0,R2
   \   000012   8B..         MOV     ?V0 + 1,R3
   \   000014   85....       MOV     ?V0 + 2,?V0 + 0
   \   000017   85....       MOV     ?V0 + 3,?V0 + 1
    221            if(instance == NULL) {
   \   00001A   E5..         MOV     A,?V0 + 2
   \   00001C   45..         ORL     A,?V0 + 3
   \   00001E   7007         JNZ     ??get_dag_0
    222              return NULL;
   \   000020   7A00         MOV     R2,#0x0
   \   000022   7B00         MOV     R3,#0x0
   \   000024   02....       LJMP    ??get_dag_1 & 0xFFFF
    223            }
    224          
    225            for(i = 0; i < RPL_MAX_DAG_PER_INSTANCE; ++i) {
   \                     ??get_dag_0:
   \   000027   75..00       MOV     ?V0 + 0,#0x0
   \   00002A   75..00       MOV     ?V0 + 1,#0x0
   \   00002D   800C         SJMP    ??get_dag_2
   \                     ??get_dag_3:
   \   00002F   E5..         MOV     A,?V0 + 0
   \   000031   2401         ADD     A,#0x1
   \   000033   F5..         MOV     ?V0 + 0,A
   \   000035   E5..         MOV     A,?V0 + 1
   \   000037   3400         ADDC    A,#0x0
   \   000039   F5..         MOV     ?V0 + 1,A
   \                     ??get_dag_2:
   \   00003B   C3           CLR     C
   \   00003C   E5..         MOV     A,?V0 + 0
   \   00003E   9402         SUBB    A,#0x2
   \   000040   E5..         MOV     A,?V0 + 1
   \   000042   9400         SUBB    A,#0x0
   \   000044   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000046   65D0         XRL     A,PSW
   \   000048   33           RLC     A
   \   000049   5062         JNC     ??get_dag_4
    226              dag = &instance->dag_table[i];
   \   00004B   A8..         MOV     R0,?V0 + 0
   \   00004D   A9..         MOV     R1,?V0 + 1
   \   00004F   E8           MOV     A,R0
   \   000050   75F037       MOV     B,#0x37
   \   000053   A4           MUL     AB
   \   000054   C8           XCH     A,R0
   \   000055   AAF0         MOV     R2,B
   \   000057   75F000       MOV     B,#0x0
   \   00005A   A4           MUL     AB
   \   00005B   2A           ADD     A,R2
   \   00005C   FA           MOV     R2,A
   \   00005D   75F037       MOV     B,#0x37
   \   000060   E5..         MOV     A,?V0 + 1
   \   000062   A4           MUL     AB
   \   000063   2A           ADD     A,R2
   \   000064   F9           MOV     R1,A
   \   000065   E5..         MOV     A,?V0 + 2
   \   000067   28           ADD     A,R0
   \   000068   F8           MOV     R0,A
   \   000069   E5..         MOV     A,?V0 + 3
   \   00006B   39           ADDC    A,R1
   \   00006C   F9           MOV     R1,A
   \   00006D   E8           MOV     A,R0
   \   00006E   240B         ADD     A,#0xb
   \   000070   FE           MOV     R6,A
   \   000071   E9           MOV     A,R1
   \   000072   3400         ADDC    A,#0x0
   \   000074   FF           MOV     R7,A
    227              if(dag->used && uip_ipaddr_cmp(&dag->dag_id, dag_id)) {
   \   000075   EE           MOV     A,R6
   \   000076   2415         ADD     A,#0x15
   \   000078   F582         MOV     DPL,A
   \   00007A   EF           MOV     A,R7
   \   00007B   3400         ADDC    A,#0x0
   \   00007D   F583         MOV     DPH,A
   \   00007F   E0           MOVX    A,@DPTR
   \   000080   60AD         JZ      ??get_dag_3
   \   000082                ; Setup parameters for call to function memcmp
   \   000082   75..10       MOV     ?V0 + 8,#0x10
   \   000085   75..00       MOV     ?V0 + 9,#0x0
   \   000088   78..         MOV     R0,#?V0 + 8
   \   00008A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00008D   AC..         MOV     R4,?V0 + 4
   \   00008F   AD..         MOV     R5,?V0 + 5
   \   000091   EE           MOV     A,R6
   \   000092   FA           MOV     R2,A
   \   000093   EF           MOV     A,R7
   \   000094   FB           MOV     R3,A
   \   000095   12....       LCALL   ??memcmp?relay
   \   000098   7402         MOV     A,#0x2
   \   00009A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00009D   8A..         MOV     ?V0 + 8,R2
   \   00009F   8B..         MOV     ?V0 + 9,R3
   \   0000A1   E5..         MOV     A,?V0 + 8
   \   0000A3   45..         ORL     A,?V0 + 9
   \   0000A5   7088         JNZ     ??get_dag_3
    228                return dag;
   \   0000A7   EE           MOV     A,R6
   \   0000A8   FA           MOV     R2,A
   \   0000A9   EF           MOV     A,R7
   \   0000AA   FB           MOV     R3,A
   \   0000AB   8004         SJMP    ??get_dag_1
    229              }
    230            }
    231          
    232            return NULL;
   \                     ??get_dag_4:
   \   0000AD   7A00         MOV     R2,#0x0
   \   0000AF   7B00         MOV     R3,#0x0
   \                     ??get_dag_1:
   \   0000B1   7F0A         MOV     R7,#0xa
   \   0000B3   02....       LJMP    ?BANKED_LEAVE_XDATA
    233          }
    234          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    235          rpl_dag_t *
    236          rpl_set_root(uint8_t instance_id, uip_ipaddr_t *dag_id)
   \                     rpl_set_root:
    237          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 4,R1
   \   000007   8A..         MOV     ?V0 + 2,R2
   \   000009   8B..         MOV     ?V0 + 3,R3
    238            rpl_dag_t *dag;
    239            rpl_instance_t *instance;
    240            uint8_t version;
    241          
    242            version = RPL_LOLLIPOP_INIT;
   \   00000B   75..F0       MOV     ?V0 + 5,#-0x10
    243            dag = get_dag(instance_id, dag_id);
   \   00000E                ; Setup parameters for call to function get_dag
   \   00000E   AA..         MOV     R2,?V0 + 2
   \   000010   AB..         MOV     R3,?V0 + 3
   \   000012   A9..         MOV     R1,?V0 + 4
   \   000014   12....       LCALL   ??get_dag?relay
   \   000017   8A..         MOV     ?V0 + 0,R2
   \   000019   8B..         MOV     ?V0 + 1,R3
   \   00001B   AE..         MOV     R6,?V0 + 0
   \   00001D   AF..         MOV     R7,?V0 + 1
    244            if(dag != NULL) {
   \   00001F   EE           MOV     A,R6
   \   000020   4F           ORL     A,R7
   \   000021   606B         JZ      ??rpl_set_root_0
    245              version = dag->version;
   \   000023   EE           MOV     A,R6
   \   000024   2412         ADD     A,#0x12
   \   000026   F582         MOV     DPL,A
   \   000028   EF           MOV     A,R7
   \   000029   3400         ADDC    A,#0x0
   \   00002B   F583         MOV     DPH,A
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   F5..         MOV     ?V0 + 5,A
    246              RPL_LOLLIPOP_INCREMENT(version);
   \   000030   E5..         MOV     A,?V0 + 5
   \   000032   C3           CLR     C
   \   000033   9480         SUBB    A,#-0x80
   \   000035   4004         JC      ??rpl_set_root_1
   \   000037   05..         INC     ?V0 + 5
   \   000039   8008         SJMP    ??rpl_set_root_2
   \                     ??rpl_set_root_1:
   \   00003B   7401         MOV     A,#0x1
   \   00003D   25..         ADD     A,?V0 + 5
   \   00003F   547F         ANL     A,#0x7f
   \   000041   F5..         MOV     ?V0 + 5,A
    247              PRINTF("RPL: Dropping a joined DAG when setting this node as root");
    248              if(dag == dag->instance->current_dag) {
   \                     ??rpl_set_root_2:
   \   000043   EE           MOV     A,R6
   \   000044   241B         ADD     A,#0x1b
   \   000046   F582         MOV     DPL,A
   \   000048   EF           MOV     A,R7
   \   000049   3400         ADDC    A,#0x0
   \   00004B   F583         MOV     DPH,A
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   F8           MOV     R0,A
   \   00004F   A3           INC     DPTR
   \   000050   E0           MOVX    A,@DPTR
   \   000051   C8           XCH     A,R0
   \   000052   2409         ADD     A,#0x9
   \   000054   F582         MOV     DPL,A
   \   000056   E8           MOV     A,R0
   \   000057   3400         ADDC    A,#0x0
   \   000059   F583         MOV     DPH,A
   \   00005B   E0           MOVX    A,@DPTR
   \   00005C   F8           MOV     R0,A
   \   00005D   A3           INC     DPTR
   \   00005E   E0           MOVX    A,@DPTR
   \   00005F   F9           MOV     R1,A
   \   000060   EE           MOV     A,R6
   \   000061   68           XRL     A,R0
   \   000062   7002         JNZ     ??rpl_set_root_3
   \   000064   EF           MOV     A,R7
   \   000065   69           XRL     A,R1
   \                     ??rpl_set_root_3:
   \   000066   701F         JNZ     ??rpl_set_root_4
    249                dag->instance->current_dag = NULL;
   \   000068   EE           MOV     A,R6
   \   000069   241B         ADD     A,#0x1b
   \   00006B   F582         MOV     DPL,A
   \   00006D   EF           MOV     A,R7
   \   00006E   3400         ADDC    A,#0x0
   \   000070   F583         MOV     DPH,A
   \   000072   E0           MOVX    A,@DPTR
   \   000073   F8           MOV     R0,A
   \   000074   A3           INC     DPTR
   \   000075   E0           MOVX    A,@DPTR
   \   000076   C8           XCH     A,R0
   \   000077   2409         ADD     A,#0x9
   \   000079   F582         MOV     DPL,A
   \   00007B   E8           MOV     A,R0
   \   00007C   3400         ADDC    A,#0x0
   \   00007E   F583         MOV     DPH,A
   \   000080   7400         MOV     A,#0x0
   \   000082   F0           MOVX    @DPTR,A
   \   000083   A3           INC     DPTR
   \   000084   7400         MOV     A,#0x0
   \   000086   F0           MOVX    @DPTR,A
    250              }
    251              rpl_free_dag(dag);
   \                     ??rpl_set_root_4:
   \   000087                ; Setup parameters for call to function rpl_free_dag
   \   000087   EE           MOV     A,R6
   \   000088   FA           MOV     R2,A
   \   000089   EF           MOV     A,R7
   \   00008A   FB           MOV     R3,A
   \   00008B   12....       LCALL   ??rpl_free_dag?relay
    252            }
    253          
    254            dag = rpl_alloc_dag(instance_id, dag_id);
   \                     ??rpl_set_root_0:
   \   00008E                ; Setup parameters for call to function rpl_alloc_dag
   \   00008E   AA..         MOV     R2,?V0 + 2
   \   000090   AB..         MOV     R3,?V0 + 3
   \   000092   A9..         MOV     R1,?V0 + 4
   \   000094   12....       LCALL   ??rpl_alloc_dag?relay
   \   000097   8A..         MOV     ?V0 + 0,R2
   \   000099   8B..         MOV     ?V0 + 1,R3
   \   00009B   AE..         MOV     R6,?V0 + 0
   \   00009D   AF..         MOV     R7,?V0 + 1
    255            if(dag == NULL) {
   \   00009F   EE           MOV     A,R6
   \   0000A0   4F           ORL     A,R7
   \   0000A1   7007         JNZ     ??rpl_set_root_5
    256              PRINTF("RPL: Failed to allocate a DAG\n");
    257              return NULL;
   \   0000A3   7A00         MOV     R2,#0x0
   \   0000A5   7B00         MOV     R3,#0x0
   \   0000A7   02....       LJMP    ??rpl_set_root_6 & 0xFFFF
    258            }
    259          
    260            instance = dag->instance;
   \                     ??rpl_set_root_5:
   \   0000AA   EE           MOV     A,R6
   \   0000AB   241B         ADD     A,#0x1b
   \   0000AD   F582         MOV     DPL,A
   \   0000AF   EF           MOV     A,R7
   \   0000B0   3400         ADDC    A,#0x0
   \   0000B2   F583         MOV     DPH,A
   \   0000B4   E0           MOVX    A,@DPTR
   \   0000B5   F5..         MOV     ?V0 + 0,A
   \   0000B7   A3           INC     DPTR
   \   0000B8   E0           MOVX    A,@DPTR
   \   0000B9   F5..         MOV     ?V0 + 1,A
    261          
    262            dag->version = version;
   \   0000BB   E5..         MOV     A,?V0 + 5
   \   0000BD   EE           MOV     A,R6
   \   0000BE   2412         ADD     A,#0x12
   \   0000C0   F582         MOV     DPL,A
   \   0000C2   EF           MOV     A,R7
   \   0000C3   3400         ADDC    A,#0x0
   \   0000C5   F583         MOV     DPH,A
   \   0000C7   E5..         MOV     A,?V0 + 5
   \   0000C9   F0           MOVX    @DPTR,A
    263            dag->joined = 1;
   \   0000CA   EE           MOV     A,R6
   \   0000CB   2416         ADD     A,#0x16
   \   0000CD   F582         MOV     DPL,A
   \   0000CF   EF           MOV     A,R7
   \   0000D0   3400         ADDC    A,#0x0
   \   0000D2   F583         MOV     DPH,A
   \   0000D4   7401         MOV     A,#0x1
   \   0000D6   F0           MOVX    @DPTR,A
    264            dag->grounded = RPL_GROUNDED;
   \   0000D7   EE           MOV     A,R6
   \   0000D8   2413         ADD     A,#0x13
   \   0000DA   F582         MOV     DPL,A
   \   0000DC   EF           MOV     A,R7
   \   0000DD   3400         ADDC    A,#0x0
   \   0000DF   F583         MOV     DPH,A
   \   0000E1   7400         MOV     A,#0x0
   \   0000E3   F0           MOVX    @DPTR,A
    265            instance->mop = RPL_MOP_DEFAULT;
   \   0000E4   E5..         MOV     A,?V0 + 0
   \   0000E6   247E         ADD     A,#0x7e
   \   0000E8   F582         MOV     DPL,A
   \   0000EA   E5..         MOV     A,?V0 + 1
   \   0000EC   3400         ADDC    A,#0x0
   \   0000EE   F583         MOV     DPH,A
   \   0000F0   7402         MOV     A,#0x2
   \   0000F2   F0           MOVX    @DPTR,A
    266            instance->of = &RPL_OF;
   \   0000F3   85..82       MOV     DPL,?V0 + 0
   \   0000F6   85..83       MOV     DPH,?V0 + 1
   \   0000F9   A3           INC     DPTR
   \   0000FA   A3           INC     DPTR
   \   0000FB   A3           INC     DPTR
   \   0000FC   A3           INC     DPTR
   \   0000FD   A3           INC     DPTR
   \   0000FE   A3           INC     DPTR
   \   0000FF   A3           INC     DPTR
   \   000100   74..         MOV     A,#rpl_mrhof & 0xff
   \   000102   F0           MOVX    @DPTR,A
   \   000103   A3           INC     DPTR
   \   000104   74..         MOV     A,#(rpl_mrhof >> 8) & 0xff
   \   000106   F0           MOVX    @DPTR,A
    267            rpl_set_preferred_parent(dag, NULL);
   \   000107                ; Setup parameters for call to function rpl_set_preferred_parent
   \   000107   7C00         MOV     R4,#0x0
   \   000109   7D00         MOV     R5,#0x0
   \   00010B   EE           MOV     A,R6
   \   00010C   FA           MOV     R2,A
   \   00010D   EF           MOV     A,R7
   \   00010E   FB           MOV     R3,A
   \   00010F   12....       LCALL   ??rpl_set_preferred_parent?relay
    268          
    269            memcpy(&dag->dag_id, dag_id, sizeof(dag->dag_id));
   \   000112                ; Setup parameters for call to function memcpy
   \   000112   75..10       MOV     ?V0 + 6,#0x10
   \   000115   75..00       MOV     ?V0 + 7,#0x0
   \   000118   78..         MOV     R0,#?V0 + 6
   \   00011A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00011D   AC..         MOV     R4,?V0 + 2
   \   00011F   AD..         MOV     R5,?V0 + 3
   \   000121   EE           MOV     A,R6
   \   000122   FA           MOV     R2,A
   \   000123   EF           MOV     A,R7
   \   000124   FB           MOV     R3,A
   \   000125   12....       LCALL   ??memcpy?relay
   \   000128   7402         MOV     A,#0x2
   \   00012A   12....       LCALL   ?DEALLOC_XSTACK8
    270          
    271            instance->dio_intdoubl = RPL_DIO_INTERVAL_DOUBLINGS;
   \   00012D   E5..         MOV     A,?V0 + 0
   \   00012F   247F         ADD     A,#0x7f
   \   000131   F582         MOV     DPL,A
   \   000133   E5..         MOV     A,?V0 + 1
   \   000135   3400         ADDC    A,#0x0
   \   000137   F583         MOV     DPH,A
   \   000139   7408         MOV     A,#0x8
   \   00013B   F0           MOVX    @DPTR,A
    272            instance->dio_intmin = RPL_DIO_INTERVAL_MIN;
   \   00013C   E5..         MOV     A,?V0 + 0
   \   00013E   2480         ADD     A,#-0x80
   \   000140   F582         MOV     DPL,A
   \   000142   E5..         MOV     A,?V0 + 1
   \   000144   3400         ADDC    A,#0x0
   \   000146   F583         MOV     DPH,A
   \   000148   740C         MOV     A,#0xc
   \   00014A   F0           MOVX    @DPTR,A
    273            /* The current interval must differ from the minimum interval in order to
    274               trigger a DIO timer reset. */
    275            instance->dio_intcurrent = RPL_DIO_INTERVAL_MIN +
    276              RPL_DIO_INTERVAL_DOUBLINGS;
   \   00014B   E5..         MOV     A,?V0 + 0
   \   00014D   2483         ADD     A,#-0x7d
   \   00014F   F582         MOV     DPL,A
   \   000151   E5..         MOV     A,?V0 + 1
   \   000153   3400         ADDC    A,#0x0
   \   000155   F583         MOV     DPH,A
   \   000157   7414         MOV     A,#0x14
   \   000159   F0           MOVX    @DPTR,A
    277            instance->dio_redundancy = RPL_DIO_REDUNDANCY;
   \   00015A   E5..         MOV     A,?V0 + 0
   \   00015C   2481         ADD     A,#-0x7f
   \   00015E   F582         MOV     DPL,A
   \   000160   E5..         MOV     A,?V0 + 1
   \   000162   3400         ADDC    A,#0x0
   \   000164   F583         MOV     DPH,A
   \   000166   740A         MOV     A,#0xa
   \   000168   F0           MOVX    @DPTR,A
    278            instance->max_rankinc = RPL_MAX_RANKINC;
   \   000169   E5..         MOV     A,?V0 + 0
   \   00016B   2486         ADD     A,#-0x7a
   \   00016D   F582         MOV     DPL,A
   \   00016F   E5..         MOV     A,?V0 + 1
   \   000171   3400         ADDC    A,#0x0
   \   000173   F583         MOV     DPH,A
   \   000175   7400         MOV     A,#0x0
   \   000177   F0           MOVX    @DPTR,A
   \   000178   A3           INC     DPTR
   \   000179   7407         MOV     A,#0x7
   \   00017B   F0           MOVX    @DPTR,A
    279            instance->min_hoprankinc = RPL_MIN_HOPRANKINC;
   \   00017C   E5..         MOV     A,?V0 + 0
   \   00017E   2488         ADD     A,#-0x78
   \   000180   F582         MOV     DPL,A
   \   000182   E5..         MOV     A,?V0 + 1
   \   000184   3400         ADDC    A,#0x0
   \   000186   F583         MOV     DPH,A
   \   000188   7400         MOV     A,#0x0
   \   00018A   F0           MOVX    @DPTR,A
   \   00018B   A3           INC     DPTR
   \   00018C   7401         MOV     A,#0x1
   \   00018E   F0           MOVX    @DPTR,A
    280            instance->default_lifetime = RPL_DEFAULT_LIFETIME;
   \   00018F   E5..         MOV     A,?V0 + 0
   \   000191   2482         ADD     A,#-0x7e
   \   000193   F582         MOV     DPL,A
   \   000195   E5..         MOV     A,?V0 + 1
   \   000197   3400         ADDC    A,#0x0
   \   000199   F583         MOV     DPH,A
   \   00019B   74FF         MOV     A,#-0x1
   \   00019D   F0           MOVX    @DPTR,A
    281            instance->lifetime_unit = RPL_DEFAULT_LIFETIME_UNIT;
   \   00019E   E5..         MOV     A,?V0 + 0
   \   0001A0   248A         ADD     A,#-0x76
   \   0001A2   F582         MOV     DPL,A
   \   0001A4   E5..         MOV     A,?V0 + 1
   \   0001A6   3400         ADDC    A,#0x0
   \   0001A8   F583         MOV     DPH,A
   \   0001AA   74FF         MOV     A,#-0x1
   \   0001AC   F0           MOVX    @DPTR,A
   \   0001AD   A3           INC     DPTR
   \   0001AE   74FF         MOV     A,#-0x1
   \   0001B0   F0           MOVX    @DPTR,A
    282          
    283            dag->rank = ROOT_RANK(instance);
   \   0001B1   E5..         MOV     A,?V0 + 0
   \   0001B3   2488         ADD     A,#-0x78
   \   0001B5   F582         MOV     DPL,A
   \   0001B7   E5..         MOV     A,?V0 + 1
   \   0001B9   3400         ADDC    A,#0x0
   \   0001BB   F583         MOV     DPH,A
   \   0001BD   E0           MOVX    A,@DPTR
   \   0001BE   F8           MOV     R0,A
   \   0001BF   A3           INC     DPTR
   \   0001C0   E0           MOVX    A,@DPTR
   \   0001C1   F9           MOV     R1,A
   \   0001C2   EE           MOV     A,R6
   \   0001C3   2419         ADD     A,#0x19
   \   0001C5   F582         MOV     DPL,A
   \   0001C7   EF           MOV     A,R7
   \   0001C8   3400         ADDC    A,#0x0
   \   0001CA   F583         MOV     DPH,A
   \   0001CC   E8           MOV     A,R0
   \   0001CD   F0           MOVX    @DPTR,A
   \   0001CE   A3           INC     DPTR
   \   0001CF   E9           MOV     A,R1
   \   0001D0   F0           MOVX    @DPTR,A
    284          
    285            if(instance->current_dag != dag && instance->current_dag != NULL) {
   \   0001D1   85..82       MOV     DPL,?V0 + 0
   \   0001D4   85..83       MOV     DPH,?V0 + 1
   \   0001D7   A3           INC     DPTR
   \   0001D8   A3           INC     DPTR
   \   0001D9   A3           INC     DPTR
   \   0001DA   A3           INC     DPTR
   \   0001DB   A3           INC     DPTR
   \   0001DC   A3           INC     DPTR
   \   0001DD   A3           INC     DPTR
   \   0001DE   A3           INC     DPTR
   \   0001DF   A3           INC     DPTR
   \   0001E0   E0           MOVX    A,@DPTR
   \   0001E1   F8           MOV     R0,A
   \   0001E2   A3           INC     DPTR
   \   0001E3   E0           MOVX    A,@DPTR
   \   0001E4   F9           MOV     R1,A
   \   0001E5   EE           MOV     A,R6
   \   0001E6   68           XRL     A,R0
   \   0001E7   7002         JNZ     ??rpl_set_root_7
   \   0001E9   EF           MOV     A,R7
   \   0001EA   69           XRL     A,R1
   \                     ??rpl_set_root_7:
   \   0001EB   604F         JZ      ??rpl_set_root_8
   \   0001ED   85..82       MOV     DPL,?V0 + 0
   \   0001F0   85..83       MOV     DPH,?V0 + 1
   \   0001F3   A3           INC     DPTR
   \   0001F4   A3           INC     DPTR
   \   0001F5   A3           INC     DPTR
   \   0001F6   A3           INC     DPTR
   \   0001F7   A3           INC     DPTR
   \   0001F8   A3           INC     DPTR
   \   0001F9   A3           INC     DPTR
   \   0001FA   A3           INC     DPTR
   \   0001FB   A3           INC     DPTR
   \   0001FC   E0           MOVX    A,@DPTR
   \   0001FD   F8           MOV     R0,A
   \   0001FE   A3           INC     DPTR
   \   0001FF   E0           MOVX    A,@DPTR
   \   000200   F9           MOV     R1,A
   \   000201   E8           MOV     A,R0
   \   000202   49           ORL     A,R1
   \   000203   6037         JZ      ??rpl_set_root_8
    286              /* Remove routes installed by DAOs. */
    287              rpl_remove_routes(instance->current_dag);
   \   000205                ; Setup parameters for call to function rpl_remove_routes
   \   000205   85..82       MOV     DPL,?V0 + 0
   \   000208   85..83       MOV     DPH,?V0 + 1
   \   00020B   A3           INC     DPTR
   \   00020C   A3           INC     DPTR
   \   00020D   A3           INC     DPTR
   \   00020E   A3           INC     DPTR
   \   00020F   A3           INC     DPTR
   \   000210   A3           INC     DPTR
   \   000211   A3           INC     DPTR
   \   000212   A3           INC     DPTR
   \   000213   A3           INC     DPTR
   \   000214   E0           MOVX    A,@DPTR
   \   000215   FA           MOV     R2,A
   \   000216   A3           INC     DPTR
   \   000217   E0           MOVX    A,@DPTR
   \   000218   FB           MOV     R3,A
   \   000219   12....       LCALL   ??rpl_remove_routes?relay
    288          
    289              instance->current_dag->joined = 0;
   \   00021C   85..82       MOV     DPL,?V0 + 0
   \   00021F   85..83       MOV     DPH,?V0 + 1
   \   000222   A3           INC     DPTR
   \   000223   A3           INC     DPTR
   \   000224   A3           INC     DPTR
   \   000225   A3           INC     DPTR
   \   000226   A3           INC     DPTR
   \   000227   A3           INC     DPTR
   \   000228   A3           INC     DPTR
   \   000229   A3           INC     DPTR
   \   00022A   A3           INC     DPTR
   \   00022B   E0           MOVX    A,@DPTR
   \   00022C   F8           MOV     R0,A
   \   00022D   A3           INC     DPTR
   \   00022E   E0           MOVX    A,@DPTR
   \   00022F   C8           XCH     A,R0
   \   000230   2416         ADD     A,#0x16
   \   000232   F582         MOV     DPL,A
   \   000234   E8           MOV     A,R0
   \   000235   3400         ADDC    A,#0x0
   \   000237   F583         MOV     DPH,A
   \   000239   7400         MOV     A,#0x0
   \   00023B   F0           MOVX    @DPTR,A
    290            }
    291          
    292            instance->current_dag = dag;
   \                     ??rpl_set_root_8:
   \   00023C   85..82       MOV     DPL,?V0 + 0
   \   00023F   85..83       MOV     DPH,?V0 + 1
   \   000242   A3           INC     DPTR
   \   000243   A3           INC     DPTR
   \   000244   A3           INC     DPTR
   \   000245   A3           INC     DPTR
   \   000246   A3           INC     DPTR
   \   000247   A3           INC     DPTR
   \   000248   A3           INC     DPTR
   \   000249   A3           INC     DPTR
   \   00024A   A3           INC     DPTR
   \   00024B   EE           MOV     A,R6
   \   00024C   F0           MOVX    @DPTR,A
   \   00024D   A3           INC     DPTR
   \   00024E   EF           MOV     A,R7
   \   00024F   F0           MOVX    @DPTR,A
    293            instance->dtsn_out = RPL_LOLLIPOP_INIT;
   \   000250   E5..         MOV     A,?V0 + 0
   \   000252   247D         ADD     A,#0x7d
   \   000254   F582         MOV     DPL,A
   \   000256   E5..         MOV     A,?V0 + 1
   \   000258   3400         ADDC    A,#0x0
   \   00025A   F583         MOV     DPH,A
   \   00025C   74F0         MOV     A,#-0x10
   \   00025E   F0           MOVX    @DPTR,A
    294            instance->of->update_metric_container(instance);
   \   00025F                ; Setup parameters for indirect call
   \   00025F   AA..         MOV     R2,?V0 + 0
   \   000261   AB..         MOV     R3,?V0 + 1
   \   000263   85..82       MOV     DPL,?V0 + 0
   \   000266   85..83       MOV     DPH,?V0 + 1
   \   000269   A3           INC     DPTR
   \   00026A   A3           INC     DPTR
   \   00026B   A3           INC     DPTR
   \   00026C   A3           INC     DPTR
   \   00026D   A3           INC     DPTR
   \   00026E   A3           INC     DPTR
   \   00026F   A3           INC     DPTR
   \   000270   E0           MOVX    A,@DPTR
   \   000271   F8           MOV     R0,A
   \   000272   A3           INC     DPTR
   \   000273   E0           MOVX    A,@DPTR
   \   000274   C8           XCH     A,R0
   \   000275   240A         ADD     A,#0xa
   \   000277   F582         MOV     DPL,A
   \   000279   E8           MOV     A,R0
   \   00027A   3400         ADDC    A,#0x0
   \   00027C   F583         MOV     DPH,A
   \   00027E   E0           MOVX    A,@DPTR
   \   00027F   F8           MOV     R0,A
   \   000280   A3           INC     DPTR
   \   000281   E0           MOVX    A,@DPTR
   \   000282   F583         MOV     DPH,A
   \   000284   8882         MOV     DPL,R0
   \   000286   12....       LCALL   ?CALL_IND
    295            default_instance = instance;
   \   000289   90....       MOV     DPTR,#default_instance
   \   00028C   E5..         MOV     A,?V0 + 0
   \   00028E   F0           MOVX    @DPTR,A
   \   00028F   A3           INC     DPTR
   \   000290   E5..         MOV     A,?V0 + 1
   \   000292   F0           MOVX    @DPTR,A
    296          
    297            PRINTF("RPL: Node set to be a DAG root with DAG ID ");
    298            PRINT6ADDR(&dag->dag_id);
    299            PRINTF("\n");
    300          
    301            ANNOTATE("#A root=%u\n", dag->dag_id.u8[sizeof(dag->dag_id) - 1]);
    302          
    303            rpl_reset_dio_timer(instance);
   \   000293                ; Setup parameters for call to function rpl_reset_dio_timer
   \   000293   AA..         MOV     R2,?V0 + 0
   \   000295   AB..         MOV     R3,?V0 + 1
   \   000297   12....       LCALL   ??rpl_reset_dio_timer?relay
    304          
    305            return dag;
   \   00029A   EE           MOV     A,R6
   \   00029B   FA           MOV     R2,A
   \   00029C   EF           MOV     A,R7
   \   00029D   FB           MOV     R3,A
   \                     ??rpl_set_root_6:
   \   00029E   7F08         MOV     R7,#0x8
   \   0002A0   02....       LJMP    ?BANKED_LEAVE_XDATA
    306          }
    307          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    308          int
    309          rpl_repair_root(uint8_t instance_id)
   \                     rpl_repair_root:
    310          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    311            rpl_instance_t *instance;
    312          
    313            instance = rpl_get_instance(instance_id);
   \   000007                ; Setup parameters for call to function rpl_get_instance
   \   000007   F9           MOV     R1,A
   \   000008   12....       LCALL   ??rpl_get_instance?relay
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   AA..         MOV     R2,?V0 + 0
   \   000011   AB..         MOV     R3,?V0 + 1
    314            if(instance == NULL ||
    315               instance->current_dag->rank != ROOT_RANK(instance)) {
   \   000013   EA           MOV     A,R2
   \   000014   4B           ORL     A,R3
   \   000015   6033         JZ      ??rpl_repair_root_0
   \   000017   8A82         MOV     DPL,R2
   \   000019   8B83         MOV     DPH,R3
   \   00001B   A3           INC     DPTR
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   A3           INC     DPTR
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   A3           INC     DPTR
   \   000023   A3           INC     DPTR
   \   000024   E0           MOVX    A,@DPTR
   \   000025   F8           MOV     R0,A
   \   000026   A3           INC     DPTR
   \   000027   E0           MOVX    A,@DPTR
   \   000028   C8           XCH     A,R0
   \   000029   2419         ADD     A,#0x19
   \   00002B   F582         MOV     DPL,A
   \   00002D   E8           MOV     A,R0
   \   00002E   3400         ADDC    A,#0x0
   \   000030   F583         MOV     DPH,A
   \   000032   E0           MOVX    A,@DPTR
   \   000033   F8           MOV     R0,A
   \   000034   A3           INC     DPTR
   \   000035   E0           MOVX    A,@DPTR
   \   000036   F9           MOV     R1,A
   \   000037   EA           MOV     A,R2
   \   000038   2488         ADD     A,#-0x78
   \   00003A   F582         MOV     DPL,A
   \   00003C   EB           MOV     A,R3
   \   00003D   3400         ADDC    A,#0x0
   \   00003F   F583         MOV     DPH,A
   \   000041   E0           MOVX    A,@DPTR
   \   000042   68           XRL     A,R0
   \   000043   7003         JNZ     ??rpl_repair_root_1
   \   000045   A3           INC     DPTR
   \   000046   E0           MOVX    A,@DPTR
   \   000047   69           XRL     A,R1
   \                     ??rpl_repair_root_1:
   \   000048   6007         JZ      ??rpl_repair_root_2
    316              PRINTF("RPL: rpl_repair_root triggered but not root\n");
    317              return 0;
   \                     ??rpl_repair_root_0:
   \   00004A   7A00         MOV     R2,#0x0
   \   00004C   7B00         MOV     R3,#0x0
   \   00004E   02....       LJMP    ??rpl_repair_root_3 & 0xFFFF
    318            }
    319          
    320            RPL_LOLLIPOP_INCREMENT(instance->current_dag->version);
   \                     ??rpl_repair_root_2:
   \   000051   8A82         MOV     DPL,R2
   \   000053   8B83         MOV     DPH,R3
   \   000055   A3           INC     DPTR
   \   000056   A3           INC     DPTR
   \   000057   A3           INC     DPTR
   \   000058   A3           INC     DPTR
   \   000059   A3           INC     DPTR
   \   00005A   A3           INC     DPTR
   \   00005B   A3           INC     DPTR
   \   00005C   A3           INC     DPTR
   \   00005D   A3           INC     DPTR
   \   00005E   E0           MOVX    A,@DPTR
   \   00005F   F8           MOV     R0,A
   \   000060   A3           INC     DPTR
   \   000061   E0           MOVX    A,@DPTR
   \   000062   C8           XCH     A,R0
   \   000063   2412         ADD     A,#0x12
   \   000065   F582         MOV     DPL,A
   \   000067   E8           MOV     A,R0
   \   000068   3400         ADDC    A,#0x0
   \   00006A   F583         MOV     DPH,A
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   C3           CLR     C
   \   00006E   9480         SUBB    A,#-0x80
   \   000070   4021         JC      ??rpl_repair_root_4
   \   000072   8A82         MOV     DPL,R2
   \   000074   8B83         MOV     DPH,R3
   \   000076   A3           INC     DPTR
   \   000077   A3           INC     DPTR
   \   000078   A3           INC     DPTR
   \   000079   A3           INC     DPTR
   \   00007A   A3           INC     DPTR
   \   00007B   A3           INC     DPTR
   \   00007C   A3           INC     DPTR
   \   00007D   A3           INC     DPTR
   \   00007E   A3           INC     DPTR
   \   00007F   E0           MOVX    A,@DPTR
   \   000080   F8           MOV     R0,A
   \   000081   A3           INC     DPTR
   \   000082   E0           MOVX    A,@DPTR
   \   000083   C8           XCH     A,R0
   \   000084   2412         ADD     A,#0x12
   \   000086   F582         MOV     DPL,A
   \   000088   E8           MOV     A,R0
   \   000089   3400         ADDC    A,#0x0
   \   00008B   F583         MOV     DPH,A
   \   00008D   E0           MOVX    A,@DPTR
   \   00008E   2401         ADD     A,#0x1
   \   000090   F0           MOVX    @DPTR,A
   \   000091   8040         SJMP    ??rpl_repair_root_5
   \                     ??rpl_repair_root_4:
   \   000093   8A82         MOV     DPL,R2
   \   000095   8B83         MOV     DPH,R3
   \   000097   A3           INC     DPTR
   \   000098   A3           INC     DPTR
   \   000099   A3           INC     DPTR
   \   00009A   A3           INC     DPTR
   \   00009B   A3           INC     DPTR
   \   00009C   A3           INC     DPTR
   \   00009D   A3           INC     DPTR
   \   00009E   A3           INC     DPTR
   \   00009F   A3           INC     DPTR
   \   0000A0   E0           MOVX    A,@DPTR
   \   0000A1   F8           MOV     R0,A
   \   0000A2   A3           INC     DPTR
   \   0000A3   E0           MOVX    A,@DPTR
   \   0000A4   C8           XCH     A,R0
   \   0000A5   2412         ADD     A,#0x12
   \   0000A7   F582         MOV     DPL,A
   \   0000A9   E8           MOV     A,R0
   \   0000AA   3400         ADDC    A,#0x0
   \   0000AC   F583         MOV     DPH,A
   \   0000AE   E0           MOVX    A,@DPTR
   \   0000AF   2401         ADD     A,#0x1
   \   0000B1   547F         ANL     A,#0x7f
   \   0000B3   C0E0         PUSH    A
   \   0000B5   8A82         MOV     DPL,R2
   \   0000B7   8B83         MOV     DPH,R3
   \   0000B9   A3           INC     DPTR
   \   0000BA   A3           INC     DPTR
   \   0000BB   A3           INC     DPTR
   \   0000BC   A3           INC     DPTR
   \   0000BD   A3           INC     DPTR
   \   0000BE   A3           INC     DPTR
   \   0000BF   A3           INC     DPTR
   \   0000C0   A3           INC     DPTR
   \   0000C1   A3           INC     DPTR
   \   0000C2   E0           MOVX    A,@DPTR
   \   0000C3   F8           MOV     R0,A
   \   0000C4   A3           INC     DPTR
   \   0000C5   E0           MOVX    A,@DPTR
   \   0000C6   C8           XCH     A,R0
   \   0000C7   2412         ADD     A,#0x12
   \   0000C9   F582         MOV     DPL,A
   \   0000CB   E8           MOV     A,R0
   \   0000CC   3400         ADDC    A,#0x0
   \   0000CE   F583         MOV     DPH,A
   \   0000D0   D0E0         POP     A
   \   0000D2   F0           MOVX    @DPTR,A
    321            RPL_LOLLIPOP_INCREMENT(instance->dtsn_out);
   \                     ??rpl_repair_root_5:
   \   0000D3   EA           MOV     A,R2
   \   0000D4   247D         ADD     A,#0x7d
   \   0000D6   F582         MOV     DPL,A
   \   0000D8   EB           MOV     A,R3
   \   0000D9   3400         ADDC    A,#0x0
   \   0000DB   F583         MOV     DPH,A
   \   0000DD   E0           MOVX    A,@DPTR
   \   0000DE   C3           CLR     C
   \   0000DF   9480         SUBB    A,#-0x80
   \   0000E1   4010         JC      ??rpl_repair_root_6
   \   0000E3   EA           MOV     A,R2
   \   0000E4   247D         ADD     A,#0x7d
   \   0000E6   F582         MOV     DPL,A
   \   0000E8   EB           MOV     A,R3
   \   0000E9   3400         ADDC    A,#0x0
   \   0000EB   F583         MOV     DPH,A
   \   0000ED   E0           MOVX    A,@DPTR
   \   0000EE   2401         ADD     A,#0x1
   \   0000F0   F0           MOVX    @DPTR,A
   \   0000F1   801E         SJMP    ??rpl_repair_root_7
   \                     ??rpl_repair_root_6:
   \   0000F3   EA           MOV     A,R2
   \   0000F4   247D         ADD     A,#0x7d
   \   0000F6   F582         MOV     DPL,A
   \   0000F8   EB           MOV     A,R3
   \   0000F9   3400         ADDC    A,#0x0
   \   0000FB   F583         MOV     DPH,A
   \   0000FD   E0           MOVX    A,@DPTR
   \   0000FE   2401         ADD     A,#0x1
   \   000100   547F         ANL     A,#0x7f
   \   000102   C0E0         PUSH    A
   \   000104   EA           MOV     A,R2
   \   000105   247D         ADD     A,#0x7d
   \   000107   F582         MOV     DPL,A
   \   000109   EB           MOV     A,R3
   \   00010A   3400         ADDC    A,#0x0
   \   00010C   F583         MOV     DPH,A
   \   00010E   D0E0         POP     A
   \   000110   F0           MOVX    @DPTR,A
    322            PRINTF("RPL: rpl_repair_root initiating global repair with version %d\n", instance->current_dag->version);
    323            rpl_reset_dio_timer(instance);
   \                     ??rpl_repair_root_7:
   \   000111                ; Setup parameters for call to function rpl_reset_dio_timer
   \   000111   12....       LCALL   ??rpl_reset_dio_timer?relay
    324            return 1;
   \   000114   7A01         MOV     R2,#0x1
   \   000116   7B00         MOV     R3,#0x0
   \                     ??rpl_repair_root_3:
   \   000118   7F02         MOV     R7,#0x2
   \   00011A   02....       LJMP    ?BANKED_LEAVE_XDATA
    325          }
    326          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    327          static void
    328          set_ip_from_prefix(uip_ipaddr_t *ipaddr, rpl_prefix_t *prefix)
   \                     set_ip_from_prefix:
    329          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
    330            memset(ipaddr, 0, sizeof(uip_ipaddr_t));
   \   00000D                ; Setup parameters for call to function memset
   \   00000D   75..10       MOV     ?V0 + 2,#0x10
   \   000010   75..00       MOV     ?V0 + 3,#0x0
   \   000013   78..         MOV     R0,#?V0 + 2
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000018   7C00         MOV     R4,#0x0
   \   00001A   7D00         MOV     R5,#0x0
   \   00001C   EE           MOV     A,R6
   \   00001D   FA           MOV     R2,A
   \   00001E   EF           MOV     A,R7
   \   00001F   FB           MOV     R3,A
   \   000020   12....       LCALL   ??memset?relay
   \   000023   7402         MOV     A,#0x2
   \   000025   12....       LCALL   ?DEALLOC_XSTACK8
    331            memcpy(ipaddr, &prefix->prefix, (prefix->length + 7) / 8);
   \   000028                ; Setup parameters for call to function memcpy
   \   000028   E5..         MOV     A,?V0 + 0
   \   00002A   2414         ADD     A,#0x14
   \   00002C   F582         MOV     DPL,A
   \   00002E   E5..         MOV     A,?V0 + 1
   \   000030   3400         ADDC    A,#0x0
   \   000032   F583         MOV     DPH,A
   \   000034   E0           MOVX    A,@DPTR
   \   000035   F8           MOV     R0,A
   \   000036   7900         MOV     R1,#0x0
   \   000038   2407         ADD     A,#0x7
   \   00003A   F8           MOV     R0,A
   \   00003B   E9           MOV     A,R1
   \   00003C   3400         ADDC    A,#0x0
   \   00003E   F9           MOV     R1,A
   \   00003F   7A08         MOV     R2,#0x8
   \   000041   7B00         MOV     R3,#0x0
   \   000043   12....       LCALL   ?S_DIV_MOD
   \   000046   88..         MOV     ?V0 + 2,R0
   \   000048   89..         MOV     ?V0 + 3,R1
   \   00004A   78..         MOV     R0,#?V0 + 2
   \   00004C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004F   AC..         MOV     R4,?V0 + 0
   \   000051   AD..         MOV     R5,?V0 + 1
   \   000053   EE           MOV     A,R6
   \   000054   FA           MOV     R2,A
   \   000055   EF           MOV     A,R7
   \   000056   FB           MOV     R3,A
   \   000057   12....       LCALL   ??memcpy?relay
   \   00005A   7402         MOV     A,#0x2
   \   00005C   12....       LCALL   ?DEALLOC_XSTACK8
    332            uip_ds6_set_addr_iid(ipaddr, &uip_lladdr);
   \   00005F                ; Setup parameters for call to function uip_ds6_set_addr_iid
   \   00005F   7C..         MOV     R4,#uip_lladdr & 0xff
   \   000061   7D..         MOV     R5,#(uip_lladdr >> 8) & 0xff
   \   000063   EE           MOV     A,R6
   \   000064   FA           MOV     R2,A
   \   000065   EF           MOV     A,R7
   \   000066   FB           MOV     R3,A
   \   000067   12....       LCALL   ??uip_ds6_set_addr_iid?relay
    333          }
   \   00006A   7F04         MOV     R7,#0x4
   \   00006C   02....       LJMP    ?BANKED_LEAVE_XDATA
    334          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    335          static void
    336          check_prefix(rpl_prefix_t *last_prefix, rpl_prefix_t *new_prefix)
   \                     check_prefix:
    337          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 16
   \   000005   74F0         MOV     A,#-0x10
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 0,R2
   \   00000C   8B..         MOV     ?V0 + 1,R3
   \   00000E   EC           MOV     A,R4
   \   00000F   FE           MOV     R6,A
   \   000010   ED           MOV     A,R5
   \   000011   FF           MOV     R7,A
    338            uip_ipaddr_t ipaddr;
    339            uip_ds6_addr_t *rep;
    340          
    341            if(last_prefix != NULL && new_prefix != NULL &&
    342               last_prefix->length == new_prefix->length &&
    343               uip_ipaddr_prefixcmp(&last_prefix->prefix, &new_prefix->prefix, new_prefix->length) &&
    344               last_prefix->flags == new_prefix->flags) {
   \   000012   E5..         MOV     A,?V0 + 0
   \   000014   45..         ORL     A,?V0 + 1
   \   000016   6070         JZ      ??check_prefix_0
   \   000018   EE           MOV     A,R6
   \   000019   4F           ORL     A,R7
   \   00001A   606C         JZ      ??check_prefix_0
   \   00001C   E5..         MOV     A,?V0 + 0
   \   00001E   2414         ADD     A,#0x14
   \   000020   F582         MOV     DPL,A
   \   000022   E5..         MOV     A,?V0 + 1
   \   000024   3400         ADDC    A,#0x0
   \   000026   F583         MOV     DPH,A
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F8           MOV     R0,A
   \   00002A   EE           MOV     A,R6
   \   00002B   2414         ADD     A,#0x14
   \   00002D   F582         MOV     DPL,A
   \   00002F   EF           MOV     A,R7
   \   000030   3400         ADDC    A,#0x0
   \   000032   F583         MOV     DPH,A
   \   000034   E0           MOVX    A,@DPTR
   \   000035   68           XRL     A,R0
   \   000036   7050         JNZ     ??check_prefix_0
   \   000038                ; Setup parameters for call to function memcmp
   \   000038   EE           MOV     A,R6
   \   000039   2414         ADD     A,#0x14
   \   00003B   F582         MOV     DPL,A
   \   00003D   EF           MOV     A,R7
   \   00003E   3400         ADDC    A,#0x0
   \   000040   F583         MOV     DPH,A
   \   000042   E0           MOVX    A,@DPTR
   \   000043   13           RRC     A
   \   000044   13           RRC     A
   \   000045   13           RRC     A
   \   000046   541F         ANL     A,#0x1f
   \   000048   F5..         MOV     ?V0 + 2,A
   \   00004A   75..00       MOV     ?V0 + 3,#0x0
   \   00004D   78..         MOV     R0,#?V0 + 2
   \   00004F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000052   EE           MOV     A,R6
   \   000053   FC           MOV     R4,A
   \   000054   EF           MOV     A,R7
   \   000055   FD           MOV     R5,A
   \   000056   AA..         MOV     R2,?V0 + 0
   \   000058   AB..         MOV     R3,?V0 + 1
   \   00005A   12....       LCALL   ??memcmp?relay
   \   00005D   7402         MOV     A,#0x2
   \   00005F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000062   8A..         MOV     ?V0 + 2,R2
   \   000064   8B..         MOV     ?V0 + 3,R3
   \   000066   E5..         MOV     A,?V0 + 2
   \   000068   45..         ORL     A,?V0 + 3
   \   00006A   701C         JNZ     ??check_prefix_0
   \   00006C   E5..         MOV     A,?V0 + 0
   \   00006E   2415         ADD     A,#0x15
   \   000070   F582         MOV     DPL,A
   \   000072   E5..         MOV     A,?V0 + 1
   \   000074   3400         ADDC    A,#0x0
   \   000076   F583         MOV     DPH,A
   \   000078   E0           MOVX    A,@DPTR
   \   000079   F8           MOV     R0,A
   \   00007A   EE           MOV     A,R6
   \   00007B   2415         ADD     A,#0x15
   \   00007D   F582         MOV     DPL,A
   \   00007F   EF           MOV     A,R7
   \   000080   3400         ADDC    A,#0x0
   \   000082   F583         MOV     DPH,A
   \   000084   E0           MOVX    A,@DPTR
   \   000085   68           XRL     A,R0
   \   000086   6078         JZ      ??check_prefix_1
    345              /* Nothing has changed. */
    346              return;
    347            }
    348          
    349            if(last_prefix != NULL) {
   \                     ??check_prefix_0:
   \   000088   E5..         MOV     A,?V0 + 0
   \   00008A   45..         ORL     A,?V0 + 1
   \   00008C   602D         JZ      ??check_prefix_2
    350              set_ip_from_prefix(&ipaddr, last_prefix);
   \   00008E                ; Setup parameters for call to function set_ip_from_prefix
   \   00008E   AC..         MOV     R4,?V0 + 0
   \   000090   AD..         MOV     R5,?V0 + 1
   \   000092   85..82       MOV     DPL,?XSP + 0
   \   000095   85..83       MOV     DPH,?XSP + 1
   \   000098   AA82         MOV     R2,DPL
   \   00009A   AB83         MOV     R3,DPH
   \   00009C   12....       LCALL   ??set_ip_from_prefix?relay
    351              rep = uip_ds6_addr_lookup(&ipaddr);
   \   00009F                ; Setup parameters for call to function uip_ds6_addr_lookup
   \   00009F   85..82       MOV     DPL,?XSP + 0
   \   0000A2   85..83       MOV     DPH,?XSP + 1
   \   0000A5   AA82         MOV     R2,DPL
   \   0000A7   AB83         MOV     R3,DPH
   \   0000A9   12....       LCALL   ??uip_ds6_addr_lookup?relay
   \   0000AC   8A..         MOV     ?V0 + 0,R2
   \   0000AE   8B..         MOV     ?V0 + 1,R3
   \   0000B0   AA..         MOV     R2,?V0 + 0
   \   0000B2   AB..         MOV     R3,?V0 + 1
    352              if(rep != NULL) {
   \   0000B4   EA           MOV     A,R2
   \   0000B5   4B           ORL     A,R3
   \   0000B6   6003         JZ      ??check_prefix_2
    353                PRINTF("RPL: removing global IP address ");
    354                PRINT6ADDR(&ipaddr);
    355                PRINTF("\n");
    356                uip_ds6_addr_rm(rep);
   \   0000B8                ; Setup parameters for call to function uip_ds6_addr_rm
   \   0000B8   12....       LCALL   ??uip_ds6_addr_rm?relay
    357              }
    358            }
    359            
    360            if(new_prefix != NULL) {
   \                     ??check_prefix_2:
   \   0000BB   EE           MOV     A,R6
   \   0000BC   4F           ORL     A,R7
   \   0000BD   6041         JZ      ??check_prefix_1
    361              set_ip_from_prefix(&ipaddr, new_prefix);
   \   0000BF                ; Setup parameters for call to function set_ip_from_prefix
   \   0000BF   EE           MOV     A,R6
   \   0000C0   FC           MOV     R4,A
   \   0000C1   EF           MOV     A,R7
   \   0000C2   FD           MOV     R5,A
   \   0000C3   85..82       MOV     DPL,?XSP + 0
   \   0000C6   85..83       MOV     DPH,?XSP + 1
   \   0000C9   AA82         MOV     R2,DPL
   \   0000CB   AB83         MOV     R3,DPH
   \   0000CD   12....       LCALL   ??set_ip_from_prefix?relay
    362              if(uip_ds6_addr_lookup(&ipaddr) == NULL) {
   \   0000D0                ; Setup parameters for call to function uip_ds6_addr_lookup
   \   0000D0   85..82       MOV     DPL,?XSP + 0
   \   0000D3   85..83       MOV     DPH,?XSP + 1
   \   0000D6   AA82         MOV     R2,DPL
   \   0000D8   AB83         MOV     R3,DPH
   \   0000DA   12....       LCALL   ??uip_ds6_addr_lookup?relay
   \   0000DD   8A..         MOV     ?V0 + 0,R2
   \   0000DF   8B..         MOV     ?V0 + 1,R3
   \   0000E1   E5..         MOV     A,?V0 + 0
   \   0000E3   45..         ORL     A,?V0 + 1
   \   0000E5   7019         JNZ     ??check_prefix_1
    363                PRINTF("RPL: adding global IP address ");
    364                PRINT6ADDR(&ipaddr);
    365                PRINTF("\n");
    366                uip_ds6_addr_add(&ipaddr, 0, ADDR_AUTOCONF);
   \   0000E7                ; Setup parameters for call to function uip_ds6_addr_add
   \   0000E7   90....       MOV     DPTR,#__Constant_0
   \   0000EA   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   0000ED   7901         MOV     R1,#0x1
   \   0000EF   7404         MOV     A,#0x4
   \   0000F1   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F4   AA82         MOV     R2,DPL
   \   0000F6   AB83         MOV     R3,DPH
   \   0000F8   12....       LCALL   ??uip_ds6_addr_add?relay
   \   0000FB   7404         MOV     A,#0x4
   \   0000FD   12....       LCALL   ?DEALLOC_XSTACK8
    367              }
    368            }
    369          }
   \                     ??check_prefix_1:
   \   000100   7410         MOV     A,#0x10
   \   000102   12....       LCALL   ?DEALLOC_XSTACK8
   \   000105   7F04         MOV     R7,#0x4
   \   000107   02....       LJMP    ?BANKED_LEAVE_XDATA
    370          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    371          int
    372          rpl_set_prefix(rpl_dag_t *dag, uip_ipaddr_t *prefix, unsigned len)
   \                     rpl_set_prefix:
    373          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 22
   \   000005   74EA         MOV     A,#-0x16
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
   \   00000E   8C..         MOV     ?V0 + 2,R4
   \   000010   8D..         MOV     ?V0 + 3,R5
    374            rpl_prefix_t last_prefix;
    375            uint8_t last_len = dag->prefix_info.length;
   \   000012   EE           MOV     A,R6
   \   000013   2435         ADD     A,#0x35
   \   000015   F582         MOV     DPL,A
   \   000017   EF           MOV     A,R7
   \   000018   3400         ADDC    A,#0x0
   \   00001A   F583         MOV     DPH,A
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   F5..         MOV     ?V0 + 4,A
   \   00001F   7426         MOV     A,#0x26
   \   000021   12....       LCALL   ?XSTACK_DISP0_8
   \   000024   E0           MOVX    A,@DPTR
   \   000025   F5..         MOV     ?V0 + 0,A
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F5..         MOV     ?V0 + 1,A
    376            
    377            if(len > 128) {
   \   00002B   C3           CLR     C
   \   00002C   E5..         MOV     A,?V0 + 0
   \   00002E   9481         SUBB    A,#-0x7f
   \   000030   E5..         MOV     A,?V0 + 1
   \   000032   9400         SUBB    A,#0x0
   \   000034   4007         JC      ??rpl_set_prefix_0
    378              return 0;
   \   000036   7A00         MOV     R2,#0x0
   \   000038   7B00         MOV     R3,#0x0
   \   00003A   02....       LJMP    ??rpl_set_prefix_1 & 0xFFFF
    379            }
    380            if(dag->prefix_info.length != 0) {
   \                     ??rpl_set_prefix_0:
   \   00003D   EE           MOV     A,R6
   \   00003E   2435         ADD     A,#0x35
   \   000040   F582         MOV     DPL,A
   \   000042   EF           MOV     A,R7
   \   000043   3400         ADDC    A,#0x0
   \   000045   F583         MOV     DPH,A
   \   000047   E0           MOVX    A,@DPTR
   \   000048   6024         JZ      ??rpl_set_prefix_2
    381              memcpy(&last_prefix, &dag->prefix_info, sizeof(rpl_prefix_t));
   \   00004A                ; Setup parameters for call to function memcpy
   \   00004A   75..16       MOV     ?V0 + 6,#0x16
   \   00004D   75..00       MOV     ?V0 + 7,#0x0
   \   000050   78..         MOV     R0,#?V0 + 6
   \   000052   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000055   EE           MOV     A,R6
   \   000056   2421         ADD     A,#0x21
   \   000058   FC           MOV     R4,A
   \   000059   EF           MOV     A,R7
   \   00005A   3400         ADDC    A,#0x0
   \   00005C   FD           MOV     R5,A
   \   00005D   7402         MOV     A,#0x2
   \   00005F   12....       LCALL   ?XSTACK_DISP0_8
   \   000062   AA82         MOV     R2,DPL
   \   000064   AB83         MOV     R3,DPH
   \   000066   12....       LCALL   ??memcpy?relay
   \   000069   7402         MOV     A,#0x2
   \   00006B   12....       LCALL   ?DEALLOC_XSTACK8
    382            }
    383            memset(&dag->prefix_info.prefix, 0, sizeof(dag->prefix_info.prefix));
   \                     ??rpl_set_prefix_2:
   \   00006E                ; Setup parameters for call to function memset
   \   00006E   75..10       MOV     ?V0 + 6,#0x10
   \   000071   75..00       MOV     ?V0 + 7,#0x0
   \   000074   78..         MOV     R0,#?V0 + 6
   \   000076   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000079   7C00         MOV     R4,#0x0
   \   00007B   7D00         MOV     R5,#0x0
   \   00007D   EE           MOV     A,R6
   \   00007E   2421         ADD     A,#0x21
   \   000080   FA           MOV     R2,A
   \   000081   EF           MOV     A,R7
   \   000082   3400         ADDC    A,#0x0
   \   000084   FB           MOV     R3,A
   \   000085   12....       LCALL   ??memset?relay
   \   000088   7402         MOV     A,#0x2
   \   00008A   12....       LCALL   ?DEALLOC_XSTACK8
    384            memcpy(&dag->prefix_info.prefix, prefix, (len + 7) / 8);
   \   00008D                ; Setup parameters for call to function memcpy
   \   00008D   E5..         MOV     A,?V0 + 0
   \   00008F   2407         ADD     A,#0x7
   \   000091   F5..         MOV     ?V0 + 6,A
   \   000093   E5..         MOV     A,?V0 + 1
   \   000095   3400         ADDC    A,#0x0
   \   000097   F5..         MOV     ?V0 + 7,A
   \   000099   7403         MOV     A,#0x3
   \   00009B   78..         MOV     R0,#?V0 + 6
   \   00009D   12....       LCALL   ?US_SHR
   \   0000A0   78..         MOV     R0,#?V0 + 6
   \   0000A2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A5   AC..         MOV     R4,?V0 + 2
   \   0000A7   AD..         MOV     R5,?V0 + 3
   \   0000A9   EE           MOV     A,R6
   \   0000AA   2421         ADD     A,#0x21
   \   0000AC   FA           MOV     R2,A
   \   0000AD   EF           MOV     A,R7
   \   0000AE   3400         ADDC    A,#0x0
   \   0000B0   FB           MOV     R3,A
   \   0000B1   12....       LCALL   ??memcpy?relay
   \   0000B4   7402         MOV     A,#0x2
   \   0000B6   12....       LCALL   ?DEALLOC_XSTACK8
    385            dag->prefix_info.length = len;
   \   0000B9   E5..         MOV     A,?V0 + 0
   \   0000BB   EE           MOV     A,R6
   \   0000BC   2435         ADD     A,#0x35
   \   0000BE   F582         MOV     DPL,A
   \   0000C0   EF           MOV     A,R7
   \   0000C1   3400         ADDC    A,#0x0
   \   0000C3   F583         MOV     DPH,A
   \   0000C5   E5..         MOV     A,?V0 + 0
   \   0000C7   F0           MOVX    @DPTR,A
    386            dag->prefix_info.flags = UIP_ND6_RA_FLAG_AUTONOMOUS;
   \   0000C8   EE           MOV     A,R6
   \   0000C9   2436         ADD     A,#0x36
   \   0000CB   F582         MOV     DPL,A
   \   0000CD   EF           MOV     A,R7
   \   0000CE   3400         ADDC    A,#0x0
   \   0000D0   F583         MOV     DPH,A
   \   0000D2   7440         MOV     A,#0x40
   \   0000D4   F0           MOVX    @DPTR,A
    387            PRINTF("RPL: Prefix set - will announce this in DIOs\n");
    388            /* Autoconfigure an address if this node does not already have an address
    389               with this prefix. Otherwise, update the prefix */
    390            if(last_len == 0) {
   \   0000D5   E5..         MOV     A,?V0 + 4
   \   0000D7   7011         JNZ     ??rpl_set_prefix_3
    391              PRINTF("rpl_set_prefix - prefix NULL\n");
    392              check_prefix(NULL, &dag->prefix_info);
   \   0000D9                ; Setup parameters for call to function check_prefix
   \   0000D9   EE           MOV     A,R6
   \   0000DA   2421         ADD     A,#0x21
   \   0000DC   FC           MOV     R4,A
   \   0000DD   EF           MOV     A,R7
   \   0000DE   3400         ADDC    A,#0x0
   \   0000E0   FD           MOV     R5,A
   \   0000E1   7A00         MOV     R2,#0x0
   \   0000E3   7B00         MOV     R3,#0x0
   \   0000E5   12....       LCALL   ??check_prefix?relay
   \   0000E8   8015         SJMP    ??rpl_set_prefix_4
    393            } else { 
    394              PRINTF("rpl_set_prefix - prefix NON-NULL\n");
    395              check_prefix(&last_prefix, &dag->prefix_info);
   \                     ??rpl_set_prefix_3:
   \   0000EA                ; Setup parameters for call to function check_prefix
   \   0000EA   EE           MOV     A,R6
   \   0000EB   2421         ADD     A,#0x21
   \   0000ED   FC           MOV     R4,A
   \   0000EE   EF           MOV     A,R7
   \   0000EF   3400         ADDC    A,#0x0
   \   0000F1   FD           MOV     R5,A
   \   0000F2   85..82       MOV     DPL,?XSP + 0
   \   0000F5   85..83       MOV     DPH,?XSP + 1
   \   0000F8   AA82         MOV     R2,DPL
   \   0000FA   AB83         MOV     R3,DPH
   \   0000FC   12....       LCALL   ??check_prefix?relay
    396            }
    397            return 1;
   \                     ??rpl_set_prefix_4:
   \   0000FF   7A01         MOV     R2,#0x1
   \   000101   7B00         MOV     R3,#0x0
   \                     ??rpl_set_prefix_1:
   \   000103   7416         MOV     A,#0x16
   \   000105   12....       LCALL   ?DEALLOC_XSTACK8
   \   000108   7F08         MOV     R7,#0x8
   \   00010A   02....       LJMP    ?BANKED_LEAVE_XDATA
    398          }
    399          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    400          int
    401          rpl_set_default_route(rpl_instance_t *instance, uip_ipaddr_t *from)
   \                     rpl_set_default_route:
    402          {
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
    403            if(instance->def_route != NULL) {
   \   00000D   EE           MOV     A,R6
   \   00000E   2479         ADD     A,#0x79
   \   000010   F582         MOV     DPL,A
   \   000012   EF           MOV     A,R7
   \   000013   3400         ADDC    A,#0x0
   \   000015   F583         MOV     DPH,A
   \   000017   E0           MOVX    A,@DPTR
   \   000018   F8           MOV     R0,A
   \   000019   A3           INC     DPTR
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   F9           MOV     R1,A
   \   00001C   E8           MOV     A,R0
   \   00001D   49           ORL     A,R1
   \   00001E   6023         JZ      ??rpl_set_default_route_0
    404              PRINTF("RPL: Removing default route through ");
    405              PRINT6ADDR(&instance->def_route->ipaddr);
    406              PRINTF("\n");
    407              uip_ds6_defrt_rm(instance->def_route);
   \   000020                ; Setup parameters for call to function uip_ds6_defrt_rm
   \   000020   EE           MOV     A,R6
   \   000021   2479         ADD     A,#0x79
   \   000023   F582         MOV     DPL,A
   \   000025   EF           MOV     A,R7
   \   000026   3400         ADDC    A,#0x0
   \   000028   F583         MOV     DPH,A
   \   00002A   E0           MOVX    A,@DPTR
   \   00002B   FA           MOV     R2,A
   \   00002C   A3           INC     DPTR
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   FB           MOV     R3,A
   \   00002F   12....       LCALL   ??uip_ds6_defrt_rm?relay
    408              instance->def_route = NULL;
   \   000032   EE           MOV     A,R6
   \   000033   2479         ADD     A,#0x79
   \   000035   F582         MOV     DPL,A
   \   000037   EF           MOV     A,R7
   \   000038   3400         ADDC    A,#0x0
   \   00003A   F583         MOV     DPH,A
   \   00003C   7400         MOV     A,#0x0
   \   00003E   F0           MOVX    @DPTR,A
   \   00003F   A3           INC     DPTR
   \   000040   7400         MOV     A,#0x0
   \   000042   F0           MOVX    @DPTR,A
    409            }
    410          
    411            if(from != NULL) {
   \                     ??rpl_set_default_route_0:
   \   000043   E5..         MOV     A,?V0 + 0
   \   000045   45..         ORL     A,?V0 + 1
   \   000047   606A         JZ      ??rpl_set_default_route_1
    412              PRINTF("RPL: Adding default route through ");
    413              PRINT6ADDR(from);
    414              PRINTF("\n");
    415              instance->def_route = uip_ds6_defrt_add(from,
    416                  RPL_LIFETIME(instance,
    417                      instance->default_lifetime));
   \   000049                ; Setup parameters for call to function uip_ds6_defrt_add
   \   000049   EE           MOV     A,R6
   \   00004A   248A         ADD     A,#-0x76
   \   00004C   F582         MOV     DPL,A
   \   00004E   EF           MOV     A,R7
   \   00004F   3400         ADDC    A,#0x0
   \   000051   F583         MOV     DPH,A
   \   000053   E0           MOVX    A,@DPTR
   \   000054   F5..         MOV     ?V0 + 4,A
   \   000056   A3           INC     DPTR
   \   000057   E0           MOVX    A,@DPTR
   \   000058   F5..         MOV     ?V0 + 5,A
   \   00005A   E4           CLR     A
   \   00005B   F5..         MOV     ?V0 + 6,A
   \   00005D   F5..         MOV     ?V0 + 7,A
   \   00005F   EE           MOV     A,R6
   \   000060   2482         ADD     A,#-0x7e
   \   000062   F582         MOV     DPL,A
   \   000064   EF           MOV     A,R7
   \   000065   3400         ADDC    A,#0x0
   \   000067   F583         MOV     DPH,A
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   F5..         MOV     ?V0 + 8,A
   \   00006C   E4           CLR     A
   \   00006D   F5..         MOV     ?V0 + 9,A
   \   00006F   F5..         MOV     ?V0 + 10,A
   \   000071   F5..         MOV     ?V0 + 11,A
   \   000073   78..         MOV     R0,#?V0 + 4
   \   000075   79..         MOV     R1,#?V0 + 8
   \   000077   12....       LCALL   ?L_MUL
   \   00007A   78..         MOV     R0,#?V0 + 4
   \   00007C   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00007F   AA..         MOV     R2,?V0 + 0
   \   000081   AB..         MOV     R3,?V0 + 1
   \   000083   12....       LCALL   ??uip_ds6_defrt_add?relay
   \   000086   7404         MOV     A,#0x4
   \   000088   12....       LCALL   ?DEALLOC_XSTACK8
   \   00008B   EE           MOV     A,R6
   \   00008C   2479         ADD     A,#0x79
   \   00008E   F582         MOV     DPL,A
   \   000090   EF           MOV     A,R7
   \   000091   3400         ADDC    A,#0x0
   \   000093   F583         MOV     DPH,A
   \   000095   EA           MOV     A,R2
   \   000096   F0           MOVX    @DPTR,A
   \   000097   A3           INC     DPTR
   \   000098   EB           MOV     A,R3
   \   000099   F0           MOVX    @DPTR,A
    418              if(instance->def_route == NULL) {
   \   00009A   EE           MOV     A,R6
   \   00009B   2479         ADD     A,#0x79
   \   00009D   F582         MOV     DPL,A
   \   00009F   EF           MOV     A,R7
   \   0000A0   3400         ADDC    A,#0x0
   \   0000A2   F583         MOV     DPH,A
   \   0000A4   E0           MOVX    A,@DPTR
   \   0000A5   F8           MOV     R0,A
   \   0000A6   A3           INC     DPTR
   \   0000A7   E0           MOVX    A,@DPTR
   \   0000A8   F9           MOV     R1,A
   \   0000A9   E8           MOV     A,R0
   \   0000AA   49           ORL     A,R1
   \   0000AB   702B         JNZ     ??rpl_set_default_route_2
    419                return 0;
   \   0000AD   7A00         MOV     R2,#0x0
   \   0000AF   7B00         MOV     R3,#0x0
   \   0000B1   8029         SJMP    ??rpl_set_default_route_3
    420              }
    421            } else {
    422              PRINTF("RPL: Removing default route\n");
    423              if(instance->def_route != NULL) {
   \                     ??rpl_set_default_route_1:
   \   0000B3   EE           MOV     A,R6
   \   0000B4   2479         ADD     A,#0x79
   \   0000B6   F582         MOV     DPL,A
   \   0000B8   EF           MOV     A,R7
   \   0000B9   3400         ADDC    A,#0x0
   \   0000BB   F583         MOV     DPH,A
   \   0000BD   E0           MOVX    A,@DPTR
   \   0000BE   F8           MOV     R0,A
   \   0000BF   A3           INC     DPTR
   \   0000C0   E0           MOVX    A,@DPTR
   \   0000C1   F9           MOV     R1,A
   \   0000C2   E8           MOV     A,R0
   \   0000C3   49           ORL     A,R1
   \   0000C4   6012         JZ      ??rpl_set_default_route_2
    424                uip_ds6_defrt_rm(instance->def_route);
   \   0000C6                ; Setup parameters for call to function uip_ds6_defrt_rm
   \   0000C6   EE           MOV     A,R6
   \   0000C7   2479         ADD     A,#0x79
   \   0000C9   F582         MOV     DPL,A
   \   0000CB   EF           MOV     A,R7
   \   0000CC   3400         ADDC    A,#0x0
   \   0000CE   F583         MOV     DPH,A
   \   0000D0   E0           MOVX    A,@DPTR
   \   0000D1   FA           MOV     R2,A
   \   0000D2   A3           INC     DPTR
   \   0000D3   E0           MOVX    A,@DPTR
   \   0000D4   FB           MOV     R3,A
   \   0000D5   12....       LCALL   ??uip_ds6_defrt_rm?relay
    425              } else {
    426                PRINTF("RPL: Not actually removing default route, since instance had no default route\n");
    427              }
    428            }
    429            return 1;
   \                     ??rpl_set_default_route_2:
   \   0000D8   7A01         MOV     R2,#0x1
   \   0000DA   7B00         MOV     R3,#0x0
   \                     ??rpl_set_default_route_3:
   \   0000DC   7F0C         MOV     R7,#0xc
   \   0000DE   02....       LJMP    ?BANKED_LEAVE_XDATA
    430          }
    431          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    432          rpl_instance_t *
    433          rpl_alloc_instance(uint8_t instance_id)
   \                     rpl_alloc_instance:
    434          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 0,R1
    435            rpl_instance_t *instance, *end;
    436          
    437            for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES;
   \   000007   7E..         MOV     R6,#instance_table & 0xff
   \   000009   7F..         MOV     R7,#(instance_table >> 8) & 0xff
   \   00000B   EE           MOV     A,R6
   \   00000C   24AE         ADD     A,#-0x52
   \   00000E   F8           MOV     R0,A
   \   00000F   EF           MOV     A,R7
   \   000010   3400         ADDC    A,#0x0
   \   000012   F9           MOV     R1,A
   \   000013   8008         SJMP    ??rpl_alloc_instance_0
    438                instance < end; ++instance) {
   \                     ??rpl_alloc_instance_1:
   \   000015   EE           MOV     A,R6
   \   000016   24AE         ADD     A,#-0x52
   \   000018   FE           MOV     R6,A
   \   000019   EF           MOV     A,R7
   \   00001A   3400         ADDC    A,#0x0
   \   00001C   FF           MOV     R7,A
   \                     ??rpl_alloc_instance_0:
   \   00001D   C3           CLR     C
   \   00001E   EE           MOV     A,R6
   \   00001F   98           SUBB    A,R0
   \   000020   EF           MOV     A,R7
   \   000021   99           SUBB    A,R1
   \   000022   505B         JNC     ??rpl_alloc_instance_2
    439              if(instance->used == 0) {
   \   000024   EE           MOV     A,R6
   \   000025   247C         ADD     A,#0x7c
   \   000027   F582         MOV     DPL,A
   \   000029   EF           MOV     A,R7
   \   00002A   3400         ADDC    A,#0x0
   \   00002C   F583         MOV     DPH,A
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   70E4         JNZ     ??rpl_alloc_instance_1
    440                memset(instance, 0, sizeof(*instance));
   \   000031                ; Setup parameters for call to function memset
   \   000031   75..AE       MOV     ?V0 + 2,#-0x52
   \   000034   75..00       MOV     ?V0 + 3,#0x0
   \   000037   78..         MOV     R0,#?V0 + 2
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00003C   7C00         MOV     R4,#0x0
   \   00003E   7D00         MOV     R5,#0x0
   \   000040   EE           MOV     A,R6
   \   000041   FA           MOV     R2,A
   \   000042   EF           MOV     A,R7
   \   000043   FB           MOV     R3,A
   \   000044   12....       LCALL   ??memset?relay
   \   000047   7402         MOV     A,#0x2
   \   000049   12....       LCALL   ?DEALLOC_XSTACK8
    441                instance->instance_id = instance_id;
   \   00004C   E5..         MOV     A,?V0 + 0
   \   00004E   EE           MOV     A,R6
   \   00004F   247B         ADD     A,#0x7b
   \   000051   F582         MOV     DPL,A
   \   000053   EF           MOV     A,R7
   \   000054   3400         ADDC    A,#0x0
   \   000056   F583         MOV     DPH,A
   \   000058   E5..         MOV     A,?V0 + 0
   \   00005A   F0           MOVX    @DPTR,A
    442                instance->def_route = NULL;
   \   00005B   EE           MOV     A,R6
   \   00005C   2479         ADD     A,#0x79
   \   00005E   F582         MOV     DPL,A
   \   000060   EF           MOV     A,R7
   \   000061   3400         ADDC    A,#0x0
   \   000063   F583         MOV     DPH,A
   \   000065   7400         MOV     A,#0x0
   \   000067   F0           MOVX    @DPTR,A
   \   000068   A3           INC     DPTR
   \   000069   7400         MOV     A,#0x0
   \   00006B   F0           MOVX    @DPTR,A
    443                instance->used = 1;
   \   00006C   EE           MOV     A,R6
   \   00006D   247C         ADD     A,#0x7c
   \   00006F   F582         MOV     DPL,A
   \   000071   EF           MOV     A,R7
   \   000072   3400         ADDC    A,#0x0
   \   000074   F583         MOV     DPH,A
   \   000076   7401         MOV     A,#0x1
   \   000078   F0           MOVX    @DPTR,A
    444                return instance;
   \   000079   EE           MOV     A,R6
   \   00007A   FA           MOV     R2,A
   \   00007B   EF           MOV     A,R7
   \   00007C   FB           MOV     R3,A
   \   00007D   8004         SJMP    ??rpl_alloc_instance_3
    445              }
    446            }
    447            return NULL;
   \                     ??rpl_alloc_instance_2:
   \   00007F   7A00         MOV     R2,#0x0
   \   000081   7B00         MOV     R3,#0x0
   \                     ??rpl_alloc_instance_3:
   \   000083   7F04         MOV     R7,#0x4
   \   000085   02....       LJMP    ?BANKED_LEAVE_XDATA
    448          }
    449          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    450          rpl_dag_t *
    451          rpl_alloc_dag(uint8_t instance_id, uip_ipaddr_t *dag_id)
   \                     rpl_alloc_dag:
    452          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 2,R1
    453            rpl_dag_t *dag, *end;
    454            rpl_instance_t *instance;
    455          
    456            instance = rpl_get_instance(instance_id);
   \   000007                ; Setup parameters for call to function rpl_get_instance
   \   000007   A9..         MOV     R1,?V0 + 2
   \   000009   12....       LCALL   ??rpl_get_instance?relay
   \   00000C   8A..         MOV     ?V0 + 4,R2
   \   00000E   8B..         MOV     ?V0 + 5,R3
   \   000010   85....       MOV     ?V0 + 0,?V0 + 4
   \   000013   85....       MOV     ?V0 + 1,?V0 + 5
    457            if(instance == NULL) {
   \   000016   E5..         MOV     A,?V0 + 0
   \   000018   45..         ORL     A,?V0 + 1
   \   00001A   701C         JNZ     ??rpl_alloc_dag_0
    458              instance = rpl_alloc_instance(instance_id);
   \   00001C                ; Setup parameters for call to function rpl_alloc_instance
   \   00001C   A9..         MOV     R1,?V0 + 2
   \   00001E   12....       LCALL   ??rpl_alloc_instance?relay
   \   000021   8A..         MOV     ?V0 + 4,R2
   \   000023   8B..         MOV     ?V0 + 5,R3
   \   000025   85....       MOV     ?V0 + 0,?V0 + 4
   \   000028   85....       MOV     ?V0 + 1,?V0 + 5
    459              if(instance == NULL) {
   \   00002B   E5..         MOV     A,?V0 + 0
   \   00002D   45..         ORL     A,?V0 + 1
   \   00002F   7007         JNZ     ??rpl_alloc_dag_0
    460                RPL_STAT(rpl_stats.mem_overflows++);
    461                return NULL;
   \   000031   7A00         MOV     R2,#0x0
   \   000033   7B00         MOV     R3,#0x0
   \   000035   02....       LJMP    ??rpl_alloc_dag_1 & 0xFFFF
    462              }
    463            }
    464          
    465            for(dag = &instance->dag_table[0], end = dag + RPL_MAX_DAG_PER_INSTANCE; dag < end; ++dag) {
   \                     ??rpl_alloc_dag_0:
   \   000038   E5..         MOV     A,?V0 + 0
   \   00003A   240B         ADD     A,#0xb
   \   00003C   FE           MOV     R6,A
   \   00003D   E5..         MOV     A,?V0 + 1
   \   00003F   3400         ADDC    A,#0x0
   \   000041   FF           MOV     R7,A
   \   000042   EE           MOV     A,R6
   \   000043   246E         ADD     A,#0x6e
   \   000045   F8           MOV     R0,A
   \   000046   EF           MOV     A,R7
   \   000047   3400         ADDC    A,#0x0
   \   000049   F9           MOV     R1,A
   \   00004A   8008         SJMP    ??rpl_alloc_dag_2
   \                     ??rpl_alloc_dag_3:
   \   00004C   EE           MOV     A,R6
   \   00004D   2437         ADD     A,#0x37
   \   00004F   FE           MOV     R6,A
   \   000050   EF           MOV     A,R7
   \   000051   3400         ADDC    A,#0x0
   \   000053   FF           MOV     R7,A
   \                     ??rpl_alloc_dag_2:
   \   000054   C3           CLR     C
   \   000055   EE           MOV     A,R6
   \   000056   98           SUBB    A,R0
   \   000057   EF           MOV     A,R7
   \   000058   99           SUBB    A,R1
   \   000059   506E         JNC     ??rpl_alloc_dag_4
    466              if(!dag->used) {
   \   00005B   EE           MOV     A,R6
   \   00005C   2415         ADD     A,#0x15
   \   00005E   F582         MOV     DPL,A
   \   000060   EF           MOV     A,R7
   \   000061   3400         ADDC    A,#0x0
   \   000063   F583         MOV     DPH,A
   \   000065   E0           MOVX    A,@DPTR
   \   000066   70E4         JNZ     ??rpl_alloc_dag_3
    467                memset(dag, 0, sizeof(*dag));
   \   000068                ; Setup parameters for call to function memset
   \   000068   75..37       MOV     ?V0 + 4,#0x37
   \   00006B   75..00       MOV     ?V0 + 5,#0x0
   \   00006E   78..         MOV     R0,#?V0 + 4
   \   000070   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000073   7C00         MOV     R4,#0x0
   \   000075   7D00         MOV     R5,#0x0
   \   000077   EE           MOV     A,R6
   \   000078   FA           MOV     R2,A
   \   000079   EF           MOV     A,R7
   \   00007A   FB           MOV     R3,A
   \   00007B   12....       LCALL   ??memset?relay
   \   00007E   7402         MOV     A,#0x2
   \   000080   12....       LCALL   ?DEALLOC_XSTACK8
    468                dag->used = 1;
   \   000083   EE           MOV     A,R6
   \   000084   2415         ADD     A,#0x15
   \   000086   F582         MOV     DPL,A
   \   000088   EF           MOV     A,R7
   \   000089   3400         ADDC    A,#0x0
   \   00008B   F583         MOV     DPH,A
   \   00008D   7401         MOV     A,#0x1
   \   00008F   F0           MOVX    @DPTR,A
    469                dag->rank = INFINITE_RANK;
   \   000090   EE           MOV     A,R6
   \   000091   2419         ADD     A,#0x19
   \   000093   F582         MOV     DPL,A
   \   000095   EF           MOV     A,R7
   \   000096   3400         ADDC    A,#0x0
   \   000098   F583         MOV     DPH,A
   \   00009A   74FF         MOV     A,#-0x1
   \   00009C   F0           MOVX    @DPTR,A
   \   00009D   A3           INC     DPTR
   \   00009E   74FF         MOV     A,#-0x1
   \   0000A0   F0           MOVX    @DPTR,A
    470                dag->min_rank = INFINITE_RANK;
   \   0000A1   EE           MOV     A,R6
   \   0000A2   2410         ADD     A,#0x10
   \   0000A4   F582         MOV     DPL,A
   \   0000A6   EF           MOV     A,R7
   \   0000A7   3400         ADDC    A,#0x0
   \   0000A9   F583         MOV     DPH,A
   \   0000AB   74FF         MOV     A,#-0x1
   \   0000AD   F0           MOVX    @DPTR,A
   \   0000AE   A3           INC     DPTR
   \   0000AF   74FF         MOV     A,#-0x1
   \   0000B1   F0           MOVX    @DPTR,A
    471                dag->instance = instance;
   \   0000B2   EE           MOV     A,R6
   \   0000B3   241B         ADD     A,#0x1b
   \   0000B5   F582         MOV     DPL,A
   \   0000B7   EF           MOV     A,R7
   \   0000B8   3400         ADDC    A,#0x0
   \   0000BA   F583         MOV     DPH,A
   \   0000BC   E5..         MOV     A,?V0 + 0
   \   0000BE   F0           MOVX    @DPTR,A
   \   0000BF   A3           INC     DPTR
   \   0000C0   E5..         MOV     A,?V0 + 1
   \   0000C2   F0           MOVX    @DPTR,A
    472                return dag;
   \   0000C3   EE           MOV     A,R6
   \   0000C4   FA           MOV     R2,A
   \   0000C5   EF           MOV     A,R7
   \   0000C6   FB           MOV     R3,A
   \   0000C7   800B         SJMP    ??rpl_alloc_dag_1
    473              }
    474            }
    475          
    476            RPL_STAT(rpl_stats.mem_overflows++);
    477            rpl_free_instance(instance);
   \                     ??rpl_alloc_dag_4:
   \   0000C9                ; Setup parameters for call to function rpl_free_instance
   \   0000C9   AA..         MOV     R2,?V0 + 0
   \   0000CB   AB..         MOV     R3,?V0 + 1
   \   0000CD   12....       LCALL   ??rpl_free_instance?relay
    478            return NULL;
   \   0000D0   7A00         MOV     R2,#0x0
   \   0000D2   7B00         MOV     R3,#0x0
   \                     ??rpl_alloc_dag_1:
   \   0000D4   7F06         MOV     R7,#0x6
   \   0000D6   02....       LJMP    ?BANKED_LEAVE_XDATA
    479          }
    480          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    481          void
    482          rpl_set_default_instance(rpl_instance_t *instance)
   \                     rpl_set_default_instance:
    483          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    484            default_instance = instance;
   \   000004   90....       MOV     DPTR,#default_instance
   \   000007   EA           MOV     A,R2
   \   000008   F0           MOVX    @DPTR,A
   \   000009   A3           INC     DPTR
   \   00000A   EB           MOV     A,R3
   \   00000B   F0           MOVX    @DPTR,A
    485          }
   \   00000C   D083         POP     DPH
   \   00000E   D082         POP     DPL
   \   000010   02....       LJMP    ?BRET
    486          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    487          void
    488          rpl_free_instance(rpl_instance_t *instance)
   \                     rpl_free_instance:
    489          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    490            rpl_dag_t *dag;
    491            rpl_dag_t *end;
    492          
    493            PRINTF("RPL: Leaving the instance %u\n", instance->instance_id);
    494          
    495            /* Remove any DAG inside this instance */
    496            for(dag = &instance->dag_table[0], end = dag + RPL_MAX_DAG_PER_INSTANCE; dag < end; ++dag) {
   \   000009   EE           MOV     A,R6
   \   00000A   240B         ADD     A,#0xb
   \   00000C   F5..         MOV     ?V0 + 0,A
   \   00000E   EF           MOV     A,R7
   \   00000F   3400         ADDC    A,#0x0
   \   000011   F5..         MOV     ?V0 + 1,A
   \   000013   E5..         MOV     A,?V0 + 0
   \   000015   246E         ADD     A,#0x6e
   \   000017   F5..         MOV     ?V0 + 2,A
   \   000019   E5..         MOV     A,?V0 + 1
   \   00001B   3400         ADDC    A,#0x0
   \   00001D   F5..         MOV     ?V0 + 3,A
   \   00001F   8022         SJMP    ??rpl_free_instance_0
    497              if(dag->used) {
   \                     ??rpl_free_instance_1:
   \   000021   E5..         MOV     A,?V0 + 0
   \   000023   2415         ADD     A,#0x15
   \   000025   F582         MOV     DPL,A
   \   000027   E5..         MOV     A,?V0 + 1
   \   000029   3400         ADDC    A,#0x0
   \   00002B   F583         MOV     DPH,A
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   6007         JZ      ??rpl_free_instance_2
    498                rpl_free_dag(dag);
   \   000030                ; Setup parameters for call to function rpl_free_dag
   \   000030   AA..         MOV     R2,?V0 + 0
   \   000032   AB..         MOV     R3,?V0 + 1
   \   000034   12....       LCALL   ??rpl_free_dag?relay
    499              }
    500            }
   \                     ??rpl_free_instance_2:
   \   000037   E5..         MOV     A,?V0 + 0
   \   000039   2437         ADD     A,#0x37
   \   00003B   F5..         MOV     ?V0 + 0,A
   \   00003D   E5..         MOV     A,?V0 + 1
   \   00003F   3400         ADDC    A,#0x0
   \   000041   F5..         MOV     ?V0 + 1,A
   \                     ??rpl_free_instance_0:
   \   000043   A8..         MOV     R0,?V0 + 2
   \   000045   A9..         MOV     R1,?V0 + 3
   \   000047   C3           CLR     C
   \   000048   E5..         MOV     A,?V0 + 0
   \   00004A   98           SUBB    A,R0
   \   00004B   E5..         MOV     A,?V0 + 1
   \   00004D   99           SUBB    A,R1
   \   00004E   40D1         JC      ??rpl_free_instance_1
    501          
    502            rpl_set_default_route(instance, NULL);
   \   000050                ; Setup parameters for call to function rpl_set_default_route
   \   000050   7C00         MOV     R4,#0x0
   \   000052   7D00         MOV     R5,#0x0
   \   000054   EE           MOV     A,R6
   \   000055   FA           MOV     R2,A
   \   000056   EF           MOV     A,R7
   \   000057   FB           MOV     R3,A
   \   000058   12....       LCALL   ??rpl_set_default_route?relay
    503          
    504            ctimer_stop(&instance->dio_timer);
   \   00005B                ; Setup parameters for call to function ctimer_stop
   \   00005B   EE           MOV     A,R6
   \   00005C   248E         ADD     A,#-0x72
   \   00005E   FA           MOV     R2,A
   \   00005F   EF           MOV     A,R7
   \   000060   3400         ADDC    A,#0x0
   \   000062   FB           MOV     R3,A
   \   000063   12....       LCALL   ??ctimer_stop?relay
    505            ctimer_stop(&instance->dao_timer);
   \   000066                ; Setup parameters for call to function ctimer_stop
   \   000066   EE           MOV     A,R6
   \   000067   249E         ADD     A,#-0x62
   \   000069   FA           MOV     R2,A
   \   00006A   EF           MOV     A,R7
   \   00006B   3400         ADDC    A,#0x0
   \   00006D   FB           MOV     R3,A
   \   00006E   12....       LCALL   ??ctimer_stop?relay
    506          
    507            if(default_instance == instance) {
   \   000071   90....       MOV     DPTR,#default_instance
   \   000074   E0           MOVX    A,@DPTR
   \   000075   F8           MOV     R0,A
   \   000076   A3           INC     DPTR
   \   000077   E0           MOVX    A,@DPTR
   \   000078   F9           MOV     R1,A
   \   000079   EE           MOV     A,R6
   \   00007A   68           XRL     A,R0
   \   00007B   7002         JNZ     ??rpl_free_instance_3
   \   00007D   EF           MOV     A,R7
   \   00007E   69           XRL     A,R1
   \                     ??rpl_free_instance_3:
   \   00007F   700A         JNZ     ??rpl_free_instance_4
    508              default_instance = NULL;
   \   000081   90....       MOV     DPTR,#default_instance
   \   000084   7400         MOV     A,#0x0
   \   000086   F0           MOVX    @DPTR,A
   \   000087   A3           INC     DPTR
   \   000088   7400         MOV     A,#0x0
   \   00008A   F0           MOVX    @DPTR,A
    509            }
    510          
    511            instance->used = 0;
   \                     ??rpl_free_instance_4:
   \   00008B   EE           MOV     A,R6
   \   00008C   247C         ADD     A,#0x7c
   \   00008E   F582         MOV     DPL,A
   \   000090   EF           MOV     A,R7
   \   000091   3400         ADDC    A,#0x0
   \   000093   F583         MOV     DPH,A
   \   000095   7400         MOV     A,#0x0
   \   000097   F0           MOVX    @DPTR,A
    512          }
   \   000098   7F04         MOV     R7,#0x4
   \   00009A   02....       LJMP    ?BANKED_LEAVE_XDATA
    513          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    514          void
    515          rpl_free_dag(rpl_dag_t *dag)
   \                     rpl_free_dag:
    516          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    517            if(dag->joined) {
   \   000009   EE           MOV     A,R6
   \   00000A   2416         ADD     A,#0x16
   \   00000C   F582         MOV     DPL,A
   \   00000E   EF           MOV     A,R7
   \   00000F   3400         ADDC    A,#0x0
   \   000011   F583         MOV     DPH,A
   \   000013   E0           MOVX    A,@DPTR
   \   000014   603D         JZ      ??rpl_free_dag_0
    518              PRINTF("RPL: Leaving the DAG ");
    519              PRINT6ADDR(&dag->dag_id);
    520              PRINTF("\n");
    521              dag->joined = 0;
   \   000016   EE           MOV     A,R6
   \   000017   2416         ADD     A,#0x16
   \   000019   F582         MOV     DPL,A
   \   00001B   EF           MOV     A,R7
   \   00001C   3400         ADDC    A,#0x0
   \   00001E   F583         MOV     DPH,A
   \   000020   7400         MOV     A,#0x0
   \   000022   F0           MOVX    @DPTR,A
    522          
    523              /* Remove routes installed by DAOs. */
    524              rpl_remove_routes(dag);
   \   000023                ; Setup parameters for call to function rpl_remove_routes
   \   000023   EE           MOV     A,R6
   \   000024   FA           MOV     R2,A
   \   000025   EF           MOV     A,R7
   \   000026   FB           MOV     R3,A
   \   000027   12....       LCALL   ??rpl_remove_routes?relay
    525          
    526             /* Remove autoconfigured address */
    527              if((dag->prefix_info.flags & UIP_ND6_RA_FLAG_AUTONOMOUS)) {
   \   00002A   EE           MOV     A,R6
   \   00002B   2436         ADD     A,#0x36
   \   00002D   F582         MOV     DPL,A
   \   00002F   EF           MOV     A,R7
   \   000030   3400         ADDC    A,#0x0
   \   000032   F583         MOV     DPH,A
   \   000034   E0           MOVX    A,@DPTR
   \   000035   A2E6         MOV     C,0xE0 /* A   */.6
   \   000037   500F         JNC     ??rpl_free_dag_1
    528                check_prefix(&dag->prefix_info, NULL);
   \   000039                ; Setup parameters for call to function check_prefix
   \   000039   7C00         MOV     R4,#0x0
   \   00003B   7D00         MOV     R5,#0x0
   \   00003D   EE           MOV     A,R6
   \   00003E   2421         ADD     A,#0x21
   \   000040   FA           MOV     R2,A
   \   000041   EF           MOV     A,R7
   \   000042   3400         ADDC    A,#0x0
   \   000044   FB           MOV     R3,A
   \   000045   12....       LCALL   ??check_prefix?relay
    529              }
    530          
    531              remove_parents(dag, 0);
   \                     ??rpl_free_dag_1:
   \   000048                ; Setup parameters for call to function remove_parents
   \   000048   7C00         MOV     R4,#0x0
   \   00004A   7D00         MOV     R5,#0x0
   \   00004C   EE           MOV     A,R6
   \   00004D   FA           MOV     R2,A
   \   00004E   EF           MOV     A,R7
   \   00004F   FB           MOV     R3,A
   \   000050   12....       LCALL   ??remove_parents?relay
    532            }
    533            dag->used = 0;
   \                     ??rpl_free_dag_0:
   \   000053   EE           MOV     A,R6
   \   000054   2415         ADD     A,#0x15
   \   000056   F582         MOV     DPL,A
   \   000058   EF           MOV     A,R7
   \   000059   3400         ADDC    A,#0x0
   \   00005B   F583         MOV     DPH,A
   \   00005D   7400         MOV     A,#0x0
   \   00005F   F0           MOVX    @DPTR,A
    534          }
   \   000060   7F01         MOV     R7,#0x1
   \   000062   02....       LJMP    ?BANKED_LEAVE_XDATA
    535          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    536          rpl_parent_t *
    537          rpl_add_parent(rpl_dag_t *dag, rpl_dio_t *dio, uip_ipaddr_t *addr)
   \                     rpl_add_parent:
    538          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
   \   00000D   740E         MOV     A,#0xe
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   FA           MOV     R2,A
   \   000014   A3           INC     DPTR
   \   000015   E0           MOVX    A,@DPTR
   \   000016   FB           MOV     R3,A
    539            rpl_parent_t *p = NULL;
   \   000017   75..00       MOV     ?V0 + 2,#0x0
   \   00001A   75..00       MOV     ?V0 + 3,#0x0
    540            /* Is the parent known by ds6? Drop this request if not.
    541             * Typically, the parent is added upon receiving a DIO. */
    542            uip_lladdr_t *lladdr = uip_ds6_nbr_lladdr_from_ipaddr(addr);
   \   00001D                ; Setup parameters for call to function uip_ds6_nbr_lladdr_from_ipaddr
   \   00001D   12....       LCALL   ??uip_ds6_nbr_lladdr_from_ipaddr?relay
   \   000020   8A..         MOV     ?V0 + 4,R2
   \   000022   8B..         MOV     ?V0 + 5,R3
   \   000024   AC..         MOV     R4,?V0 + 4
   \   000026   AD..         MOV     R5,?V0 + 5
    543          
    544            PRINTF("RPL: rpl_add_parent lladdr %p\n", lladdr);
    545            if(lladdr != NULL) {
   \   000028   EC           MOV     A,R4
   \   000029   4D           ORL     A,R5
   \   00002A   6071         JZ      ??rpl_add_parent_0
    546              /* Add parent in rpl_parents */
    547              p = nbr_table_add_lladdr(rpl_parents, (rimeaddr_t *)lladdr);
   \   00002C                ; Setup parameters for call to function nbr_table_add_lladdr
   \   00002C   90....       MOV     DPTR,#rpl_parents
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   FA           MOV     R2,A
   \   000031   A3           INC     DPTR
   \   000032   E0           MOVX    A,@DPTR
   \   000033   FB           MOV     R3,A
   \   000034   12....       LCALL   ??nbr_table_add_lladdr?relay
   \   000037   8A..         MOV     ?V0 + 4,R2
   \   000039   8B..         MOV     ?V0 + 5,R3
   \   00003B   85....       MOV     ?V0 + 2,?V0 + 4
   \   00003E   85....       MOV     ?V0 + 3,?V0 + 5
    548              p->dag = dag;
   \   000041   85..82       MOV     DPL,?V0 + 2
   \   000044   85..83       MOV     DPH,?V0 + 3
   \   000047   A3           INC     DPTR
   \   000048   A3           INC     DPTR
   \   000049   EE           MOV     A,R6
   \   00004A   F0           MOVX    @DPTR,A
   \   00004B   A3           INC     DPTR
   \   00004C   EF           MOV     A,R7
   \   00004D   F0           MOVX    @DPTR,A
    549              p->rank = dio->rank;
   \   00004E   E5..         MOV     A,?V0 + 0
   \   000050   2412         ADD     A,#0x12
   \   000052   F582         MOV     DPL,A
   \   000054   E5..         MOV     A,?V0 + 1
   \   000056   3400         ADDC    A,#0x0
   \   000058   F583         MOV     DPH,A
   \   00005A   E0           MOVX    A,@DPTR
   \   00005B   F8           MOV     R0,A
   \   00005C   A3           INC     DPTR
   \   00005D   E0           MOVX    A,@DPTR
   \   00005E   F9           MOV     R1,A
   \   00005F   85..82       MOV     DPL,?V0 + 2
   \   000062   85..83       MOV     DPH,?V0 + 3
   \   000065   A3           INC     DPTR
   \   000066   A3           INC     DPTR
   \   000067   A3           INC     DPTR
   \   000068   A3           INC     DPTR
   \   000069   E8           MOV     A,R0
   \   00006A   F0           MOVX    @DPTR,A
   \   00006B   A3           INC     DPTR
   \   00006C   E9           MOV     A,R1
   \   00006D   F0           MOVX    @DPTR,A
    550              p->dtsn = dio->dtsn;
   \   00006E   E5..         MOV     A,?V0 + 0
   \   000070   2419         ADD     A,#0x19
   \   000072   F582         MOV     DPL,A
   \   000074   E5..         MOV     A,?V0 + 1
   \   000076   3400         ADDC    A,#0x0
   \   000078   F583         MOV     DPH,A
   \   00007A   E0           MOVX    A,@DPTR
   \   00007B   85..82       MOV     DPL,?V0 + 2
   \   00007E   85..83       MOV     DPH,?V0 + 3
   \   000081   A3           INC     DPTR
   \   000082   A3           INC     DPTR
   \   000083   A3           INC     DPTR
   \   000084   A3           INC     DPTR
   \   000085   A3           INC     DPTR
   \   000086   A3           INC     DPTR
   \   000087   A3           INC     DPTR
   \   000088   A3           INC     DPTR
   \   000089   F0           MOVX    @DPTR,A
    551              p->link_metric = RPL_INIT_LINK_METRIC;
   \   00008A   85..82       MOV     DPL,?V0 + 2
   \   00008D   85..83       MOV     DPH,?V0 + 3
   \   000090   A3           INC     DPTR
   \   000091   A3           INC     DPTR
   \   000092   A3           INC     DPTR
   \   000093   A3           INC     DPTR
   \   000094   A3           INC     DPTR
   \   000095   A3           INC     DPTR
   \   000096   7400         MOV     A,#0x0
   \   000098   F0           MOVX    @DPTR,A
   \   000099   A3           INC     DPTR
   \   00009A   7405         MOV     A,#0x5
   \   00009C   F0           MOVX    @DPTR,A
    552          #if RPL_DAG_MC != RPL_DAG_MC_NONE
    553              memcpy(&p->mc, &dio->mc, sizeof(p->mc));
    554          #endif /* RPL_DAG_MC != RPL_DAG_MC_NONE */
    555            }
    556          
    557            return p;
   \                     ??rpl_add_parent_0:
   \   00009D   AA..         MOV     R2,?V0 + 2
   \   00009F   AB..         MOV     R3,?V0 + 3
   \   0000A1   7F06         MOV     R7,#0x6
   \   0000A3   02....       LJMP    ?BANKED_LEAVE_XDATA
    558          }
    559          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    560          static rpl_parent_t *
    561          find_parent_any_dag_any_instance(uip_ipaddr_t *addr)
   \                     find_parent_any_dag_any_instance:
    562          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    563            uip_ds6_nbr_t *ds6_nbr = uip_ds6_nbr_lookup(addr);
   \   000005                ; Setup parameters for call to function uip_ds6_nbr_lookup
   \   000005   12....       LCALL   ??uip_ds6_nbr_lookup?relay
   \   000008   8A..         MOV     ?V0 + 0,R2
   \   00000A   8B..         MOV     ?V0 + 1,R3
   \   00000C   AA..         MOV     R2,?V0 + 0
   \   00000E   AB..         MOV     R3,?V0 + 1
    564            uip_lladdr_t *lladdr = uip_ds6_nbr_get_ll(ds6_nbr);
   \   000010                ; Setup parameters for call to function uip_ds6_nbr_get_ll
   \   000010   12....       LCALL   ??uip_ds6_nbr_get_ll?relay
   \   000013   8A..         MOV     ?V0 + 0,R2
   \   000015   8B..         MOV     ?V0 + 1,R3
   \   000017   AC..         MOV     R4,?V0 + 0
   \   000019   AD..         MOV     R5,?V0 + 1
    565            return nbr_table_get_from_lladdr(rpl_parents, (rimeaddr_t *)lladdr);
   \   00001B                ; Setup parameters for call to function nbr_table_get_from_lladdr
   \   00001B   90....       MOV     DPTR,#rpl_parents
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   FA           MOV     R2,A
   \   000020   A3           INC     DPTR
   \   000021   E0           MOVX    A,@DPTR
   \   000022   FB           MOV     R3,A
   \   000023   12....       LCALL   ??nbr_table_get_from_lladdr?relay
   \   000026   7F02         MOV     R7,#0x2
   \   000028   02....       LJMP    ?BANKED_LEAVE_XDATA
    566          }
    567          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    568          rpl_parent_t *
    569          rpl_find_parent(rpl_dag_t *dag, uip_ipaddr_t *addr)
   \                     rpl_find_parent:
    570          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   EC           MOV     A,R4
   \   00000A   FA           MOV     R2,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FB           MOV     R3,A
    571            rpl_parent_t *p = find_parent_any_dag_any_instance(addr);
   \   00000D                ; Setup parameters for call to function find_parent_any_dag_any_instance
   \   00000D   12....       LCALL   ??find_parent_any_dag_any_instance?relay
   \   000010   8A..         MOV     ?V0 + 0,R2
   \   000012   8B..         MOV     ?V0 + 1,R3
   \   000014   AA..         MOV     R2,?V0 + 0
   \   000016   AB..         MOV     R3,?V0 + 1
    572            if(p != NULL && p->dag == dag) {
   \   000018   EA           MOV     A,R2
   \   000019   4B           ORL     A,R3
   \   00001A   6013         JZ      ??rpl_find_parent_0
   \   00001C   8A82         MOV     DPL,R2
   \   00001E   8B83         MOV     DPH,R3
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   E0           MOVX    A,@DPTR
   \   000023   F8           MOV     R0,A
   \   000024   A3           INC     DPTR
   \   000025   E0           MOVX    A,@DPTR
   \   000026   F9           MOV     R1,A
   \   000027   EE           MOV     A,R6
   \   000028   68           XRL     A,R0
   \   000029   7002         JNZ     ??rpl_find_parent_1
   \   00002B   EF           MOV     A,R7
   \   00002C   69           XRL     A,R1
   \                     ??rpl_find_parent_1:
   \   00002D   6004         JZ      ??rpl_find_parent_2
    573              return p;
    574            } else {
    575              return NULL;
   \                     ??rpl_find_parent_0:
   \   00002F   7A00         MOV     R2,#0x0
   \   000031   7B00         MOV     R3,#0x0
   \                     ??rpl_find_parent_2:
   \   000033   7F02         MOV     R7,#0x2
   \   000035   02....       LJMP    ?BANKED_LEAVE_XDATA
    576            }
    577          }
    578          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    579          static rpl_dag_t *
    580          find_parent_dag(rpl_instance_t *instance, uip_ipaddr_t *addr)
   \                     find_parent_dag:
    581          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    582            rpl_parent_t *p = find_parent_any_dag_any_instance(addr);
   \   000005                ; Setup parameters for call to function find_parent_any_dag_any_instance
   \   000005   EC           MOV     A,R4
   \   000006   FA           MOV     R2,A
   \   000007   ED           MOV     A,R5
   \   000008   FB           MOV     R3,A
   \   000009   12....       LCALL   ??find_parent_any_dag_any_instance?relay
   \   00000C   8A..         MOV     ?V0 + 0,R2
   \   00000E   8B..         MOV     ?V0 + 1,R3
   \   000010   85..82       MOV     DPL,?V0 + 0
   \   000013   85..83       MOV     DPH,?V0 + 1
    583            if(p != NULL) {
   \   000016   E582         MOV     A,DPL
   \   000018   4583         ORL     A,DPH
   \   00001A   6009         JZ      ??find_parent_dag_0
    584              return p->dag;
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   FA           MOV     R2,A
   \   000020   A3           INC     DPTR
   \   000021   E0           MOVX    A,@DPTR
   \   000022   FB           MOV     R3,A
   \   000023   8004         SJMP    ??find_parent_dag_1
    585            } else {
    586              return NULL;
   \                     ??find_parent_dag_0:
   \   000025   7A00         MOV     R2,#0x0
   \   000027   7B00         MOV     R3,#0x0
   \                     ??find_parent_dag_1:
   \   000029   7F02         MOV     R7,#0x2
   \   00002B   02....       LJMP    ?BANKED_LEAVE_XDATA
    587            }
    588          }
    589          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    590          rpl_parent_t *
    591          rpl_find_parent_any_dag(rpl_instance_t *instance, uip_ipaddr_t *addr)
   \                     rpl_find_parent_any_dag:
    592          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   EC           MOV     A,R4
   \   00000A   FA           MOV     R2,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FB           MOV     R3,A
    593            rpl_parent_t *p = find_parent_any_dag_any_instance(addr);
   \   00000D                ; Setup parameters for call to function find_parent_any_dag_any_instance
   \   00000D   12....       LCALL   ??find_parent_any_dag_any_instance?relay
   \   000010   8A..         MOV     ?V0 + 0,R2
   \   000012   8B..         MOV     ?V0 + 1,R3
   \   000014   AA..         MOV     R2,?V0 + 0
   \   000016   AB..         MOV     R3,?V0 + 1
    594            if(p && p->dag && p->dag->instance == instance) {
   \   000018   EA           MOV     A,R2
   \   000019   4B           ORL     A,R3
   \   00001A   6030         JZ      ??rpl_find_parent_any_dag_0
   \   00001C   8A82         MOV     DPL,R2
   \   00001E   8B83         MOV     DPH,R3
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   E0           MOVX    A,@DPTR
   \   000023   F8           MOV     R0,A
   \   000024   A3           INC     DPTR
   \   000025   E0           MOVX    A,@DPTR
   \   000026   F9           MOV     R1,A
   \   000027   E8           MOV     A,R0
   \   000028   49           ORL     A,R1
   \   000029   6021         JZ      ??rpl_find_parent_any_dag_0
   \   00002B   8A82         MOV     DPL,R2
   \   00002D   8B83         MOV     DPH,R3
   \   00002F   A3           INC     DPTR
   \   000030   A3           INC     DPTR
   \   000031   E0           MOVX    A,@DPTR
   \   000032   F8           MOV     R0,A
   \   000033   A3           INC     DPTR
   \   000034   E0           MOVX    A,@DPTR
   \   000035   C8           XCH     A,R0
   \   000036   241B         ADD     A,#0x1b
   \   000038   F582         MOV     DPL,A
   \   00003A   E8           MOV     A,R0
   \   00003B   3400         ADDC    A,#0x0
   \   00003D   F583         MOV     DPH,A
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   F8           MOV     R0,A
   \   000041   A3           INC     DPTR
   \   000042   E0           MOVX    A,@DPTR
   \   000043   F9           MOV     R1,A
   \   000044   EE           MOV     A,R6
   \   000045   68           XRL     A,R0
   \   000046   7002         JNZ     ??rpl_find_parent_any_dag_1
   \   000048   EF           MOV     A,R7
   \   000049   69           XRL     A,R1
   \                     ??rpl_find_parent_any_dag_1:
   \   00004A   6004         JZ      ??rpl_find_parent_any_dag_2
    595              return p;
    596            } else {
    597              return NULL;
   \                     ??rpl_find_parent_any_dag_0:
   \   00004C   7A00         MOV     R2,#0x0
   \   00004E   7B00         MOV     R3,#0x0
   \                     ??rpl_find_parent_any_dag_2:
   \   000050   7F02         MOV     R7,#0x2
   \   000052   02....       LJMP    ?BANKED_LEAVE_XDATA
    598            }
    599          }
    600          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    601          rpl_dag_t *
    602          rpl_select_dag(rpl_instance_t *instance, rpl_parent_t *p)
   \                     rpl_select_dag:
    603          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   8C..         MOV     ?V0 + 2,R4
   \   00000B   8D..         MOV     ?V0 + 3,R5
    604            rpl_parent_t *last_parent;
    605            rpl_dag_t *dag, *end, *best_dag;
    606            rpl_rank_t old_rank;
    607          
    608            old_rank = instance->current_dag->rank;
   \   00000D   85..82       MOV     DPL,?V0 + 0
   \   000010   85..83       MOV     DPH,?V0 + 1
   \   000013   A3           INC     DPTR
   \   000014   A3           INC     DPTR
   \   000015   A3           INC     DPTR
   \   000016   A3           INC     DPTR
   \   000017   A3           INC     DPTR
   \   000018   A3           INC     DPTR
   \   000019   A3           INC     DPTR
   \   00001A   A3           INC     DPTR
   \   00001B   A3           INC     DPTR
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   F8           MOV     R0,A
   \   00001E   A3           INC     DPTR
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   F8           MOV     R0,A
   \   000021   2419         ADD     A,#0x19
   \   000023   F582         MOV     DPL,A
   \   000025   F8           MOV     R0,A
   \   000026   3400         ADDC    A,#0x0
   \   000028   F583         MOV     DPH,A
   \   00002A   E0           MOVX    A,@DPTR
   \   00002B   FA           MOV     R2,A
   \   00002C   A3           INC     DPTR
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   FB           MOV     R3,A
    609            last_parent = instance->current_dag->preferred_parent;
   \   00002F   85..82       MOV     DPL,?V0 + 0
   \   000032   85..83       MOV     DPH,?V0 + 1
   \   000035   A3           INC     DPTR
   \   000036   A3           INC     DPTR
   \   000037   A3           INC     DPTR
   \   000038   A3           INC     DPTR
   \   000039   A3           INC     DPTR
   \   00003A   A3           INC     DPTR
   \   00003B   A3           INC     DPTR
   \   00003C   A3           INC     DPTR
   \   00003D   A3           INC     DPTR
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   F8           MOV     R0,A
   \   000040   A3           INC     DPTR
   \   000041   E0           MOVX    A,@DPTR
   \   000042   C8           XCH     A,R0
   \   000043   2417         ADD     A,#0x17
   \   000045   F582         MOV     DPL,A
   \   000047   E8           MOV     A,R0
   \   000048   3400         ADDC    A,#0x0
   \   00004A   F583         MOV     DPH,A
   \   00004C   E0           MOVX    A,@DPTR
   \   00004D   F5..         MOV     ?V0 + 4,A
   \   00004F   A3           INC     DPTR
   \   000050   E0           MOVX    A,@DPTR
   \   000051   F5..         MOV     ?V0 + 5,A
    610          
    611            best_dag = instance->current_dag;
   \   000053   85..82       MOV     DPL,?V0 + 0
   \   000056   85..83       MOV     DPH,?V0 + 1
   \   000059   A3           INC     DPTR
   \   00005A   A3           INC     DPTR
   \   00005B   A3           INC     DPTR
   \   00005C   A3           INC     DPTR
   \   00005D   A3           INC     DPTR
   \   00005E   A3           INC     DPTR
   \   00005F   A3           INC     DPTR
   \   000060   A3           INC     DPTR
   \   000061   A3           INC     DPTR
   \   000062   E0           MOVX    A,@DPTR
   \   000063   FE           MOV     R6,A
   \   000064   A3           INC     DPTR
   \   000065   E0           MOVX    A,@DPTR
   \   000066   FF           MOV     R7,A
    612            if(best_dag->rank != ROOT_RANK(instance)) {
   \   000067   EE           MOV     A,R6
   \   000068   2419         ADD     A,#0x19
   \   00006A   F582         MOV     DPL,A
   \   00006C   EF           MOV     A,R7
   \   00006D   3400         ADDC    A,#0x0
   \   00006F   F583         MOV     DPH,A
   \   000071   E0           MOVX    A,@DPTR
   \   000072   F8           MOV     R0,A
   \   000073   A3           INC     DPTR
   \   000074   E0           MOVX    A,@DPTR
   \   000075   F9           MOV     R1,A
   \   000076   E5..         MOV     A,?V0 + 0
   \   000078   2488         ADD     A,#-0x78
   \   00007A   F582         MOV     DPL,A
   \   00007C   E5..         MOV     A,?V0 + 1
   \   00007E   3400         ADDC    A,#0x0
   \   000080   F583         MOV     DPH,A
   \   000082   E0           MOVX    A,@DPTR
   \   000083   68           XRL     A,R0
   \   000084   7003         JNZ     ??rpl_select_dag_0
   \   000086   A3           INC     DPTR
   \   000087   E0           MOVX    A,@DPTR
   \   000088   69           XRL     A,R1
   \                     ??rpl_select_dag_0:
   \   000089   606E         JZ      ??rpl_select_dag_1
    613              if(rpl_select_parent(p->dag) != NULL) {
   \   00008B                ; Setup parameters for call to function rpl_select_parent
   \   00008B   85..82       MOV     DPL,?V0 + 2
   \   00008E   85..83       MOV     DPH,?V0 + 3
   \   000091   A3           INC     DPTR
   \   000092   A3           INC     DPTR
   \   000093   E0           MOVX    A,@DPTR
   \   000094   FA           MOV     R2,A
   \   000095   A3           INC     DPTR
   \   000096   E0           MOVX    A,@DPTR
   \   000097   FB           MOV     R3,A
   \   000098   12....       LCALL   ??rpl_select_parent?relay
   \   00009B   8A..         MOV     ?V0 + 6,R2
   \   00009D   8B..         MOV     ?V0 + 7,R3
   \   00009F   E5..         MOV     A,?V0 + 6
   \   0000A1   45..         ORL     A,?V0 + 7
   \   0000A3   6062         JZ      ??rpl_select_dag_2
    614                if(p->dag != best_dag) {
   \   0000A5   85..82       MOV     DPL,?V0 + 2
   \   0000A8   85..83       MOV     DPH,?V0 + 3
   \   0000AB   A3           INC     DPTR
   \   0000AC   A3           INC     DPTR
   \   0000AD   E0           MOVX    A,@DPTR
   \   0000AE   F8           MOV     R0,A
   \   0000AF   A3           INC     DPTR
   \   0000B0   E0           MOVX    A,@DPTR
   \   0000B1   F9           MOV     R1,A
   \   0000B2   EE           MOV     A,R6
   \   0000B3   68           XRL     A,R0
   \   0000B4   7002         JNZ     ??rpl_select_dag_3
   \   0000B6   EF           MOV     A,R7
   \   0000B7   69           XRL     A,R1
   \                     ??rpl_select_dag_3:
   \   0000B8   603F         JZ      ??rpl_select_dag_1
    615                  best_dag = instance->of->best_dag(best_dag, p->dag);
   \   0000BA                ; Setup parameters for indirect call
   \   0000BA   85..82       MOV     DPL,?V0 + 2
   \   0000BD   85..83       MOV     DPH,?V0 + 3
   \   0000C0   A3           INC     DPTR
   \   0000C1   A3           INC     DPTR
   \   0000C2   E0           MOVX    A,@DPTR
   \   0000C3   FC           MOV     R4,A
   \   0000C4   A3           INC     DPTR
   \   0000C5   E0           MOVX    A,@DPTR
   \   0000C6   FD           MOV     R5,A
   \   0000C7   EE           MOV     A,R6
   \   0000C8   FA           MOV     R2,A
   \   0000C9   EF           MOV     A,R7
   \   0000CA   FB           MOV     R3,A
   \   0000CB   85..82       MOV     DPL,?V0 + 0
   \   0000CE   85..83       MOV     DPH,?V0 + 1
   \   0000D1   A3           INC     DPTR
   \   0000D2   A3           INC     DPTR
   \   0000D3   A3           INC     DPTR
   \   0000D4   A3           INC     DPTR
   \   0000D5   A3           INC     DPTR
   \   0000D6   A3           INC     DPTR
   \   0000D7   A3           INC     DPTR
   \   0000D8   E0           MOVX    A,@DPTR
   \   0000D9   F8           MOV     R0,A
   \   0000DA   A3           INC     DPTR
   \   0000DB   E0           MOVX    A,@DPTR
   \   0000DC   C8           XCH     A,R0
   \   0000DD   2406         ADD     A,#0x6
   \   0000DF   F582         MOV     DPL,A
   \   0000E1   E8           MOV     A,R0
   \   0000E2   3400         ADDC    A,#0x0
   \   0000E4   F583         MOV     DPH,A
   \   0000E6   E0           MOVX    A,@DPTR
   \   0000E7   F8           MOV     R0,A
   \   0000E8   A3           INC     DPTR
   \   0000E9   E0           MOVX    A,@DPTR
   \   0000EA   F583         MOV     DPH,A
   \   0000EC   8882         MOV     DPL,R0
   \   0000EE   12....       LCALL   ?CALL_IND
   \   0000F1   8A..         MOV     ?V0 + 2,R2
   \   0000F3   8B..         MOV     ?V0 + 3,R3
   \   0000F5   AE..         MOV     R6,?V0 + 2
   \   0000F7   AF..         MOV     R7,?V0 + 3
    616                }
    617              } else if(p->dag == best_dag) {
    618                best_dag = NULL;
    619                for(dag = &instance->dag_table[0], end = dag + RPL_MAX_DAG_PER_INSTANCE; dag < end; ++dag) {
    620                  if(dag->used && dag->preferred_parent != NULL && dag->preferred_parent->rank != INFINITE_RANK) {
    621                    if(best_dag == NULL) {
    622                      best_dag = dag;
    623                    } else {
    624                      best_dag = instance->of->best_dag(best_dag, dag);
    625                    }
    626                  }
    627                }
    628              }
    629            }
    630          
    631            if(best_dag == NULL) {
   \                     ??rpl_select_dag_1:
   \   0000F9   EE           MOV     A,R6
   \   0000FA   4F           ORL     A,R7
   \   0000FB   6003         JZ      $+5
   \   0000FD   02....       LJMP    ??rpl_select_dag_4 & 0xFFFF
    632              /* No parent found: the calling function handle this problem. */
    633              return NULL;
   \   000100   7A00         MOV     R2,#0x0
   \   000102   7B00         MOV     R3,#0x0
   \   000104   02....       LJMP    ??rpl_select_dag_5 & 0xFFFF
    634            }
   \                     ??rpl_select_dag_2:
   \   000107   85..82       MOV     DPL,?V0 + 2
   \   00010A   85..83       MOV     DPH,?V0 + 3
   \   00010D   A3           INC     DPTR
   \   00010E   A3           INC     DPTR
   \   00010F   E0           MOVX    A,@DPTR
   \   000110   F8           MOV     R0,A
   \   000111   A3           INC     DPTR
   \   000112   E0           MOVX    A,@DPTR
   \   000113   F9           MOV     R1,A
   \   000114   EE           MOV     A,R6
   \   000115   68           XRL     A,R0
   \   000116   7002         JNZ     ??rpl_select_dag_6
   \   000118   EF           MOV     A,R7
   \   000119   69           XRL     A,R1
   \                     ??rpl_select_dag_6:
   \   00011A   70DD         JNZ     ??rpl_select_dag_1
   \   00011C   7E00         MOV     R6,#0x0
   \   00011E   7F00         MOV     R7,#0x0
   \   000120   E5..         MOV     A,?V0 + 0
   \   000122   240B         ADD     A,#0xb
   \   000124   F5..         MOV     ?V0 + 2,A
   \   000126   E5..         MOV     A,?V0 + 1
   \   000128   3400         ADDC    A,#0x0
   \   00012A   F5..         MOV     ?V0 + 3,A
   \   00012C   E5..         MOV     A,?V0 + 2
   \   00012E   246E         ADD     A,#0x6e
   \   000130   F5..         MOV     ?V0 + 6,A
   \   000132   E5..         MOV     A,?V0 + 3
   \   000134   3400         ADDC    A,#0x0
   \   000136   F5..         MOV     ?V0 + 7,A
   \   000138   8042         SJMP    ??rpl_select_dag_7
   \                     ??rpl_select_dag_8:
   \   00013A                ; Setup parameters for indirect call
   \   00013A   AC..         MOV     R4,?V0 + 2
   \   00013C   AD..         MOV     R5,?V0 + 3
   \   00013E   EE           MOV     A,R6
   \   00013F   FA           MOV     R2,A
   \   000140   EF           MOV     A,R7
   \   000141   FB           MOV     R3,A
   \   000142   85..82       MOV     DPL,?V0 + 0
   \   000145   85..83       MOV     DPH,?V0 + 1
   \   000148   A3           INC     DPTR
   \   000149   A3           INC     DPTR
   \   00014A   A3           INC     DPTR
   \   00014B   A3           INC     DPTR
   \   00014C   A3           INC     DPTR
   \   00014D   A3           INC     DPTR
   \   00014E   A3           INC     DPTR
   \   00014F   E0           MOVX    A,@DPTR
   \   000150   F8           MOV     R0,A
   \   000151   A3           INC     DPTR
   \   000152   E0           MOVX    A,@DPTR
   \   000153   C8           XCH     A,R0
   \   000154   2406         ADD     A,#0x6
   \   000156   F582         MOV     DPL,A
   \   000158   E8           MOV     A,R0
   \   000159   3400         ADDC    A,#0x0
   \   00015B   F583         MOV     DPH,A
   \   00015D   E0           MOVX    A,@DPTR
   \   00015E   F8           MOV     R0,A
   \   00015F   A3           INC     DPTR
   \   000160   E0           MOVX    A,@DPTR
   \   000161   F583         MOV     DPH,A
   \   000163   8882         MOV     DPL,R0
   \   000165   12....       LCALL   ?CALL_IND
   \   000168   8A..         MOV     ?V0 + 8,R2
   \   00016A   8B..         MOV     ?V0 + 9,R3
   \   00016C   AE..         MOV     R6,?V0 + 8
   \   00016E   AF..         MOV     R7,?V0 + 9
   \                     ??rpl_select_dag_9:
   \   000170   E5..         MOV     A,?V0 + 2
   \   000172   2437         ADD     A,#0x37
   \   000174   F5..         MOV     ?V0 + 2,A
   \   000176   E5..         MOV     A,?V0 + 3
   \   000178   3400         ADDC    A,#0x0
   \   00017A   F5..         MOV     ?V0 + 3,A
   \                     ??rpl_select_dag_7:
   \   00017C   C3           CLR     C
   \   00017D   E5..         MOV     A,?V0 + 2
   \   00017F   95..         SUBB    A,?V0 + 6
   \   000181   E5..         MOV     A,?V0 + 3
   \   000183   95..         SUBB    A,?V0 + 7
   \   000185   4003         JC      $+5
   \   000187   02....       LJMP    ??rpl_select_dag_1 & 0xFFFF
   \   00018A   E5..         MOV     A,?V0 + 2
   \   00018C   2415         ADD     A,#0x15
   \   00018E   F582         MOV     DPL,A
   \   000190   E5..         MOV     A,?V0 + 3
   \   000192   3400         ADDC    A,#0x0
   \   000194   F583         MOV     DPH,A
   \   000196   E0           MOVX    A,@DPTR
   \   000197   60D7         JZ      ??rpl_select_dag_9
   \   000199   E5..         MOV     A,?V0 + 2
   \   00019B   2417         ADD     A,#0x17
   \   00019D   F582         MOV     DPL,A
   \   00019F   E5..         MOV     A,?V0 + 3
   \   0001A1   3400         ADDC    A,#0x0
   \   0001A3   F583         MOV     DPH,A
   \   0001A5   E0           MOVX    A,@DPTR
   \   0001A6   F8           MOV     R0,A
   \   0001A7   A3           INC     DPTR
   \   0001A8   E0           MOVX    A,@DPTR
   \   0001A9   F9           MOV     R1,A
   \   0001AA   E8           MOV     A,R0
   \   0001AB   49           ORL     A,R1
   \   0001AC   60C2         JZ      ??rpl_select_dag_9
   \   0001AE   E5..         MOV     A,?V0 + 2
   \   0001B0   2417         ADD     A,#0x17
   \   0001B2   F582         MOV     DPL,A
   \   0001B4   E5..         MOV     A,?V0 + 3
   \   0001B6   3400         ADDC    A,#0x0
   \   0001B8   F583         MOV     DPH,A
   \   0001BA   E0           MOVX    A,@DPTR
   \   0001BB   F8           MOV     R0,A
   \   0001BC   A3           INC     DPTR
   \   0001BD   E0           MOVX    A,@DPTR
   \   0001BE   F583         MOV     DPH,A
   \   0001C0   8882         MOV     DPL,R0
   \   0001C2   A3           INC     DPTR
   \   0001C3   A3           INC     DPTR
   \   0001C4   A3           INC     DPTR
   \   0001C5   A3           INC     DPTR
   \   0001C6   E0           MOVX    A,@DPTR
   \   0001C7   64FF         XRL     A,#0xff
   \   0001C9   7004         JNZ     ??rpl_select_dag_10
   \   0001CB   A3           INC     DPTR
   \   0001CC   E0           MOVX    A,@DPTR
   \   0001CD   64FF         XRL     A,#0xff
   \                     ??rpl_select_dag_10:
   \   0001CF   609F         JZ      ??rpl_select_dag_9
   \   0001D1   EE           MOV     A,R6
   \   0001D2   4F           ORL     A,R7
   \   0001D3   6003         JZ      $+5
   \   0001D5   02....       LJMP    ??rpl_select_dag_8 & 0xFFFF
   \   0001D8   AE..         MOV     R6,?V0 + 2
   \   0001DA   AF..         MOV     R7,?V0 + 3
   \   0001DC   8092         SJMP    ??rpl_select_dag_9
    635          
    636            if(instance->current_dag != best_dag) {
   \                     ??rpl_select_dag_4:
   \   0001DE   85..82       MOV     DPL,?V0 + 0
   \   0001E1   85..83       MOV     DPH,?V0 + 1
   \   0001E4   A3           INC     DPTR
   \   0001E5   A3           INC     DPTR
   \   0001E6   A3           INC     DPTR
   \   0001E7   A3           INC     DPTR
   \   0001E8   A3           INC     DPTR
   \   0001E9   A3           INC     DPTR
   \   0001EA   A3           INC     DPTR
   \   0001EB   A3           INC     DPTR
   \   0001EC   A3           INC     DPTR
   \   0001ED   E0           MOVX    A,@DPTR
   \   0001EE   F8           MOV     R0,A
   \   0001EF   A3           INC     DPTR
   \   0001F0   E0           MOVX    A,@DPTR
   \   0001F1   F9           MOV     R1,A
   \   0001F2   EE           MOV     A,R6
   \   0001F3   68           XRL     A,R0
   \   0001F4   7002         JNZ     ??rpl_select_dag_11
   \   0001F6   EF           MOV     A,R7
   \   0001F7   69           XRL     A,R1
   \                     ??rpl_select_dag_11:
   \   0001F8   7003         JNZ     $+5
   \   0001FA   02....       LJMP    ??rpl_select_dag_12 & 0xFFFF
    637              /* Remove routes installed by DAOs. */
    638              rpl_remove_routes(instance->current_dag);
   \   0001FD                ; Setup parameters for call to function rpl_remove_routes
   \   0001FD   85..82       MOV     DPL,?V0 + 0
   \   000200   85..83       MOV     DPH,?V0 + 1
   \   000203   A3           INC     DPTR
   \   000204   A3           INC     DPTR
   \   000205   A3           INC     DPTR
   \   000206   A3           INC     DPTR
   \   000207   A3           INC     DPTR
   \   000208   A3           INC     DPTR
   \   000209   A3           INC     DPTR
   \   00020A   A3           INC     DPTR
   \   00020B   A3           INC     DPTR
   \   00020C   E0           MOVX    A,@DPTR
   \   00020D   FA           MOV     R2,A
   \   00020E   A3           INC     DPTR
   \   00020F   E0           MOVX    A,@DPTR
   \   000210   FB           MOV     R3,A
   \   000211   12....       LCALL   ??rpl_remove_routes?relay
    639          
    640              PRINTF("RPL: New preferred DAG: ");
    641              PRINT6ADDR(&best_dag->dag_id);
    642              PRINTF("\n");
    643          
    644              if(best_dag->prefix_info.flags & UIP_ND6_RA_FLAG_AUTONOMOUS) {
   \   000214   EE           MOV     A,R6
   \   000215   2436         ADD     A,#0x36
   \   000217   F582         MOV     DPL,A
   \   000219   EF           MOV     A,R7
   \   00021A   3400         ADDC    A,#0x0
   \   00021C   F583         MOV     DPH,A
   \   00021E   E0           MOVX    A,@DPTR
   \   00021F   A2E6         MOV     C,0xE0 /* A   */.6
   \   000221   5025         JNC     ??rpl_select_dag_13
    645                check_prefix(&instance->current_dag->prefix_info, &best_dag->prefix_info);
   \   000223                ; Setup parameters for call to function check_prefix
   \   000223   EE           MOV     A,R6
   \   000224   2421         ADD     A,#0x21
   \   000226   FC           MOV     R4,A
   \   000227   EF           MOV     A,R7
   \   000228   3400         ADDC    A,#0x0
   \   00022A   FD           MOV     R5,A
   \   00022B   85..82       MOV     DPL,?V0 + 0
   \   00022E   85..83       MOV     DPH,?V0 + 1
   \   000231   A3           INC     DPTR
   \   000232   A3           INC     DPTR
   \   000233   A3           INC     DPTR
   \   000234   A3           INC     DPTR
   \   000235   A3           INC     DPTR
   \   000236   A3           INC     DPTR
   \   000237   A3           INC     DPTR
   \   000238   A3           INC     DPTR
   \   000239   A3           INC     DPTR
   \   00023A   E0           MOVX    A,@DPTR
   \   00023B   2421         ADD     A,#0x21
   \   00023D   FA           MOV     R2,A
   \   00023E   A3           INC     DPTR
   \   00023F   E0           MOVX    A,@DPTR
   \   000240   3400         ADDC    A,#0x0
   \   000242   FB           MOV     R3,A
   \   000243   12....       LCALL   ??check_prefix?relay
   \   000246   8041         SJMP    ??rpl_select_dag_14
    646              } else if(instance->current_dag->prefix_info.flags & UIP_ND6_RA_FLAG_AUTONOMOUS) {
   \                     ??rpl_select_dag_13:
   \   000248   85..82       MOV     DPL,?V0 + 0
   \   00024B   85..83       MOV     DPH,?V0 + 1
   \   00024E   A3           INC     DPTR
   \   00024F   A3           INC     DPTR
   \   000250   A3           INC     DPTR
   \   000251   A3           INC     DPTR
   \   000252   A3           INC     DPTR
   \   000253   A3           INC     DPTR
   \   000254   A3           INC     DPTR
   \   000255   A3           INC     DPTR
   \   000256   A3           INC     DPTR
   \   000257   E0           MOVX    A,@DPTR
   \   000258   F8           MOV     R0,A
   \   000259   A3           INC     DPTR
   \   00025A   E0           MOVX    A,@DPTR
   \   00025B   C8           XCH     A,R0
   \   00025C   2436         ADD     A,#0x36
   \   00025E   F582         MOV     DPL,A
   \   000260   E8           MOV     A,R0
   \   000261   3400         ADDC    A,#0x0
   \   000263   F583         MOV     DPH,A
   \   000265   E0           MOVX    A,@DPTR
   \   000266   A2E6         MOV     C,0xE0 /* A   */.6
   \   000268   501F         JNC     ??rpl_select_dag_14
    647                check_prefix(&instance->current_dag->prefix_info, NULL);
   \   00026A                ; Setup parameters for call to function check_prefix
   \   00026A   7C00         MOV     R4,#0x0
   \   00026C   7D00         MOV     R5,#0x0
   \   00026E   85..82       MOV     DPL,?V0 + 0
   \   000271   85..83       MOV     DPH,?V0 + 1
   \   000274   A3           INC     DPTR
   \   000275   A3           INC     DPTR
   \   000276   A3           INC     DPTR
   \   000277   A3           INC     DPTR
   \   000278   A3           INC     DPTR
   \   000279   A3           INC     DPTR
   \   00027A   A3           INC     DPTR
   \   00027B   A3           INC     DPTR
   \   00027C   A3           INC     DPTR
   \   00027D   E0           MOVX    A,@DPTR
   \   00027E   2421         ADD     A,#0x21
   \   000280   FA           MOV     R2,A
   \   000281   A3           INC     DPTR
   \   000282   E0           MOVX    A,@DPTR
   \   000283   3400         ADDC    A,#0x0
   \   000285   FB           MOV     R3,A
   \   000286   12....       LCALL   ??check_prefix?relay
    648              }
    649          
    650              best_dag->joined = 1;
   \                     ??rpl_select_dag_14:
   \   000289   EE           MOV     A,R6
   \   00028A   2416         ADD     A,#0x16
   \   00028C   F582         MOV     DPL,A
   \   00028E   EF           MOV     A,R7
   \   00028F   3400         ADDC    A,#0x0
   \   000291   F583         MOV     DPH,A
   \   000293   7401         MOV     A,#0x1
   \   000295   F0           MOVX    @DPTR,A
    651              instance->current_dag->joined = 0;
   \   000296   85..82       MOV     DPL,?V0 + 0
   \   000299   85..83       MOV     DPH,?V0 + 1
   \   00029C   A3           INC     DPTR
   \   00029D   A3           INC     DPTR
   \   00029E   A3           INC     DPTR
   \   00029F   A3           INC     DPTR
   \   0002A0   A3           INC     DPTR
   \   0002A1   A3           INC     DPTR
   \   0002A2   A3           INC     DPTR
   \   0002A3   A3           INC     DPTR
   \   0002A4   A3           INC     DPTR
   \   0002A5   E0           MOVX    A,@DPTR
   \   0002A6   F8           MOV     R0,A
   \   0002A7   A3           INC     DPTR
   \   0002A8   E0           MOVX    A,@DPTR
   \   0002A9   C8           XCH     A,R0
   \   0002AA   2416         ADD     A,#0x16
   \   0002AC   F582         MOV     DPL,A
   \   0002AE   E8           MOV     A,R0
   \   0002AF   3400         ADDC    A,#0x0
   \   0002B1   F583         MOV     DPH,A
   \   0002B3   7400         MOV     A,#0x0
   \   0002B5   F0           MOVX    @DPTR,A
    652              instance->current_dag = best_dag;
   \   0002B6   85..82       MOV     DPL,?V0 + 0
   \   0002B9   85..83       MOV     DPH,?V0 + 1
   \   0002BC   A3           INC     DPTR
   \   0002BD   A3           INC     DPTR
   \   0002BE   A3           INC     DPTR
   \   0002BF   A3           INC     DPTR
   \   0002C0   A3           INC     DPTR
   \   0002C1   A3           INC     DPTR
   \   0002C2   A3           INC     DPTR
   \   0002C3   A3           INC     DPTR
   \   0002C4   A3           INC     DPTR
   \   0002C5   EE           MOV     A,R6
   \   0002C6   F0           MOVX    @DPTR,A
   \   0002C7   A3           INC     DPTR
   \   0002C8   EF           MOV     A,R7
   \   0002C9   F0           MOVX    @DPTR,A
    653            }
    654          
    655            instance->of->update_metric_container(instance);
   \                     ??rpl_select_dag_12:
   \   0002CA                ; Setup parameters for indirect call
   \   0002CA   AA..         MOV     R2,?V0 + 0
   \   0002CC   AB..         MOV     R3,?V0 + 1
   \   0002CE   85..82       MOV     DPL,?V0 + 0
   \   0002D1   85..83       MOV     DPH,?V0 + 1
   \   0002D4   A3           INC     DPTR
   \   0002D5   A3           INC     DPTR
   \   0002D6   A3           INC     DPTR
   \   0002D7   A3           INC     DPTR
   \   0002D8   A3           INC     DPTR
   \   0002D9   A3           INC     DPTR
   \   0002DA   A3           INC     DPTR
   \   0002DB   E0           MOVX    A,@DPTR
   \   0002DC   F8           MOV     R0,A
   \   0002DD   A3           INC     DPTR
   \   0002DE   E0           MOVX    A,@DPTR
   \   0002DF   C8           XCH     A,R0
   \   0002E0   240A         ADD     A,#0xa
   \   0002E2   F582         MOV     DPL,A
   \   0002E4   E8           MOV     A,R0
   \   0002E5   3400         ADDC    A,#0x0
   \   0002E7   F583         MOV     DPH,A
   \   0002E9   E0           MOVX    A,@DPTR
   \   0002EA   F8           MOV     R0,A
   \   0002EB   A3           INC     DPTR
   \   0002EC   E0           MOVX    A,@DPTR
   \   0002ED   F583         MOV     DPH,A
   \   0002EF   8882         MOV     DPL,R0
   \   0002F1   12....       LCALL   ?CALL_IND
    656            /* Update the DAG rank. */
    657            best_dag->rank = instance->of->calculate_rank(best_dag->preferred_parent, 0);
   \   0002F4                ; Setup parameters for indirect call
   \   0002F4   7C00         MOV     R4,#0x0
   \   0002F6   7D00         MOV     R5,#0x0
   \   0002F8   EE           MOV     A,R6
   \   0002F9   2417         ADD     A,#0x17
   \   0002FB   F582         MOV     DPL,A
   \   0002FD   EF           MOV     A,R7
   \   0002FE   3400         ADDC    A,#0x0
   \   000300   F583         MOV     DPH,A
   \   000302   E0           MOVX    A,@DPTR
   \   000303   FA           MOV     R2,A
   \   000304   A3           INC     DPTR
   \   000305   E0           MOVX    A,@DPTR
   \   000306   FB           MOV     R3,A
   \   000307   85..82       MOV     DPL,?V0 + 0
   \   00030A   85..83       MOV     DPH,?V0 + 1
   \   00030D   A3           INC     DPTR
   \   00030E   A3           INC     DPTR
   \   00030F   A3           INC     DPTR
   \   000310   A3           INC     DPTR
   \   000311   A3           INC     DPTR
   \   000312   A3           INC     DPTR
   \   000313   A3           INC     DPTR
   \   000314   E0           MOVX    A,@DPTR
   \   000315   F8           MOV     R0,A
   \   000316   A3           INC     DPTR
   \   000317   E0           MOVX    A,@DPTR
   \   000318   C8           XCH     A,R0
   \   000319   2408         ADD     A,#0x8
   \   00031B   F582         MOV     DPL,A
   \   00031D   E8           MOV     A,R0
   \   00031E   3400         ADDC    A,#0x0
   \   000320   F583         MOV     DPH,A
   \   000322   E0           MOVX    A,@DPTR
   \   000323   F8           MOV     R0,A
   \   000324   A3           INC     DPTR
   \   000325   E0           MOVX    A,@DPTR
   \   000326   F583         MOV     DPH,A
   \   000328   8882         MOV     DPL,R0
   \   00032A   12....       LCALL   ?CALL_IND
   \   00032D   EE           MOV     A,R6
   \   00032E   2419         ADD     A,#0x19
   \   000330   F582         MOV     DPL,A
   \   000332   EF           MOV     A,R7
   \   000333   3400         ADDC    A,#0x0
   \   000335   F583         MOV     DPH,A
   \   000337   EA           MOV     A,R2
   \   000338   F0           MOVX    @DPTR,A
   \   000339   A3           INC     DPTR
   \   00033A   EB           MOV     A,R3
   \   00033B   F0           MOVX    @DPTR,A
    658            if(last_parent == NULL || best_dag->rank < best_dag->min_rank) {
   \   00033C   E5..         MOV     A,?V0 + 4
   \   00033E   45..         ORL     A,?V0 + 5
   \   000340   602C         JZ      ??rpl_select_dag_15
   \   000342   EE           MOV     A,R6
   \   000343   2419         ADD     A,#0x19
   \   000345   F582         MOV     DPL,A
   \   000347   EF           MOV     A,R7
   \   000348   3400         ADDC    A,#0x0
   \   00034A   F583         MOV     DPH,A
   \   00034C   C082         PUSH    DPL
   \   00034E   C083         PUSH    DPH
   \   000350   EE           MOV     A,R6
   \   000351   2410         ADD     A,#0x10
   \   000353   F582         MOV     DPL,A
   \   000355   EF           MOV     A,R7
   \   000356   3400         ADDC    A,#0x0
   \   000358   F583         MOV     DPH,A
   \   00035A   E0           MOVX    A,@DPTR
   \   00035B   F8           MOV     R0,A
   \   00035C   A3           INC     DPTR
   \   00035D   E0           MOVX    A,@DPTR
   \   00035E   F9           MOV     R1,A
   \   00035F   D083         POP     DPH
   \   000361   D082         POP     DPL
   \   000363   C3           CLR     C
   \   000364   E0           MOVX    A,@DPTR
   \   000365   98           SUBB    A,R0
   \   000366   A3           INC     DPTR
   \   000367   E0           MOVX    A,@DPTR
   \   000368   99           SUBB    A,R1
   \   000369   4003         JC      $+5
   \   00036B   02....       LJMP    ??rpl_select_dag_16 & 0xFFFF
    659              best_dag->min_rank = best_dag->rank;
   \                     ??rpl_select_dag_15:
   \   00036E   EE           MOV     A,R6
   \   00036F   2419         ADD     A,#0x19
   \   000371   F582         MOV     DPL,A
   \   000373   EF           MOV     A,R7
   \   000374   3400         ADDC    A,#0x0
   \   000376   F583         MOV     DPH,A
   \   000378   E0           MOVX    A,@DPTR
   \   000379   F8           MOV     R0,A
   \   00037A   A3           INC     DPTR
   \   00037B   E0           MOVX    A,@DPTR
   \   00037C   F9           MOV     R1,A
   \   00037D   EE           MOV     A,R6
   \   00037E   2410         ADD     A,#0x10
   \   000380   F582         MOV     DPL,A
   \   000382   EF           MOV     A,R7
   \   000383   3400         ADDC    A,#0x0
   \   000385   F583         MOV     DPH,A
   \   000387   E8           MOV     A,R0
   \   000388   F0           MOVX    @DPTR,A
   \   000389   A3           INC     DPTR
   \   00038A   E9           MOV     A,R1
   \   00038B   F0           MOVX    @DPTR,A
    660            } else if(!acceptable_rank(best_dag, best_dag->rank)) {
    661              PRINTF("RPL: New rank unacceptable!\n");
    662              rpl_set_preferred_parent(instance->current_dag, NULL);
    663              if(instance->mop != RPL_MOP_NO_DOWNWARD_ROUTES && last_parent != NULL) {
    664                /* Send a No-Path DAO to the removed preferred parent. */
    665                dao_output(last_parent, RPL_ZERO_LIFETIME);
    666              }
    667              return NULL;
    668            }
    669          
    670            if(best_dag->preferred_parent != last_parent) {
   \                     ??rpl_select_dag_17:
   \   00038C   EE           MOV     A,R6
   \   00038D   2417         ADD     A,#0x17
   \   00038F   F582         MOV     DPL,A
   \   000391   EF           MOV     A,R7
   \   000392   3400         ADDC    A,#0x0
   \   000394   F583         MOV     DPH,A
   \   000396   E0           MOVX    A,@DPTR
   \   000397   F8           MOV     R0,A
   \   000398   A3           INC     DPTR
   \   000399   E0           MOVX    A,@DPTR
   \   00039A   F9           MOV     R1,A
   \   00039B   E5..         MOV     A,?V0 + 4
   \   00039D   68           XRL     A,R0
   \   00039E   7003         JNZ     ??rpl_select_dag_18
   \   0003A0   E5..         MOV     A,?V0 + 5
   \   0003A2   69           XRL     A,R1
   \                     ??rpl_select_dag_18:
   \   0003A3   7003         JNZ     $+5
   \   0003A5   02....       LJMP    ??rpl_select_dag_19 & 0xFFFF
    671              rpl_set_default_route(instance, rpl_get_parent_ipaddr(best_dag->preferred_parent));
   \   0003A8                ; Setup parameters for call to function rpl_set_default_route
   \   0003A8                ; Setup parameters for call to function rpl_get_parent_ipaddr
   \   0003A8   EE           MOV     A,R6
   \   0003A9   2417         ADD     A,#0x17
   \   0003AB   F582         MOV     DPL,A
   \   0003AD   EF           MOV     A,R7
   \   0003AE   3400         ADDC    A,#0x0
   \   0003B0   F583         MOV     DPH,A
   \   0003B2   E0           MOVX    A,@DPTR
   \   0003B3   FA           MOV     R2,A
   \   0003B4   A3           INC     DPTR
   \   0003B5   E0           MOVX    A,@DPTR
   \   0003B6   FB           MOV     R3,A
   \   0003B7   12....       LCALL   ??rpl_get_parent_ipaddr?relay
   \   0003BA   EA           MOV     A,R2
   \   0003BB   FC           MOV     R4,A
   \   0003BC   EB           MOV     A,R3
   \   0003BD   FD           MOV     R5,A
   \   0003BE   AA..         MOV     R2,?V0 + 0
   \   0003C0   AB..         MOV     R3,?V0 + 1
   \   0003C2   12....       LCALL   ??rpl_set_default_route?relay
    672              PRINTF("RPL: Changed preferred parent, rank changed from %u to %u\n",
    673            	(unsigned)old_rank, best_dag->rank);
    674              RPL_STAT(rpl_stats.parent_switch++);
    675              if(instance->mop != RPL_MOP_NO_DOWNWARD_ROUTES) {
   \   0003C5   E5..         MOV     A,?V0 + 0
   \   0003C7   247E         ADD     A,#0x7e
   \   0003C9   F582         MOV     DPL,A
   \   0003CB   E5..         MOV     A,?V0 + 1
   \   0003CD   3400         ADDC    A,#0x0
   \   0003CF   F583         MOV     DPH,A
   \   0003D1   E0           MOVX    A,@DPTR
   \   0003D2   7003         JNZ     $+5
   \   0003D4   02....       LJMP    ??rpl_select_dag_20 & 0xFFFF
    676                if(last_parent != NULL) {
   \   0003D7   E5..         MOV     A,?V0 + 4
   \   0003D9   45..         ORL     A,?V0 + 5
   \   0003DB   6009         JZ      ??rpl_select_dag_21
    677                  /* Send a No-Path DAO to the removed preferred parent. */
    678                  dao_output(last_parent, RPL_ZERO_LIFETIME);
   \   0003DD                ; Setup parameters for call to function dao_output
   \   0003DD   7900         MOV     R1,#0x0
   \   0003DF   AA..         MOV     R2,?V0 + 4
   \   0003E1   AB..         MOV     R3,?V0 + 5
   \   0003E3   12....       LCALL   ??dao_output?relay
    679                }
    680                /* The DAO parent set changed - schedule a DAO transmission. */
    681                RPL_LOLLIPOP_INCREMENT(instance->dtsn_out);
   \                     ??rpl_select_dag_21:
   \   0003E6   E5..         MOV     A,?V0 + 0
   \   0003E8   247D         ADD     A,#0x7d
   \   0003EA   F582         MOV     DPL,A
   \   0003EC   E5..         MOV     A,?V0 + 1
   \   0003EE   3400         ADDC    A,#0x0
   \   0003F0   F583         MOV     DPH,A
   \   0003F2   E0           MOVX    A,@DPTR
   \   0003F3   C3           CLR     C
   \   0003F4   9480         SUBB    A,#-0x80
   \   0003F6   4075         JC      ??rpl_select_dag_22
   \   0003F8   E5..         MOV     A,?V0 + 0
   \   0003FA   247D         ADD     A,#0x7d
   \   0003FC   F582         MOV     DPL,A
   \   0003FE   E5..         MOV     A,?V0 + 1
   \   000400   3400         ADDC    A,#0x0
   \   000402   F583         MOV     DPH,A
   \   000404   E0           MOVX    A,@DPTR
   \   000405   2401         ADD     A,#0x1
   \   000407   F0           MOVX    @DPTR,A
   \   000408   02....       LJMP    ??rpl_select_dag_23 & 0xFFFF
   \                     ??rpl_select_dag_16:
   \   00040B                ; Setup parameters for call to function acceptable_rank
   \   00040B   EE           MOV     A,R6
   \   00040C   2419         ADD     A,#0x19
   \   00040E   F582         MOV     DPL,A
   \   000410   EF           MOV     A,R7
   \   000411   3400         ADDC    A,#0x0
   \   000413   F583         MOV     DPH,A
   \   000415   E0           MOVX    A,@DPTR
   \   000416   FC           MOV     R4,A
   \   000417   A3           INC     DPTR
   \   000418   E0           MOVX    A,@DPTR
   \   000419   FD           MOV     R5,A
   \   00041A   EE           MOV     A,R6
   \   00041B   FA           MOV     R2,A
   \   00041C   EF           MOV     A,R7
   \   00041D   FB           MOV     R3,A
   \   00041E   12....       LCALL   ??acceptable_rank?relay
   \   000421   8A..         MOV     ?V0 + 2,R2
   \   000423   8B..         MOV     ?V0 + 3,R3
   \   000425   E5..         MOV     A,?V0 + 2
   \   000427   45..         ORL     A,?V0 + 3
   \   000429   6003         JZ      $+5
   \   00042B   02....       LJMP    ??rpl_select_dag_17 & 0xFFFF
   \   00042E                ; Setup parameters for call to function rpl_set_preferred_parent
   \   00042E   7C00         MOV     R4,#0x0
   \   000430   7D00         MOV     R5,#0x0
   \   000432   85..82       MOV     DPL,?V0 + 0
   \   000435   85..83       MOV     DPH,?V0 + 1
   \   000438   A3           INC     DPTR
   \   000439   A3           INC     DPTR
   \   00043A   A3           INC     DPTR
   \   00043B   A3           INC     DPTR
   \   00043C   A3           INC     DPTR
   \   00043D   A3           INC     DPTR
   \   00043E   A3           INC     DPTR
   \   00043F   A3           INC     DPTR
   \   000440   A3           INC     DPTR
   \   000441   E0           MOVX    A,@DPTR
   \   000442   FA           MOV     R2,A
   \   000443   A3           INC     DPTR
   \   000444   E0           MOVX    A,@DPTR
   \   000445   FB           MOV     R3,A
   \   000446   12....       LCALL   ??rpl_set_preferred_parent?relay
   \   000449   E5..         MOV     A,?V0 + 0
   \   00044B   247E         ADD     A,#0x7e
   \   00044D   F582         MOV     DPL,A
   \   00044F   E5..         MOV     A,?V0 + 1
   \   000451   3400         ADDC    A,#0x0
   \   000453   F583         MOV     DPH,A
   \   000455   E0           MOVX    A,@DPTR
   \   000456   600F         JZ      ??rpl_select_dag_24
   \   000458   E5..         MOV     A,?V0 + 4
   \   00045A   45..         ORL     A,?V0 + 5
   \   00045C   6009         JZ      ??rpl_select_dag_24
   \   00045E                ; Setup parameters for call to function dao_output
   \   00045E   7900         MOV     R1,#0x0
   \   000460   AA..         MOV     R2,?V0 + 4
   \   000462   AB..         MOV     R3,?V0 + 5
   \   000464   12....       LCALL   ??dao_output?relay
   \                     ??rpl_select_dag_24:
   \   000467   7A00         MOV     R2,#0x0
   \   000469   7B00         MOV     R3,#0x0
   \   00046B   8034         SJMP    ??rpl_select_dag_5
   \                     ??rpl_select_dag_22:
   \   00046D   E5..         MOV     A,?V0 + 0
   \   00046F   247D         ADD     A,#0x7d
   \   000471   F582         MOV     DPL,A
   \   000473   E5..         MOV     A,?V0 + 1
   \   000475   3400         ADDC    A,#0x0
   \   000477   F583         MOV     DPH,A
   \   000479   E0           MOVX    A,@DPTR
   \   00047A   2401         ADD     A,#0x1
   \   00047C   547F         ANL     A,#0x7f
   \   00047E   C0E0         PUSH    A
   \   000480   E5..         MOV     A,?V0 + 0
   \   000482   247D         ADD     A,#0x7d
   \   000484   F582         MOV     DPL,A
   \   000486   E5..         MOV     A,?V0 + 1
   \   000488   3400         ADDC    A,#0x0
   \   00048A   F583         MOV     DPH,A
   \   00048C   D0E0         POP     A
   \   00048E   F0           MOVX    @DPTR,A
    682                rpl_schedule_dao(instance);
   \                     ??rpl_select_dag_23:
   \   00048F                ; Setup parameters for call to function rpl_schedule_dao
   \   00048F   AA..         MOV     R2,?V0 + 0
   \   000491   AB..         MOV     R3,?V0 + 1
   \   000493   12....       LCALL   ??rpl_schedule_dao?relay
    683              }
    684              rpl_reset_dio_timer(instance);
   \                     ??rpl_select_dag_20:
   \   000496                ; Setup parameters for call to function rpl_reset_dio_timer
   \   000496   AA..         MOV     R2,?V0 + 0
   \   000498   AB..         MOV     R3,?V0 + 1
   \   00049A   12....       LCALL   ??rpl_reset_dio_timer?relay
    685            } else if(best_dag->rank != old_rank) {
    686              PRINTF("RPL: Preferred parent update, rank changed from %u to %u\n",
    687            	(unsigned)old_rank, best_dag->rank);
    688            }
    689            return best_dag;
   \                     ??rpl_select_dag_19:
   \   00049D   EE           MOV     A,R6
   \   00049E   FA           MOV     R2,A
   \   00049F   EF           MOV     A,R7
   \   0004A0   FB           MOV     R3,A
   \                     ??rpl_select_dag_5:
   \   0004A1   7F0A         MOV     R7,#0xa
   \   0004A3   02....       LJMP    ?BANKED_LEAVE_XDATA
    690          }
    691          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    692          rpl_parent_t *
    693          rpl_select_parent(rpl_dag_t *dag)
   \                     rpl_select_parent:
    694          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
    695            rpl_parent_t *p, *best;
    696          
    697            best = NULL;
   \   000009   75..00       MOV     ?V0 + 2,#0x0
   \   00000C   75..00       MOV     ?V0 + 3,#0x0
    698          
    699            p = nbr_table_head(rpl_parents);
   \   00000F                ; Setup parameters for call to function nbr_table_head
   \   00000F   90....       MOV     DPTR,#rpl_parents
   \   000012   E0           MOVX    A,@DPTR
   \   000013   FA           MOV     R2,A
   \   000014   A3           INC     DPTR
   \   000015   E0           MOVX    A,@DPTR
   \   000016   FB           MOV     R3,A
   \   000017   12....       LCALL   ??nbr_table_head?relay
   \   00001A   8A..         MOV     ?V0 + 4,R2
   \   00001C   8B..         MOV     ?V0 + 5,R3
   \   00001E   AE..         MOV     R6,?V0 + 4
   \   000020   AF..         MOV     R7,?V0 + 5
   \   000022   805A         SJMP    ??rpl_select_parent_0
    700            while(p != NULL) {
    701              if(p->rank == INFINITE_RANK) {
    702                /* ignore this neighbor */
    703              } else if(best == NULL) {
    704                best = p;
    705              } else {
    706                best = dag->instance->of->best_parent(best, p);
   \                     ??rpl_select_parent_1:
   \   000024                ; Setup parameters for indirect call
   \   000024   EE           MOV     A,R6
   \   000025   FC           MOV     R4,A
   \   000026   EF           MOV     A,R7
   \   000027   FD           MOV     R5,A
   \   000028   AA..         MOV     R2,?V0 + 2
   \   00002A   AB..         MOV     R3,?V0 + 3
   \   00002C   E5..         MOV     A,?V0 + 0
   \   00002E   241B         ADD     A,#0x1b
   \   000030   F582         MOV     DPL,A
   \   000032   E5..         MOV     A,?V0 + 1
   \   000034   3400         ADDC    A,#0x0
   \   000036   F583         MOV     DPH,A
   \   000038   E0           MOVX    A,@DPTR
   \   000039   F8           MOV     R0,A
   \   00003A   A3           INC     DPTR
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   C8           XCH     A,R0
   \   00003D   2407         ADD     A,#0x7
   \   00003F   F582         MOV     DPL,A
   \   000041   E8           MOV     A,R0
   \   000042   3400         ADDC    A,#0x0
   \   000044   F583         MOV     DPH,A
   \   000046   E0           MOVX    A,@DPTR
   \   000047   F8           MOV     R0,A
   \   000048   A3           INC     DPTR
   \   000049   E0           MOVX    A,@DPTR
   \   00004A   F583         MOV     DPH,A
   \   00004C   8882         MOV     DPL,R0
   \   00004E   A3           INC     DPTR
   \   00004F   A3           INC     DPTR
   \   000050   A3           INC     DPTR
   \   000051   A3           INC     DPTR
   \   000052   E0           MOVX    A,@DPTR
   \   000053   F8           MOV     R0,A
   \   000054   A3           INC     DPTR
   \   000055   E0           MOVX    A,@DPTR
   \   000056   F583         MOV     DPH,A
   \   000058   8882         MOV     DPL,R0
   \   00005A   12....       LCALL   ?CALL_IND
   \   00005D   8A..         MOV     ?V0 + 4,R2
   \   00005F   8B..         MOV     ?V0 + 5,R3
   \   000061   85....       MOV     ?V0 + 2,?V0 + 4
   \   000064   85....       MOV     ?V0 + 3,?V0 + 5
    707              }
    708              p = nbr_table_next(rpl_parents, p);
   \                     ??rpl_select_parent_2:
   \   000067                ; Setup parameters for call to function nbr_table_next
   \   000067   EE           MOV     A,R6
   \   000068   FC           MOV     R4,A
   \   000069   EF           MOV     A,R7
   \   00006A   FD           MOV     R5,A
   \   00006B   90....       MOV     DPTR,#rpl_parents
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   FA           MOV     R2,A
   \   000070   A3           INC     DPTR
   \   000071   E0           MOVX    A,@DPTR
   \   000072   FB           MOV     R3,A
   \   000073   12....       LCALL   ??nbr_table_next?relay
   \   000076   8A..         MOV     ?V0 + 4,R2
   \   000078   8B..         MOV     ?V0 + 5,R3
   \   00007A   AE..         MOV     R6,?V0 + 4
   \   00007C   AF..         MOV     R7,?V0 + 5
   \                     ??rpl_select_parent_0:
   \   00007E   EE           MOV     A,R6
   \   00007F   4F           ORL     A,R7
   \   000080   601F         JZ      ??rpl_select_parent_3
   \   000082   8E82         MOV     DPL,R6
   \   000084   8F83         MOV     DPH,R7
   \   000086   A3           INC     DPTR
   \   000087   A3           INC     DPTR
   \   000088   A3           INC     DPTR
   \   000089   A3           INC     DPTR
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   64FF         XRL     A,#0xff
   \   00008D   7004         JNZ     ??rpl_select_parent_4
   \   00008F   A3           INC     DPTR
   \   000090   E0           MOVX    A,@DPTR
   \   000091   64FF         XRL     A,#0xff
   \                     ??rpl_select_parent_4:
   \   000093   60D2         JZ      ??rpl_select_parent_2
   \   000095   E5..         MOV     A,?V0 + 2
   \   000097   45..         ORL     A,?V0 + 3
   \   000099   7089         JNZ     ??rpl_select_parent_1
   \   00009B   8E..         MOV     ?V0 + 2,R6
   \   00009D   8F..         MOV     ?V0 + 3,R7
   \   00009F   80C6         SJMP    ??rpl_select_parent_2
    709            }
    710          
    711            if(best != NULL) {
   \                     ??rpl_select_parent_3:
   \   0000A1   E5..         MOV     A,?V0 + 2
   \   0000A3   45..         ORL     A,?V0 + 3
   \   0000A5   600B         JZ      ??rpl_select_parent_5
    712              rpl_set_preferred_parent(dag, best);
   \   0000A7                ; Setup parameters for call to function rpl_set_preferred_parent
   \   0000A7   AC..         MOV     R4,?V0 + 2
   \   0000A9   AD..         MOV     R5,?V0 + 3
   \   0000AB   AA..         MOV     R2,?V0 + 0
   \   0000AD   AB..         MOV     R3,?V0 + 1
   \   0000AF   12....       LCALL   ??rpl_set_preferred_parent?relay
    713            }
    714          
    715            return best;
   \                     ??rpl_select_parent_5:
   \   0000B2   AA..         MOV     R2,?V0 + 2
   \   0000B4   AB..         MOV     R3,?V0 + 3
   \   0000B6   7F06         MOV     R7,#0x6
   \   0000B8   02....       LJMP    ?BANKED_LEAVE_XDATA
    716          }
    717          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    718          void
    719          rpl_remove_parent(rpl_parent_t *parent)
   \                     rpl_remove_parent:
    720          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    721            PRINTF("RPL: Removing parent ");
    722            PRINT6ADDR(rpl_get_parent_ipaddr(parent));
    723            PRINTF("\n");
    724          
    725            rpl_nullify_parent(parent);
   \   000009                ; Setup parameters for call to function rpl_nullify_parent
   \   000009   EE           MOV     A,R6
   \   00000A   FA           MOV     R2,A
   \   00000B   EF           MOV     A,R7
   \   00000C   FB           MOV     R3,A
   \   00000D   12....       LCALL   ??rpl_nullify_parent?relay
    726          
    727            nbr_table_remove(rpl_parents, parent);
   \   000010                ; Setup parameters for call to function nbr_table_remove
   \   000010   EE           MOV     A,R6
   \   000011   FC           MOV     R4,A
   \   000012   EF           MOV     A,R7
   \   000013   FD           MOV     R5,A
   \   000014   90....       MOV     DPTR,#rpl_parents
   \   000017   E0           MOVX    A,@DPTR
   \   000018   FA           MOV     R2,A
   \   000019   A3           INC     DPTR
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   FB           MOV     R3,A
   \   00001C   12....       LCALL   ??nbr_table_remove?relay
    728          }
   \   00001F   7F01         MOV     R7,#0x1
   \   000021   02....       LJMP    ?BANKED_LEAVE_XDATA
    729          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    730          void
    731          rpl_nullify_parent(rpl_parent_t *parent)
   \                     rpl_nullify_parent:
    732          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
    733            rpl_dag_t *dag = parent->dag;
   \   000009   85..82       MOV     DPL,?V0 + 0
   \   00000C   85..83       MOV     DPH,?V0 + 1
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   FE           MOV     R6,A
   \   000013   A3           INC     DPTR
   \   000014   E0           MOVX    A,@DPTR
   \   000015   FF           MOV     R7,A
    734            /* This function can be called when the preferred parent is NULL, so we
    735               need to handle this condition in order to trigger uip_ds6_defrt_rm. */
    736            if(parent == dag->preferred_parent || dag->preferred_parent == NULL) {
   \   000016   EE           MOV     A,R6
   \   000017   2417         ADD     A,#0x17
   \   000019   F582         MOV     DPL,A
   \   00001B   EF           MOV     A,R7
   \   00001C   3400         ADDC    A,#0x0
   \   00001E   F583         MOV     DPH,A
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F8           MOV     R0,A
   \   000022   A3           INC     DPTR
   \   000023   E0           MOVX    A,@DPTR
   \   000024   F9           MOV     R1,A
   \   000025   E5..         MOV     A,?V0 + 0
   \   000027   68           XRL     A,R0
   \   000028   7003         JNZ     ??rpl_nullify_parent_0
   \   00002A   E5..         MOV     A,?V0 + 1
   \   00002C   69           XRL     A,R1
   \                     ??rpl_nullify_parent_0:
   \   00002D   6016         JZ      ??rpl_nullify_parent_1
   \   00002F   EE           MOV     A,R6
   \   000030   2417         ADD     A,#0x17
   \   000032   F582         MOV     DPL,A
   \   000034   EF           MOV     A,R7
   \   000035   3400         ADDC    A,#0x0
   \   000037   F583         MOV     DPH,A
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   F8           MOV     R0,A
   \   00003B   A3           INC     DPTR
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   F9           MOV     R1,A
   \   00003E   E8           MOV     A,R0
   \   00003F   49           ORL     A,R1
   \   000040   6003         JZ      $+5
   \   000042   02....       LJMP    ??rpl_nullify_parent_2 & 0xFFFF
    737              rpl_set_preferred_parent(dag, NULL);
   \                     ??rpl_nullify_parent_1:
   \   000045                ; Setup parameters for call to function rpl_set_preferred_parent
   \   000045   7C00         MOV     R4,#0x0
   \   000047   7D00         MOV     R5,#0x0
   \   000049   EE           MOV     A,R6
   \   00004A   FA           MOV     R2,A
   \   00004B   EF           MOV     A,R7
   \   00004C   FB           MOV     R3,A
   \   00004D   12....       LCALL   ??rpl_set_preferred_parent?relay
    738              dag->rank = INFINITE_RANK;
   \   000050   EE           MOV     A,R6
   \   000051   2419         ADD     A,#0x19
   \   000053   F582         MOV     DPL,A
   \   000055   EF           MOV     A,R7
   \   000056   3400         ADDC    A,#0x0
   \   000058   F583         MOV     DPH,A
   \   00005A   74FF         MOV     A,#-0x1
   \   00005C   F0           MOVX    @DPTR,A
   \   00005D   A3           INC     DPTR
   \   00005E   74FF         MOV     A,#-0x1
   \   000060   F0           MOVX    @DPTR,A
    739              if(dag->joined) {
   \   000061   EE           MOV     A,R6
   \   000062   2416         ADD     A,#0x16
   \   000064   F582         MOV     DPL,A
   \   000066   EF           MOV     A,R7
   \   000067   3400         ADDC    A,#0x0
   \   000069   F583         MOV     DPH,A
   \   00006B   E0           MOVX    A,@DPTR
   \   00006C   6069         JZ      ??rpl_nullify_parent_2
    740                if(dag->instance->def_route != NULL) {
   \   00006E   EE           MOV     A,R6
   \   00006F   241B         ADD     A,#0x1b
   \   000071   F582         MOV     DPL,A
   \   000073   EF           MOV     A,R7
   \   000074   3400         ADDC    A,#0x0
   \   000076   F583         MOV     DPH,A
   \   000078   E0           MOVX    A,@DPTR
   \   000079   F8           MOV     R0,A
   \   00007A   A3           INC     DPTR
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   C8           XCH     A,R0
   \   00007D   2479         ADD     A,#0x79
   \   00007F   F582         MOV     DPL,A
   \   000081   E8           MOV     A,R0
   \   000082   3400         ADDC    A,#0x0
   \   000084   F583         MOV     DPH,A
   \   000086   E0           MOVX    A,@DPTR
   \   000087   F8           MOV     R0,A
   \   000088   A3           INC     DPTR
   \   000089   E0           MOVX    A,@DPTR
   \   00008A   F9           MOV     R1,A
   \   00008B   E8           MOV     A,R0
   \   00008C   49           ORL     A,R1
   \   00008D   603F         JZ      ??rpl_nullify_parent_3
    741                  PRINTF("RPL: Removing default route ");
    742                  PRINT6ADDR(rpl_get_parent_ipaddr(parent));
    743                  PRINTF("\n");
    744                  uip_ds6_defrt_rm(dag->instance->def_route);
   \   00008F                ; Setup parameters for call to function uip_ds6_defrt_rm
   \   00008F   EE           MOV     A,R6
   \   000090   241B         ADD     A,#0x1b
   \   000092   F582         MOV     DPL,A
   \   000094   EF           MOV     A,R7
   \   000095   3400         ADDC    A,#0x0
   \   000097   F583         MOV     DPH,A
   \   000099   E0           MOVX    A,@DPTR
   \   00009A   F8           MOV     R0,A
   \   00009B   A3           INC     DPTR
   \   00009C   E0           MOVX    A,@DPTR
   \   00009D   C8           XCH     A,R0
   \   00009E   2479         ADD     A,#0x79
   \   0000A0   F582         MOV     DPL,A
   \   0000A2   E8           MOV     A,R0
   \   0000A3   3400         ADDC    A,#0x0
   \   0000A5   F583         MOV     DPH,A
   \   0000A7   E0           MOVX    A,@DPTR
   \   0000A8   FA           MOV     R2,A
   \   0000A9   A3           INC     DPTR
   \   0000AA   E0           MOVX    A,@DPTR
   \   0000AB   FB           MOV     R3,A
   \   0000AC   12....       LCALL   ??uip_ds6_defrt_rm?relay
    745                  dag->instance->def_route = NULL;
   \   0000AF   EE           MOV     A,R6
   \   0000B0   241B         ADD     A,#0x1b
   \   0000B2   F582         MOV     DPL,A
   \   0000B4   EF           MOV     A,R7
   \   0000B5   3400         ADDC    A,#0x0
   \   0000B7   F583         MOV     DPH,A
   \   0000B9   E0           MOVX    A,@DPTR
   \   0000BA   F8           MOV     R0,A
   \   0000BB   A3           INC     DPTR
   \   0000BC   E0           MOVX    A,@DPTR
   \   0000BD   C8           XCH     A,R0
   \   0000BE   2479         ADD     A,#0x79
   \   0000C0   F582         MOV     DPL,A
   \   0000C2   E8           MOV     A,R0
   \   0000C3   3400         ADDC    A,#0x0
   \   0000C5   F583         MOV     DPH,A
   \   0000C7   7400         MOV     A,#0x0
   \   0000C9   F0           MOVX    @DPTR,A
   \   0000CA   A3           INC     DPTR
   \   0000CB   7400         MOV     A,#0x0
   \   0000CD   F0           MOVX    @DPTR,A
    746                }
    747                dao_output(parent, RPL_ZERO_LIFETIME);
   \                     ??rpl_nullify_parent_3:
   \   0000CE                ; Setup parameters for call to function dao_output
   \   0000CE   7900         MOV     R1,#0x0
   \   0000D0   AA..         MOV     R2,?V0 + 0
   \   0000D2   AB..         MOV     R3,?V0 + 1
   \   0000D4   12....       LCALL   ??dao_output?relay
    748              }
    749            }
    750          
    751            PRINTF("RPL: Nullifying parent ");
    752            PRINT6ADDR(rpl_get_parent_ipaddr(parent));
    753            PRINTF("\n");
    754          }
   \                     ??rpl_nullify_parent_2:
   \   0000D7   7F02         MOV     R7,#0x2
   \   0000D9   02....       LJMP    ?BANKED_LEAVE_XDATA
    755          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    756          void
    757          rpl_move_parent(rpl_dag_t *dag_src, rpl_dag_t *dag_dst, rpl_parent_t *parent)
   \                     rpl_move_parent:
    758          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 2,R4
   \   00000B   8D..         MOV     ?V0 + 3,R5
   \   00000D   740C         MOV     A,#0xc
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 0,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   F5..         MOV     ?V0 + 1,A
    759            if(parent == dag_src->preferred_parent) {
   \   000019   EE           MOV     A,R6
   \   00001A   2417         ADD     A,#0x17
   \   00001C   F582         MOV     DPL,A
   \   00001E   EF           MOV     A,R7
   \   00001F   3400         ADDC    A,#0x0
   \   000021   F583         MOV     DPH,A
   \   000023   E0           MOVX    A,@DPTR
   \   000024   F8           MOV     R0,A
   \   000025   A3           INC     DPTR
   \   000026   E0           MOVX    A,@DPTR
   \   000027   F9           MOV     R1,A
   \   000028   E5..         MOV     A,?V0 + 0
   \   00002A   68           XRL     A,R0
   \   00002B   7003         JNZ     ??rpl_move_parent_0
   \   00002D   E5..         MOV     A,?V0 + 1
   \   00002F   69           XRL     A,R1
   \                     ??rpl_move_parent_0:
   \   000030   6003         JZ      $+5
   \   000032   02....       LJMP    ??rpl_move_parent_1 & 0xFFFF
    760                rpl_set_preferred_parent(dag_src, NULL);
   \   000035                ; Setup parameters for call to function rpl_set_preferred_parent
   \   000035   7C00         MOV     R4,#0x0
   \   000037   7D00         MOV     R5,#0x0
   \   000039   EE           MOV     A,R6
   \   00003A   FA           MOV     R2,A
   \   00003B   EF           MOV     A,R7
   \   00003C   FB           MOV     R3,A
   \   00003D   12....       LCALL   ??rpl_set_preferred_parent?relay
    761                dag_src->rank = INFINITE_RANK;
   \   000040   EE           MOV     A,R6
   \   000041   2419         ADD     A,#0x19
   \   000043   F582         MOV     DPL,A
   \   000045   EF           MOV     A,R7
   \   000046   3400         ADDC    A,#0x0
   \   000048   F583         MOV     DPH,A
   \   00004A   74FF         MOV     A,#-0x1
   \   00004C   F0           MOVX    @DPTR,A
   \   00004D   A3           INC     DPTR
   \   00004E   74FF         MOV     A,#-0x1
   \   000050   F0           MOVX    @DPTR,A
    762              if(dag_src->joined && dag_src->instance->def_route != NULL) {
   \   000051   EE           MOV     A,R6
   \   000052   2416         ADD     A,#0x16
   \   000054   F582         MOV     DPL,A
   \   000056   EF           MOV     A,R7
   \   000057   3400         ADDC    A,#0x0
   \   000059   F583         MOV     DPH,A
   \   00005B   E0           MOVX    A,@DPTR
   \   00005C   7003         JNZ     $+5
   \   00005E   02....       LJMP    ??rpl_move_parent_2 & 0xFFFF
   \   000061   EE           MOV     A,R6
   \   000062   241B         ADD     A,#0x1b
   \   000064   F582         MOV     DPL,A
   \   000066   EF           MOV     A,R7
   \   000067   3400         ADDC    A,#0x0
   \   000069   F583         MOV     DPH,A
   \   00006B   E0           MOVX    A,@DPTR
   \   00006C   F8           MOV     R0,A
   \   00006D   A3           INC     DPTR
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   C8           XCH     A,R0
   \   000070   2479         ADD     A,#0x79
   \   000072   F582         MOV     DPL,A
   \   000074   E8           MOV     A,R0
   \   000075   3400         ADDC    A,#0x0
   \   000077   F583         MOV     DPH,A
   \   000079   E0           MOVX    A,@DPTR
   \   00007A   F8           MOV     R0,A
   \   00007B   A3           INC     DPTR
   \   00007C   E0           MOVX    A,@DPTR
   \   00007D   F9           MOV     R1,A
   \   00007E   E8           MOV     A,R0
   \   00007F   49           ORL     A,R1
   \   000080   6066         JZ      ??rpl_move_parent_2
    763                PRINTF("RPL: Removing default route ");
    764                PRINT6ADDR(rpl_get_parent_ipaddr(parent));
    765                PRINTF("\n");
    766                PRINTF("rpl_move_parent\n");
    767                uip_ds6_defrt_rm(dag_src->instance->def_route);
   \   000082                ; Setup parameters for call to function uip_ds6_defrt_rm
   \   000082   EE           MOV     A,R6
   \   000083   241B         ADD     A,#0x1b
   \   000085   F582         MOV     DPL,A
   \   000087   EF           MOV     A,R7
   \   000088   3400         ADDC    A,#0x0
   \   00008A   F583         MOV     DPH,A
   \   00008C   E0           MOVX    A,@DPTR
   \   00008D   F8           MOV     R0,A
   \   00008E   A3           INC     DPTR
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   C8           XCH     A,R0
   \   000091   2479         ADD     A,#0x79
   \   000093   F582         MOV     DPL,A
   \   000095   E8           MOV     A,R0
   \   000096   3400         ADDC    A,#0x0
   \   000098   F583         MOV     DPH,A
   \   00009A   E0           MOVX    A,@DPTR
   \   00009B   FA           MOV     R2,A
   \   00009C   A3           INC     DPTR
   \   00009D   E0           MOVX    A,@DPTR
   \   00009E   FB           MOV     R3,A
   \   00009F   12....       LCALL   ??uip_ds6_defrt_rm?relay
    768                dag_src->instance->def_route = NULL;
   \   0000A2   EE           MOV     A,R6
   \   0000A3   241B         ADD     A,#0x1b
   \   0000A5   F582         MOV     DPL,A
   \   0000A7   EF           MOV     A,R7
   \   0000A8   3400         ADDC    A,#0x0
   \   0000AA   F583         MOV     DPH,A
   \   0000AC   E0           MOVX    A,@DPTR
   \   0000AD   F8           MOV     R0,A
   \   0000AE   A3           INC     DPTR
   \   0000AF   E0           MOVX    A,@DPTR
   \   0000B0   C8           XCH     A,R0
   \   0000B1   2479         ADD     A,#0x79
   \   0000B3   F582         MOV     DPL,A
   \   0000B5   E8           MOV     A,R0
   \   0000B6   3400         ADDC    A,#0x0
   \   0000B8   F583         MOV     DPH,A
   \   0000BA   7400         MOV     A,#0x0
   \   0000BC   F0           MOVX    @DPTR,A
   \   0000BD   A3           INC     DPTR
   \   0000BE   7400         MOV     A,#0x0
   \   0000C0   F0           MOVX    @DPTR,A
   \   0000C1   8025         SJMP    ??rpl_move_parent_2
    769              }
    770            } else if(dag_src->joined) {
   \                     ??rpl_move_parent_1:
   \   0000C3   EE           MOV     A,R6
   \   0000C4   2416         ADD     A,#0x16
   \   0000C6   F582         MOV     DPL,A
   \   0000C8   EF           MOV     A,R7
   \   0000C9   3400         ADDC    A,#0x0
   \   0000CB   F583         MOV     DPH,A
   \   0000CD   E0           MOVX    A,@DPTR
   \   0000CE   6018         JZ      ??rpl_move_parent_2
    771              /* Remove uIPv6 routes that have this parent as the next hop. */
    772              rpl_remove_routes_by_nexthop(rpl_get_parent_ipaddr(parent), dag_src);
   \   0000D0                ; Setup parameters for call to function rpl_remove_routes_by_nexthop
   \   0000D0   EE           MOV     A,R6
   \   0000D1   FC           MOV     R4,A
   \   0000D2   EF           MOV     A,R7
   \   0000D3   FD           MOV     R5,A
   \   0000D4   FF           MOV     R7,A
   \   0000D5   EC           MOV     A,R4
   \   0000D6   FE           MOV     R6,A
   \   0000D7   ED           MOV     A,R5
   \   0000D8   FF           MOV     R7,A
   \   0000D9                ; Setup parameters for call to function rpl_get_parent_ipaddr
   \   0000D9   AA..         MOV     R2,?V0 + 0
   \   0000DB   AB..         MOV     R3,?V0 + 1
   \   0000DD   12....       LCALL   ??rpl_get_parent_ipaddr?relay
   \   0000E0   FD           MOV     R5,A
   \   0000E1   EE           MOV     A,R6
   \   0000E2   FC           MOV     R4,A
   \   0000E3   EF           MOV     A,R7
   \   0000E4   FD           MOV     R5,A
   \   0000E5   12....       LCALL   ??rpl_remove_routes_by_nexthop?relay
    773            }
    774          
    775            PRINTF("RPL: Moving parent ");
    776            PRINT6ADDR(rpl_get_parent_ipaddr(parent));
    777            PRINTF("\n");
    778          
    779            list_remove(dag_src->parents, parent);
   \                     ??rpl_move_parent_2:
   \   0000E8                ; Setup parameters for call to function list_remove
   \   0000E8   AC..         MOV     R4,?V0 + 0
   \   0000EA   AD..         MOV     R5,?V0 + 1
   \   0000EC   EE           MOV     A,R6
   \   0000ED   241F         ADD     A,#0x1f
   \   0000EF   F582         MOV     DPL,A
   \   0000F1   EF           MOV     A,R7
   \   0000F2   3400         ADDC    A,#0x0
   \   0000F4   F583         MOV     DPH,A
   \   0000F6   E0           MOVX    A,@DPTR
   \   0000F7   FA           MOV     R2,A
   \   0000F8   A3           INC     DPTR
   \   0000F9   E0           MOVX    A,@DPTR
   \   0000FA   FB           MOV     R3,A
   \   0000FB   12....       LCALL   ??list_remove?relay
    780            parent->dag = dag_dst;
   \   0000FE   85..82       MOV     DPL,?V0 + 0
   \   000101   85..83       MOV     DPH,?V0 + 1
   \   000104   A3           INC     DPTR
   \   000105   A3           INC     DPTR
   \   000106   E5..         MOV     A,?V0 + 2
   \   000108   F0           MOVX    @DPTR,A
   \   000109   A3           INC     DPTR
   \   00010A   E5..         MOV     A,?V0 + 3
   \   00010C   F0           MOVX    @DPTR,A
    781            list_add(dag_dst->parents, parent);
   \   00010D                ; Setup parameters for call to function list_add
   \   00010D   AC..         MOV     R4,?V0 + 0
   \   00010F   AD..         MOV     R5,?V0 + 1
   \   000111   E5..         MOV     A,?V0 + 2
   \   000113   241F         ADD     A,#0x1f
   \   000115   F582         MOV     DPL,A
   \   000117   E5..         MOV     A,?V0 + 3
   \   000119   3400         ADDC    A,#0x0
   \   00011B   F583         MOV     DPH,A
   \   00011D   E0           MOVX    A,@DPTR
   \   00011E   FA           MOV     R2,A
   \   00011F   A3           INC     DPTR
   \   000120   E0           MOVX    A,@DPTR
   \   000121   FB           MOV     R3,A
   \   000122   12....       LCALL   ??list_add?relay
    782          }
   \   000125   7F04         MOV     R7,#0x4
   \   000127   02....       LJMP    ?BANKED_LEAVE_XDATA
    783          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    784          rpl_dag_t *
    785          rpl_get_any_dag(void)
   \                     rpl_get_any_dag:
    786          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    787            int i;
    788          
    789            for(i = 0; i < RPL_MAX_INSTANCES; ++i) {
   \   000004   7800         MOV     R0,#0x0
   \   000006   7900         MOV     R1,#0x0
   \   000008   8008         SJMP    ??rpl_get_any_dag_0
   \                     ??rpl_get_any_dag_1:
   \   00000A   E8           MOV     A,R0
   \   00000B   2401         ADD     A,#0x1
   \   00000D   F8           MOV     R0,A
   \   00000E   E9           MOV     A,R1
   \   00000F   3400         ADDC    A,#0x0
   \   000011   F9           MOV     R1,A
   \                     ??rpl_get_any_dag_0:
   \   000012   C3           CLR     C
   \   000013   E8           MOV     A,R0
   \   000014   9401         SUBB    A,#0x1
   \   000016   E9           MOV     A,R1
   \   000017   9400         SUBB    A,#0x0
   \   000019   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00001B   65D0         XRL     A,PSW
   \   00001D   33           RLC     A
   \   00001E   4003         JC      $+5
   \   000020   02....       LJMP    ??rpl_get_any_dag_2 & 0xFFFF
    790              if(instance_table[i].used && instance_table[i].current_dag->joined) {
   \   000023   E8           MOV     A,R0
   \   000024   FA           MOV     R2,A
   \   000025   E9           MOV     A,R1
   \   000026   FB           MOV     R3,A
   \   000027   EA           MOV     A,R2
   \   000028   75F0AE       MOV     B,#-0x52
   \   00002B   A4           MUL     AB
   \   00002C   CA           XCH     A,R2
   \   00002D   ACF0         MOV     R4,B
   \   00002F   75F000       MOV     B,#0x0
   \   000032   A4           MUL     AB
   \   000033   2C           ADD     A,R4
   \   000034   FC           MOV     R4,A
   \   000035   75F0AE       MOV     B,#-0x52
   \   000038   EB           MOV     A,R3
   \   000039   A4           MUL     AB
   \   00003A   2C           ADD     A,R4
   \   00003B   FB           MOV     R3,A
   \   00003C   74..         MOV     A,#(instance_table + 124) & 0xff
   \   00003E   2A           ADD     A,R2
   \   00003F   F582         MOV     DPL,A
   \   000041   74..         MOV     A,#((instance_table + 124) >> 8) & 0xff
   \   000043   3B           ADDC    A,R3
   \   000044   F583         MOV     DPH,A
   \   000046   E0           MOVX    A,@DPTR
   \   000047   60C1         JZ      ??rpl_get_any_dag_1
   \   000049   E8           MOV     A,R0
   \   00004A   FA           MOV     R2,A
   \   00004B   E9           MOV     A,R1
   \   00004C   FB           MOV     R3,A
   \   00004D   EA           MOV     A,R2
   \   00004E   75F0AE       MOV     B,#-0x52
   \   000051   A4           MUL     AB
   \   000052   CA           XCH     A,R2
   \   000053   ACF0         MOV     R4,B
   \   000055   75F000       MOV     B,#0x0
   \   000058   A4           MUL     AB
   \   000059   2C           ADD     A,R4
   \   00005A   FC           MOV     R4,A
   \   00005B   75F0AE       MOV     B,#-0x52
   \   00005E   EB           MOV     A,R3
   \   00005F   A4           MUL     AB
   \   000060   2C           ADD     A,R4
   \   000061   FB           MOV     R3,A
   \   000062   74..         MOV     A,#(instance_table + 9) & 0xff
   \   000064   2A           ADD     A,R2
   \   000065   F582         MOV     DPL,A
   \   000067   74..         MOV     A,#((instance_table + 9) >> 8) & 0xff
   \   000069   3B           ADDC    A,R3
   \   00006A   F583         MOV     DPH,A
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   FA           MOV     R2,A
   \   00006E   A3           INC     DPTR
   \   00006F   E0           MOVX    A,@DPTR
   \   000070   CA           XCH     A,R2
   \   000071   2416         ADD     A,#0x16
   \   000073   F582         MOV     DPL,A
   \   000075   EA           MOV     A,R2
   \   000076   3400         ADDC    A,#0x0
   \   000078   F583         MOV     DPH,A
   \   00007A   E0           MOVX    A,@DPTR
   \   00007B   608D         JZ      ??rpl_get_any_dag_1
    791                return instance_table[i].current_dag;
   \   00007D   E8           MOV     A,R0
   \   00007E   75F0AE       MOV     B,#-0x52
   \   000081   A4           MUL     AB
   \   000082   C8           XCH     A,R0
   \   000083   AAF0         MOV     R2,B
   \   000085   75F000       MOV     B,#0x0
   \   000088   A4           MUL     AB
   \   000089   2A           ADD     A,R2
   \   00008A   FA           MOV     R2,A
   \   00008B   75F0AE       MOV     B,#-0x52
   \   00008E   E9           MOV     A,R1
   \   00008F   A4           MUL     AB
   \   000090   2A           ADD     A,R2
   \   000091   F9           MOV     R1,A
   \   000092   74..         MOV     A,#(instance_table + 9) & 0xff
   \   000094   28           ADD     A,R0
   \   000095   F582         MOV     DPL,A
   \   000097   74..         MOV     A,#((instance_table + 9) >> 8) & 0xff
   \   000099   39           ADDC    A,R1
   \   00009A   F583         MOV     DPH,A
   \   00009C   E0           MOVX    A,@DPTR
   \   00009D   FA           MOV     R2,A
   \   00009E   A3           INC     DPTR
   \   00009F   E0           MOVX    A,@DPTR
   \   0000A0   FB           MOV     R3,A
   \   0000A1   8004         SJMP    ??rpl_get_any_dag_3
    792              }
    793            }
    794            return NULL;
   \                     ??rpl_get_any_dag_2:
   \   0000A3   7A00         MOV     R2,#0x0
   \   0000A5   7B00         MOV     R3,#0x0
   \                     ??rpl_get_any_dag_3:
   \   0000A7   D083         POP     DPH
   \   0000A9   D082         POP     DPL
   \   0000AB   02....       LJMP    ?BRET
    795          }
    796          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    797          rpl_instance_t *
    798          rpl_get_instance(uint8_t instance_id)
   \                     rpl_get_instance:
    799          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    800            int i;
    801          
    802            for(i = 0; i < RPL_MAX_INSTANCES; ++i) {
   \   000004   7A00         MOV     R2,#0x0
   \   000006   7B00         MOV     R3,#0x0
   \   000008   8008         SJMP    ??rpl_get_instance_0
   \                     ??rpl_get_instance_1:
   \   00000A   EA           MOV     A,R2
   \   00000B   2401         ADD     A,#0x1
   \   00000D   FA           MOV     R2,A
   \   00000E   EB           MOV     A,R3
   \   00000F   3400         ADDC    A,#0x0
   \   000011   FB           MOV     R3,A
   \                     ??rpl_get_instance_0:
   \   000012   C3           CLR     C
   \   000013   EA           MOV     A,R2
   \   000014   9401         SUBB    A,#0x1
   \   000016   EB           MOV     A,R3
   \   000017   9400         SUBB    A,#0x0
   \   000019   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00001B   65D0         XRL     A,PSW
   \   00001D   33           RLC     A
   \   00001E   506C         JNC     ??rpl_get_instance_2
    803              if(instance_table[i].used && instance_table[i].instance_id == instance_id) {
   \   000020   EA           MOV     A,R2
   \   000021   FC           MOV     R4,A
   \   000022   EB           MOV     A,R3
   \   000023   FD           MOV     R5,A
   \   000024   EC           MOV     A,R4
   \   000025   75F0AE       MOV     B,#-0x52
   \   000028   A4           MUL     AB
   \   000029   CC           XCH     A,R4
   \   00002A   A8F0         MOV     R0,B
   \   00002C   75F000       MOV     B,#0x0
   \   00002F   A4           MUL     AB
   \   000030   28           ADD     A,R0
   \   000031   F8           MOV     R0,A
   \   000032   75F0AE       MOV     B,#-0x52
   \   000035   ED           MOV     A,R5
   \   000036   A4           MUL     AB
   \   000037   28           ADD     A,R0
   \   000038   FD           MOV     R5,A
   \   000039   74..         MOV     A,#(instance_table + 124) & 0xff
   \   00003B   2C           ADD     A,R4
   \   00003C   F582         MOV     DPL,A
   \   00003E   74..         MOV     A,#((instance_table + 124) >> 8) & 0xff
   \   000040   3D           ADDC    A,R5
   \   000041   F583         MOV     DPH,A
   \   000043   E0           MOVX    A,@DPTR
   \   000044   60C4         JZ      ??rpl_get_instance_1
   \   000046   EA           MOV     A,R2
   \   000047   FC           MOV     R4,A
   \   000048   EB           MOV     A,R3
   \   000049   FD           MOV     R5,A
   \   00004A   EC           MOV     A,R4
   \   00004B   75F0AE       MOV     B,#-0x52
   \   00004E   A4           MUL     AB
   \   00004F   CC           XCH     A,R4
   \   000050   A8F0         MOV     R0,B
   \   000052   75F000       MOV     B,#0x0
   \   000055   A4           MUL     AB
   \   000056   28           ADD     A,R0
   \   000057   F8           MOV     R0,A
   \   000058   75F0AE       MOV     B,#-0x52
   \   00005B   ED           MOV     A,R5
   \   00005C   A4           MUL     AB
   \   00005D   28           ADD     A,R0
   \   00005E   FD           MOV     R5,A
   \   00005F   74..         MOV     A,#(instance_table + 123) & 0xff
   \   000061   2C           ADD     A,R4
   \   000062   F582         MOV     DPL,A
   \   000064   74..         MOV     A,#((instance_table + 123) >> 8) & 0xff
   \   000066   3D           ADDC    A,R5
   \   000067   F583         MOV     DPH,A
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   69           XRL     A,R1
   \   00006B   709D         JNZ     ??rpl_get_instance_1
    804                return &instance_table[i];
   \   00006D   EA           MOV     A,R2
   \   00006E   75F0AE       MOV     B,#-0x52
   \   000071   A4           MUL     AB
   \   000072   CA           XCH     A,R2
   \   000073   A8F0         MOV     R0,B
   \   000075   75F000       MOV     B,#0x0
   \   000078   A4           MUL     AB
   \   000079   28           ADD     A,R0
   \   00007A   F8           MOV     R0,A
   \   00007B   75F0AE       MOV     B,#-0x52
   \   00007E   EB           MOV     A,R3
   \   00007F   A4           MUL     AB
   \   000080   28           ADD     A,R0
   \   000081   FB           MOV     R3,A
   \   000082   74..         MOV     A,#instance_table & 0xff
   \   000084   2A           ADD     A,R2
   \   000085   FA           MOV     R2,A
   \   000086   74..         MOV     A,#(instance_table >> 8) & 0xff
   \   000088   3B           ADDC    A,R3
   \   000089   FB           MOV     R3,A
   \   00008A   8004         SJMP    ??rpl_get_instance_3
    805              }
    806            }
    807            return NULL;
   \                     ??rpl_get_instance_2:
   \   00008C   7A00         MOV     R2,#0x0
   \   00008E   7B00         MOV     R3,#0x0
   \                     ??rpl_get_instance_3:
   \   000090   D083         POP     DPH
   \   000092   D082         POP     DPL
   \   000094   02....       LJMP    ?BRET
    808          }
    809          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    810          rpl_of_t *
    811          rpl_find_of(rpl_ocp_t ocp)
   \                     rpl_find_of:
    812          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    813            unsigned int i;
    814          
    815            for(i = 0;
   \   000005   7800         MOV     R0,#0x0
   \   000007   7900         MOV     R1,#0x0
   \   000009   8008         SJMP    ??rpl_find_of_0
    816                i < sizeof(objective_functions) / sizeof(objective_functions[0]);
    817                i++) {
   \                     ??rpl_find_of_1:
   \   00000B   E8           MOV     A,R0
   \   00000C   2401         ADD     A,#0x1
   \   00000E   F8           MOV     R0,A
   \   00000F   E9           MOV     A,R1
   \   000010   3400         ADDC    A,#0x0
   \   000012   F9           MOV     R1,A
   \                     ??rpl_find_of_0:
   \   000013   E8           MOV     A,R0
   \   000014   49           ORL     A,R1
   \   000015   7060         JNZ     ??rpl_find_of_2
    818              if(objective_functions[i]->ocp == ocp) {
   \   000017   E8           MOV     A,R0
   \   000018   FC           MOV     R4,A
   \   000019   E9           MOV     A,R1
   \   00001A   FD           MOV     R5,A
   \   00001B   EC           MOV     A,R4
   \   00001C   75F002       MOV     B,#0x2
   \   00001F   A4           MUL     AB
   \   000020   CC           XCH     A,R4
   \   000021   AEF0         MOV     R6,B
   \   000023   75F000       MOV     B,#0x0
   \   000026   A4           MUL     AB
   \   000027   2E           ADD     A,R6
   \   000028   FE           MOV     R6,A
   \   000029   75F002       MOV     B,#0x2
   \   00002C   ED           MOV     A,R5
   \   00002D   A4           MUL     AB
   \   00002E   2E           ADD     A,R6
   \   00002F   FD           MOV     R5,A
   \   000030   74..         MOV     A,#objective_functions & 0xff
   \   000032   2C           ADD     A,R4
   \   000033   F582         MOV     DPL,A
   \   000035   74..         MOV     A,#(objective_functions >> 8) & 0xff
   \   000037   3D           ADDC    A,R5
   \   000038   F583         MOV     DPH,A
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   FC           MOV     R4,A
   \   00003C   A3           INC     DPTR
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   CC           XCH     A,R4
   \   00003F   240C         ADD     A,#0xc
   \   000041   F582         MOV     DPL,A
   \   000043   EC           MOV     A,R4
   \   000044   3400         ADDC    A,#0x0
   \   000046   F583         MOV     DPH,A
   \   000048   E0           MOVX    A,@DPTR
   \   000049   6A           XRL     A,R2
   \   00004A   7003         JNZ     ??rpl_find_of_3
   \   00004C   A3           INC     DPTR
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   6B           XRL     A,R3
   \                     ??rpl_find_of_3:
   \   00004F   70BA         JNZ     ??rpl_find_of_1
    819                return objective_functions[i];
   \   000051   E8           MOV     A,R0
   \   000052   75F002       MOV     B,#0x2
   \   000055   A4           MUL     AB
   \   000056   C8           XCH     A,R0
   \   000057   AAF0         MOV     R2,B
   \   000059   75F000       MOV     B,#0x0
   \   00005C   A4           MUL     AB
   \   00005D   2A           ADD     A,R2
   \   00005E   FA           MOV     R2,A
   \   00005F   75F002       MOV     B,#0x2
   \   000062   E9           MOV     A,R1
   \   000063   A4           MUL     AB
   \   000064   2A           ADD     A,R2
   \   000065   F9           MOV     R1,A
   \   000066   74..         MOV     A,#objective_functions & 0xff
   \   000068   28           ADD     A,R0
   \   000069   F582         MOV     DPL,A
   \   00006B   74..         MOV     A,#(objective_functions >> 8) & 0xff
   \   00006D   39           ADDC    A,R1
   \   00006E   F583         MOV     DPH,A
   \   000070   E0           MOVX    A,@DPTR
   \   000071   FA           MOV     R2,A
   \   000072   A3           INC     DPTR
   \   000073   E0           MOVX    A,@DPTR
   \   000074   FB           MOV     R3,A
   \   000075   8004         SJMP    ??rpl_find_of_4
    820              }
    821            }
    822          
    823            return NULL;
   \                     ??rpl_find_of_2:
   \   000077   7A00         MOV     R2,#0x0
   \   000079   7B00         MOV     R3,#0x0
   \                     ??rpl_find_of_4:
   \   00007B   7F01         MOV     R7,#0x1
   \   00007D   02....       LJMP    ?BANKED_LEAVE_XDATA
    824          }
    825          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    826          void
    827          rpl_join_instance(uip_ipaddr_t *from, rpl_dio_t *dio)
   \                     rpl_join_instance:
    828          {
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 8,R2
   \   000007   8B..         MOV     ?V0 + 9,R3
   \   000009   8C..         MOV     ?V0 + 2,R4
   \   00000B   8D..         MOV     ?V0 + 3,R5
    829            rpl_instance_t *instance;
    830            rpl_dag_t *dag;
    831            rpl_parent_t *p;
    832            rpl_of_t *of;
    833          
    834            dag = rpl_alloc_dag(dio->instance_id, &dio->dag_id);
   \   00000D                ; Setup parameters for call to function rpl_alloc_dag
   \   00000D   AA..         MOV     R2,?V0 + 2
   \   00000F   AB..         MOV     R3,?V0 + 3
   \   000011   E5..         MOV     A,?V0 + 2
   \   000013   2418         ADD     A,#0x18
   \   000015   F582         MOV     DPL,A
   \   000017   E5..         MOV     A,?V0 + 3
   \   000019   3400         ADDC    A,#0x0
   \   00001B   F583         MOV     DPH,A
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   F9           MOV     R1,A
   \   00001F   12....       LCALL   ??rpl_alloc_dag?relay
   \   000022   8A..         MOV     ?V0 + 4,R2
   \   000024   8B..         MOV     ?V0 + 5,R3
   \   000026   85....       MOV     ?V0 + 0,?V0 + 4
   \   000029   85....       MOV     ?V0 + 1,?V0 + 5
    835            if(dag == NULL) {
   \   00002C   E5..         MOV     A,?V0 + 0
   \   00002E   45..         ORL     A,?V0 + 1
   \   000030   7003         JNZ     $+5
   \   000032   02....       LJMP    ??rpl_join_instance_0 & 0xFFFF
    836              PRINTF("RPL: Failed to allocate a DAG object!\n");
    837              return;
    838            }
    839          
    840            instance = dag->instance;
   \   000035   E5..         MOV     A,?V0 + 0
   \   000037   241B         ADD     A,#0x1b
   \   000039   F582         MOV     DPL,A
   \   00003B   E5..         MOV     A,?V0 + 1
   \   00003D   3400         ADDC    A,#0x0
   \   00003F   F583         MOV     DPH,A
   \   000041   E0           MOVX    A,@DPTR
   \   000042   FE           MOV     R6,A
   \   000043   A3           INC     DPTR
   \   000044   E0           MOVX    A,@DPTR
   \   000045   FF           MOV     R7,A
    841          
    842            p = rpl_add_parent(dag, dio, from);
   \   000046                ; Setup parameters for call to function rpl_add_parent
   \   000046   78..         MOV     R0,#?V0 + 8
   \   000048   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004B   AC..         MOV     R4,?V0 + 2
   \   00004D   AD..         MOV     R5,?V0 + 3
   \   00004F   AA..         MOV     R2,?V0 + 0
   \   000051   AB..         MOV     R3,?V0 + 1
   \   000053   12....       LCALL   ??rpl_add_parent?relay
   \   000056   7402         MOV     A,#0x2
   \   000058   12....       LCALL   ?DEALLOC_XSTACK8
   \   00005B   8A..         MOV     ?V0 + 6,R2
   \   00005D   8B..         MOV     ?V0 + 7,R3
   \   00005F   85....       MOV     ?V0 + 4,?V0 + 6
   \   000062   85....       MOV     ?V0 + 5,?V0 + 7
    843            PRINTF("RPL: Adding ");
    844            PRINT6ADDR(from);
    845            PRINTF(" as a parent: ");
    846            if(p == NULL) {
   \   000065   E5..         MOV     A,?V0 + 4
   \   000067   45..         ORL     A,?V0 + 5
   \   000069   7010         JNZ     ??rpl_join_instance_1
    847              PRINTF("failed\n");
    848              instance->used = 0;
   \   00006B   EE           MOV     A,R6
   \   00006C   247C         ADD     A,#0x7c
   \   00006E   F582         MOV     DPL,A
   \   000070   EF           MOV     A,R7
   \   000071   3400         ADDC    A,#0x0
   \   000073   F583         MOV     DPH,A
   \   000075   7400         MOV     A,#0x0
   \   000077   F0           MOVX    @DPTR,A
    849              return;
   \   000078   02....       LJMP    ??rpl_join_instance_0 & 0xFFFF
    850            }
    851            p->dtsn = dio->dtsn;
   \                     ??rpl_join_instance_1:
   \   00007B   E5..         MOV     A,?V0 + 2
   \   00007D   2419         ADD     A,#0x19
   \   00007F   F582         MOV     DPL,A
   \   000081   E5..         MOV     A,?V0 + 3
   \   000083   3400         ADDC    A,#0x0
   \   000085   F583         MOV     DPH,A
   \   000087   E0           MOVX    A,@DPTR
   \   000088   85..82       MOV     DPL,?V0 + 4
   \   00008B   85..83       MOV     DPH,?V0 + 5
   \   00008E   A3           INC     DPTR
   \   00008F   A3           INC     DPTR
   \   000090   A3           INC     DPTR
   \   000091   A3           INC     DPTR
   \   000092   A3           INC     DPTR
   \   000093   A3           INC     DPTR
   \   000094   A3           INC     DPTR
   \   000095   A3           INC     DPTR
   \   000096   F0           MOVX    @DPTR,A
    852            PRINTF("succeeded\n");
    853          
    854            /* Determine the objective function by using the
    855               objective code point of the DIO. */
    856            of = rpl_find_of(dio->ocp);
   \   000097                ; Setup parameters for call to function rpl_find_of
   \   000097   E5..         MOV     A,?V0 + 2
   \   000099   2410         ADD     A,#0x10
   \   00009B   F582         MOV     DPL,A
   \   00009D   E5..         MOV     A,?V0 + 3
   \   00009F   3400         ADDC    A,#0x0
   \   0000A1   F583         MOV     DPH,A
   \   0000A3   E0           MOVX    A,@DPTR
   \   0000A4   FA           MOV     R2,A
   \   0000A5   A3           INC     DPTR
   \   0000A6   E0           MOVX    A,@DPTR
   \   0000A7   FB           MOV     R3,A
   \   0000A8   12....       LCALL   ??rpl_find_of?relay
   \   0000AB   8A..         MOV     ?V0 + 10,R2
   \   0000AD   8B..         MOV     ?V0 + 11,R3
   \   0000AF   85....       MOV     ?V0 + 6,?V0 + 10
   \   0000B2   85....       MOV     ?V0 + 7,?V0 + 11
    857            if(of == NULL) {
   \   0000B5   E5..         MOV     A,?V0 + 6
   \   0000B7   45..         ORL     A,?V0 + 7
   \   0000B9   7017         JNZ     ??rpl_join_instance_2
    858              PRINTF("RPL: DIO for DAG instance %u does not specify a supported OF\n",
    859                  dio->instance_id);
    860              rpl_remove_parent(p);
   \   0000BB                ; Setup parameters for call to function rpl_remove_parent
   \   0000BB   AA..         MOV     R2,?V0 + 4
   \   0000BD   AB..         MOV     R3,?V0 + 5
   \   0000BF   12....       LCALL   ??rpl_remove_parent?relay
    861              instance->used = 0;
   \   0000C2   EE           MOV     A,R6
   \   0000C3   247C         ADD     A,#0x7c
   \   0000C5   F582         MOV     DPL,A
   \   0000C7   EF           MOV     A,R7
   \   0000C8   3400         ADDC    A,#0x0
   \   0000CA   F583         MOV     DPH,A
   \   0000CC   7400         MOV     A,#0x0
   \   0000CE   F0           MOVX    @DPTR,A
    862              return;
   \   0000CF   02....       LJMP    ??rpl_join_instance_0 & 0xFFFF
    863            }
    864          
    865            /* Autoconfigure an address if this node does not already have an address
    866               with this prefix. */
    867            if(dio->prefix_info.flags & UIP_ND6_RA_FLAG_AUTONOMOUS) {
   \                     ??rpl_join_instance_2:
   \   0000D2   E5..         MOV     A,?V0 + 2
   \   0000D4   244F         ADD     A,#0x4f
   \   0000D6   F582         MOV     DPL,A
   \   0000D8   E5..         MOV     A,?V0 + 3
   \   0000DA   3400         ADDC    A,#0x0
   \   0000DC   F583         MOV     DPH,A
   \   0000DE   E0           MOVX    A,@DPTR
   \   0000DF   A2E6         MOV     C,0xE0 /* A   */.6
   \   0000E1   5011         JNC     ??rpl_join_instance_3
    868              check_prefix(NULL, &dio->prefix_info);
   \   0000E3                ; Setup parameters for call to function check_prefix
   \   0000E3   E5..         MOV     A,?V0 + 2
   \   0000E5   243A         ADD     A,#0x3a
   \   0000E7   FC           MOV     R4,A
   \   0000E8   E5..         MOV     A,?V0 + 3
   \   0000EA   3400         ADDC    A,#0x0
   \   0000EC   FD           MOV     R5,A
   \   0000ED   7A00         MOV     R2,#0x0
   \   0000EF   7B00         MOV     R3,#0x0
   \   0000F1   12....       LCALL   ??check_prefix?relay
    869            }
    870          
    871            dag->joined = 1;
   \                     ??rpl_join_instance_3:
   \   0000F4   E5..         MOV     A,?V0 + 0
   \   0000F6   2416         ADD     A,#0x16
   \   0000F8   F582         MOV     DPL,A
   \   0000FA   E5..         MOV     A,?V0 + 1
   \   0000FC   3400         ADDC    A,#0x0
   \   0000FE   F583         MOV     DPH,A
   \   000100   7401         MOV     A,#0x1
   \   000102   F0           MOVX    @DPTR,A
    872            dag->preference = dio->preference;
   \   000103   E5..         MOV     A,?V0 + 2
   \   000105   2416         ADD     A,#0x16
   \   000107   F582         MOV     DPL,A
   \   000109   E5..         MOV     A,?V0 + 3
   \   00010B   3400         ADDC    A,#0x0
   \   00010D   F583         MOV     DPH,A
   \   00010F   E0           MOVX    A,@DPTR
   \   000110   C0E0         PUSH    A
   \   000112   E5..         MOV     A,?V0 + 0
   \   000114   2414         ADD     A,#0x14
   \   000116   F582         MOV     DPL,A
   \   000118   E5..         MOV     A,?V0 + 1
   \   00011A   3400         ADDC    A,#0x0
   \   00011C   F583         MOV     DPH,A
   \   00011E   D0E0         POP     A
   \   000120   F0           MOVX    @DPTR,A
    873            dag->grounded = dio->grounded;
   \   000121   E5..         MOV     A,?V0 + 2
   \   000123   2414         ADD     A,#0x14
   \   000125   F582         MOV     DPL,A
   \   000127   E5..         MOV     A,?V0 + 3
   \   000129   3400         ADDC    A,#0x0
   \   00012B   F583         MOV     DPH,A
   \   00012D   E0           MOVX    A,@DPTR
   \   00012E   C0E0         PUSH    A
   \   000130   E5..         MOV     A,?V0 + 0
   \   000132   2413         ADD     A,#0x13
   \   000134   F582         MOV     DPL,A
   \   000136   E5..         MOV     A,?V0 + 1
   \   000138   3400         ADDC    A,#0x0
   \   00013A   F583         MOV     DPH,A
   \   00013C   D0E0         POP     A
   \   00013E   F0           MOVX    @DPTR,A
    874            dag->version = dio->version;
   \   00013F   E5..         MOV     A,?V0 + 2
   \   000141   2417         ADD     A,#0x17
   \   000143   F582         MOV     DPL,A
   \   000145   E5..         MOV     A,?V0 + 3
   \   000147   3400         ADDC    A,#0x0
   \   000149   F583         MOV     DPH,A
   \   00014B   E0           MOVX    A,@DPTR
   \   00014C   C0E0         PUSH    A
   \   00014E   E5..         MOV     A,?V0 + 0
   \   000150   2412         ADD     A,#0x12
   \   000152   F582         MOV     DPL,A
   \   000154   E5..         MOV     A,?V0 + 1
   \   000156   3400         ADDC    A,#0x0
   \   000158   F583         MOV     DPH,A
   \   00015A   D0E0         POP     A
   \   00015C   F0           MOVX    @DPTR,A
    875          
    876            instance->of = of;
   \   00015D   8E82         MOV     DPL,R6
   \   00015F   8F83         MOV     DPH,R7
   \   000161   A3           INC     DPTR
   \   000162   A3           INC     DPTR
   \   000163   A3           INC     DPTR
   \   000164   A3           INC     DPTR
   \   000165   A3           INC     DPTR
   \   000166   A3           INC     DPTR
   \   000167   A3           INC     DPTR
   \   000168   E5..         MOV     A,?V0 + 6
   \   00016A   F0           MOVX    @DPTR,A
   \   00016B   A3           INC     DPTR
   \   00016C   E5..         MOV     A,?V0 + 7
   \   00016E   F0           MOVX    @DPTR,A
    877            instance->mop = dio->mop;
   \   00016F   E5..         MOV     A,?V0 + 2
   \   000171   2415         ADD     A,#0x15
   \   000173   F582         MOV     DPL,A
   \   000175   E5..         MOV     A,?V0 + 3
   \   000177   3400         ADDC    A,#0x0
   \   000179   F583         MOV     DPH,A
   \   00017B   E0           MOVX    A,@DPTR
   \   00017C   C0E0         PUSH    A
   \   00017E   EE           MOV     A,R6
   \   00017F   247E         ADD     A,#0x7e
   \   000181   F582         MOV     DPL,A
   \   000183   EF           MOV     A,R7
   \   000184   3400         ADDC    A,#0x0
   \   000186   F583         MOV     DPH,A
   \   000188   D0E0         POP     A
   \   00018A   F0           MOVX    @DPTR,A
    878            instance->current_dag = dag;
   \   00018B   8E82         MOV     DPL,R6
   \   00018D   8F83         MOV     DPH,R7
   \   00018F   A3           INC     DPTR
   \   000190   A3           INC     DPTR
   \   000191   A3           INC     DPTR
   \   000192   A3           INC     DPTR
   \   000193   A3           INC     DPTR
   \   000194   A3           INC     DPTR
   \   000195   A3           INC     DPTR
   \   000196   A3           INC     DPTR
   \   000197   A3           INC     DPTR
   \   000198   E5..         MOV     A,?V0 + 0
   \   00019A   F0           MOVX    @DPTR,A
   \   00019B   A3           INC     DPTR
   \   00019C   E5..         MOV     A,?V0 + 1
   \   00019E   F0           MOVX    @DPTR,A
    879            instance->dtsn_out = RPL_LOLLIPOP_INIT;
   \   00019F   EE           MOV     A,R6
   \   0001A0   247D         ADD     A,#0x7d
   \   0001A2   F582         MOV     DPL,A
   \   0001A4   EF           MOV     A,R7
   \   0001A5   3400         ADDC    A,#0x0
   \   0001A7   F583         MOV     DPH,A
   \   0001A9   74F0         MOV     A,#-0x10
   \   0001AB   F0           MOVX    @DPTR,A
    880          
    881            instance->max_rankinc = dio->dag_max_rankinc;
   \   0001AC   E5..         MOV     A,?V0 + 2
   \   0001AE   2420         ADD     A,#0x20
   \   0001B0   F582         MOV     DPL,A
   \   0001B2   E5..         MOV     A,?V0 + 3
   \   0001B4   3400         ADDC    A,#0x0
   \   0001B6   F583         MOV     DPH,A
   \   0001B8   E0           MOVX    A,@DPTR
   \   0001B9   F8           MOV     R0,A
   \   0001BA   A3           INC     DPTR
   \   0001BB   E0           MOVX    A,@DPTR
   \   0001BC   F9           MOV     R1,A
   \   0001BD   EE           MOV     A,R6
   \   0001BE   2486         ADD     A,#-0x7a
   \   0001C0   F582         MOV     DPL,A
   \   0001C2   EF           MOV     A,R7
   \   0001C3   3400         ADDC    A,#0x0
   \   0001C5   F583         MOV     DPH,A
   \   0001C7   E8           MOV     A,R0
   \   0001C8   F0           MOVX    @DPTR,A
   \   0001C9   A3           INC     DPTR
   \   0001CA   E9           MOV     A,R1
   \   0001CB   F0           MOVX    @DPTR,A
    882            instance->min_hoprankinc = dio->dag_min_hoprankinc;
   \   0001CC   E5..         MOV     A,?V0 + 2
   \   0001CE   2422         ADD     A,#0x22
   \   0001D0   F582         MOV     DPL,A
   \   0001D2   E5..         MOV     A,?V0 + 3
   \   0001D4   3400         ADDC    A,#0x0
   \   0001D6   F583         MOV     DPH,A
   \   0001D8   E0           MOVX    A,@DPTR
   \   0001D9   F8           MOV     R0,A
   \   0001DA   A3           INC     DPTR
   \   0001DB   E0           MOVX    A,@DPTR
   \   0001DC   F9           MOV     R1,A
   \   0001DD   EE           MOV     A,R6
   \   0001DE   2488         ADD     A,#-0x78
   \   0001E0   F582         MOV     DPL,A
   \   0001E2   EF           MOV     A,R7
   \   0001E3   3400         ADDC    A,#0x0
   \   0001E5   F583         MOV     DPH,A
   \   0001E7   E8           MOV     A,R0
   \   0001E8   F0           MOVX    @DPTR,A
   \   0001E9   A3           INC     DPTR
   \   0001EA   E9           MOV     A,R1
   \   0001EB   F0           MOVX    @DPTR,A
    883            instance->dio_intdoubl = dio->dag_intdoubl;
   \   0001EC   E5..         MOV     A,?V0 + 2
   \   0001EE   241A         ADD     A,#0x1a
   \   0001F0   F582         MOV     DPL,A
   \   0001F2   E5..         MOV     A,?V0 + 3
   \   0001F4   3400         ADDC    A,#0x0
   \   0001F6   F583         MOV     DPH,A
   \   0001F8   E0           MOVX    A,@DPTR
   \   0001F9   C0E0         PUSH    A
   \   0001FB   EE           MOV     A,R6
   \   0001FC   247F         ADD     A,#0x7f
   \   0001FE   F582         MOV     DPL,A
   \   000200   EF           MOV     A,R7
   \   000201   3400         ADDC    A,#0x0
   \   000203   F583         MOV     DPH,A
   \   000205   D0E0         POP     A
   \   000207   F0           MOVX    @DPTR,A
    884            instance->dio_intmin = dio->dag_intmin;
   \   000208   E5..         MOV     A,?V0 + 2
   \   00020A   241B         ADD     A,#0x1b
   \   00020C   F582         MOV     DPL,A
   \   00020E   E5..         MOV     A,?V0 + 3
   \   000210   3400         ADDC    A,#0x0
   \   000212   F583         MOV     DPH,A
   \   000214   E0           MOVX    A,@DPTR
   \   000215   C0E0         PUSH    A
   \   000217   EE           MOV     A,R6
   \   000218   2480         ADD     A,#-0x80
   \   00021A   F582         MOV     DPL,A
   \   00021C   EF           MOV     A,R7
   \   00021D   3400         ADDC    A,#0x0
   \   00021F   F583         MOV     DPH,A
   \   000221   D0E0         POP     A
   \   000223   F0           MOVX    @DPTR,A
    885            instance->dio_intcurrent = instance->dio_intmin + instance->dio_intdoubl;
   \   000224   EE           MOV     A,R6
   \   000225   247F         ADD     A,#0x7f
   \   000227   F582         MOV     DPL,A
   \   000229   EF           MOV     A,R7
   \   00022A   3400         ADDC    A,#0x0
   \   00022C   F583         MOV     DPH,A
   \   00022E   E0           MOVX    A,@DPTR
   \   00022F   F8           MOV     R0,A
   \   000230   EE           MOV     A,R6
   \   000231   2480         ADD     A,#-0x80
   \   000233   F582         MOV     DPL,A
   \   000235   EF           MOV     A,R7
   \   000236   3400         ADDC    A,#0x0
   \   000238   F583         MOV     DPH,A
   \   00023A   E0           MOVX    A,@DPTR
   \   00023B   28           ADD     A,R0
   \   00023C   C0E0         PUSH    A
   \   00023E   EE           MOV     A,R6
   \   00023F   2483         ADD     A,#-0x7d
   \   000241   F582         MOV     DPL,A
   \   000243   EF           MOV     A,R7
   \   000244   3400         ADDC    A,#0x0
   \   000246   F583         MOV     DPH,A
   \   000248   D0E0         POP     A
   \   00024A   F0           MOVX    @DPTR,A
    886            instance->dio_redundancy = dio->dag_redund;
   \   00024B   E5..         MOV     A,?V0 + 2
   \   00024D   241C         ADD     A,#0x1c
   \   00024F   F582         MOV     DPL,A
   \   000251   E5..         MOV     A,?V0 + 3
   \   000253   3400         ADDC    A,#0x0
   \   000255   F583         MOV     DPH,A
   \   000257   E0           MOVX    A,@DPTR
   \   000258   C0E0         PUSH    A
   \   00025A   EE           MOV     A,R6
   \   00025B   2481         ADD     A,#-0x7f
   \   00025D   F582         MOV     DPL,A
   \   00025F   EF           MOV     A,R7
   \   000260   3400         ADDC    A,#0x0
   \   000262   F583         MOV     DPH,A
   \   000264   D0E0         POP     A
   \   000266   F0           MOVX    @DPTR,A
    887            instance->default_lifetime = dio->default_lifetime;
   \   000267   E5..         MOV     A,?V0 + 2
   \   000269   241D         ADD     A,#0x1d
   \   00026B   F582         MOV     DPL,A
   \   00026D   E5..         MOV     A,?V0 + 3
   \   00026F   3400         ADDC    A,#0x0
   \   000271   F583         MOV     DPH,A
   \   000273   E0           MOVX    A,@DPTR
   \   000274   C0E0         PUSH    A
   \   000276   EE           MOV     A,R6
   \   000277   2482         ADD     A,#-0x7e
   \   000279   F582         MOV     DPL,A
   \   00027B   EF           MOV     A,R7
   \   00027C   3400         ADDC    A,#0x0
   \   00027E   F583         MOV     DPH,A
   \   000280   D0E0         POP     A
   \   000282   F0           MOVX    @DPTR,A
    888            instance->lifetime_unit = dio->lifetime_unit;
   \   000283   E5..         MOV     A,?V0 + 2
   \   000285   241E         ADD     A,#0x1e
   \   000287   F582         MOV     DPL,A
   \   000289   E5..         MOV     A,?V0 + 3
   \   00028B   3400         ADDC    A,#0x0
   \   00028D   F583         MOV     DPH,A
   \   00028F   E0           MOVX    A,@DPTR
   \   000290   F8           MOV     R0,A
   \   000291   A3           INC     DPTR
   \   000292   E0           MOVX    A,@DPTR
   \   000293   F9           MOV     R1,A
   \   000294   EE           MOV     A,R6
   \   000295   248A         ADD     A,#-0x76
   \   000297   F582         MOV     DPL,A
   \   000299   EF           MOV     A,R7
   \   00029A   3400         ADDC    A,#0x0
   \   00029C   F583         MOV     DPH,A
   \   00029E   E8           MOV     A,R0
   \   00029F   F0           MOVX    @DPTR,A
   \   0002A0   A3           INC     DPTR
   \   0002A1   E9           MOV     A,R1
   \   0002A2   F0           MOVX    @DPTR,A
    889          
    890            memcpy(&dag->dag_id, &dio->dag_id, sizeof(dio->dag_id));
   \   0002A3                ; Setup parameters for call to function memcpy
   \   0002A3   75..10       MOV     ?V0 + 6,#0x10
   \   0002A6   75..00       MOV     ?V0 + 7,#0x0
   \   0002A9   78..         MOV     R0,#?V0 + 6
   \   0002AB   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0002AE   AC..         MOV     R4,?V0 + 2
   \   0002B0   AD..         MOV     R5,?V0 + 3
   \   0002B2   AA..         MOV     R2,?V0 + 0
   \   0002B4   AB..         MOV     R3,?V0 + 1
   \   0002B6   12....       LCALL   ??memcpy?relay
   \   0002B9   7402         MOV     A,#0x2
   \   0002BB   12....       LCALL   ?DEALLOC_XSTACK8
    891          
    892            /* Copy prefix information from the DIO into the DAG object. */
    893            memcpy(&dag->prefix_info, &dio->prefix_info, sizeof(rpl_prefix_t));
   \   0002BE                ; Setup parameters for call to function memcpy
   \   0002BE   75..16       MOV     ?V0 + 6,#0x16
   \   0002C1   75..00       MOV     ?V0 + 7,#0x0
   \   0002C4   78..         MOV     R0,#?V0 + 6
   \   0002C6   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0002C9   E5..         MOV     A,?V0 + 2
   \   0002CB   243A         ADD     A,#0x3a
   \   0002CD   FC           MOV     R4,A
   \   0002CE   E5..         MOV     A,?V0 + 3
   \   0002D0   3400         ADDC    A,#0x0
   \   0002D2   FD           MOV     R5,A
   \   0002D3   E5..         MOV     A,?V0 + 0
   \   0002D5   2421         ADD     A,#0x21
   \   0002D7   FA           MOV     R2,A
   \   0002D8   E5..         MOV     A,?V0 + 1
   \   0002DA   3400         ADDC    A,#0x0
   \   0002DC   FB           MOV     R3,A
   \   0002DD   12....       LCALL   ??memcpy?relay
   \   0002E0   7402         MOV     A,#0x2
   \   0002E2   12....       LCALL   ?DEALLOC_XSTACK8
    894          
    895            rpl_set_preferred_parent(dag, p);
   \   0002E5                ; Setup parameters for call to function rpl_set_preferred_parent
   \   0002E5   AC..         MOV     R4,?V0 + 4
   \   0002E7   AD..         MOV     R5,?V0 + 5
   \   0002E9   AA..         MOV     R2,?V0 + 0
   \   0002EB   AB..         MOV     R3,?V0 + 1
   \   0002ED   12....       LCALL   ??rpl_set_preferred_parent?relay
    896            instance->of->update_metric_container(instance);
   \   0002F0                ; Setup parameters for indirect call
   \   0002F0   EE           MOV     A,R6
   \   0002F1   FA           MOV     R2,A
   \   0002F2   EF           MOV     A,R7
   \   0002F3   FB           MOV     R3,A
   \   0002F4   8E82         MOV     DPL,R6
   \   0002F6   8F83         MOV     DPH,R7
   \   0002F8   A3           INC     DPTR
   \   0002F9   A3           INC     DPTR
   \   0002FA   A3           INC     DPTR
   \   0002FB   A3           INC     DPTR
   \   0002FC   A3           INC     DPTR
   \   0002FD   A3           INC     DPTR
   \   0002FE   A3           INC     DPTR
   \   0002FF   E0           MOVX    A,@DPTR
   \   000300   F8           MOV     R0,A
   \   000301   A3           INC     DPTR
   \   000302   E0           MOVX    A,@DPTR
   \   000303   C8           XCH     A,R0
   \   000304   240A         ADD     A,#0xa
   \   000306   F582         MOV     DPL,A
   \   000308   E8           MOV     A,R0
   \   000309   3400         ADDC    A,#0x0
   \   00030B   F583         MOV     DPH,A
   \   00030D   E0           MOVX    A,@DPTR
   \   00030E   F8           MOV     R0,A
   \   00030F   A3           INC     DPTR
   \   000310   E0           MOVX    A,@DPTR
   \   000311   F583         MOV     DPH,A
   \   000313   8882         MOV     DPL,R0
   \   000315   12....       LCALL   ?CALL_IND
    897            dag->rank = instance->of->calculate_rank(p, 0);
   \   000318                ; Setup parameters for indirect call
   \   000318   7C00         MOV     R4,#0x0
   \   00031A   7D00         MOV     R5,#0x0
   \   00031C   AA..         MOV     R2,?V0 + 4
   \   00031E   AB..         MOV     R3,?V0 + 5
   \   000320   8E82         MOV     DPL,R6
   \   000322   8F83         MOV     DPH,R7
   \   000324   A3           INC     DPTR
   \   000325   A3           INC     DPTR
   \   000326   A3           INC     DPTR
   \   000327   A3           INC     DPTR
   \   000328   A3           INC     DPTR
   \   000329   A3           INC     DPTR
   \   00032A   A3           INC     DPTR
   \   00032B   E0           MOVX    A,@DPTR
   \   00032C   F8           MOV     R0,A
   \   00032D   A3           INC     DPTR
   \   00032E   E0           MOVX    A,@DPTR
   \   00032F   C8           XCH     A,R0
   \   000330   2408         ADD     A,#0x8
   \   000332   F582         MOV     DPL,A
   \   000334   E8           MOV     A,R0
   \   000335   3400         ADDC    A,#0x0
   \   000337   F583         MOV     DPH,A
   \   000339   E0           MOVX    A,@DPTR
   \   00033A   F8           MOV     R0,A
   \   00033B   A3           INC     DPTR
   \   00033C   E0           MOVX    A,@DPTR
   \   00033D   F583         MOV     DPH,A
   \   00033F   8882         MOV     DPL,R0
   \   000341   12....       LCALL   ?CALL_IND
   \   000344   E5..         MOV     A,?V0 + 0
   \   000346   2419         ADD     A,#0x19
   \   000348   F582         MOV     DPL,A
   \   00034A   E5..         MOV     A,?V0 + 1
   \   00034C   3400         ADDC    A,#0x0
   \   00034E   F583         MOV     DPH,A
   \   000350   EA           MOV     A,R2
   \   000351   F0           MOVX    @DPTR,A
   \   000352   A3           INC     DPTR
   \   000353   EB           MOV     A,R3
   \   000354   F0           MOVX    @DPTR,A
    898            /* So far this is the lowest rank we are aware of. */
    899            dag->min_rank = dag->rank;
   \   000355   E5..         MOV     A,?V0 + 0
   \   000357   2419         ADD     A,#0x19
   \   000359   F582         MOV     DPL,A
   \   00035B   E5..         MOV     A,?V0 + 1
   \   00035D   3400         ADDC    A,#0x0
   \   00035F   F583         MOV     DPH,A
   \   000361   E0           MOVX    A,@DPTR
   \   000362   F8           MOV     R0,A
   \   000363   A3           INC     DPTR
   \   000364   E0           MOVX    A,@DPTR
   \   000365   F9           MOV     R1,A
   \   000366   E5..         MOV     A,?V0 + 0
   \   000368   2410         ADD     A,#0x10
   \   00036A   F582         MOV     DPL,A
   \   00036C   E5..         MOV     A,?V0 + 1
   \   00036E   3400         ADDC    A,#0x0
   \   000370   F583         MOV     DPH,A
   \   000372   E8           MOV     A,R0
   \   000373   F0           MOVX    @DPTR,A
   \   000374   A3           INC     DPTR
   \   000375   E9           MOV     A,R1
   \   000376   F0           MOVX    @DPTR,A
    900          
    901            if(default_instance == NULL) {
   \   000377   90....       MOV     DPTR,#default_instance
   \   00037A   E0           MOVX    A,@DPTR
   \   00037B   F8           MOV     R0,A
   \   00037C   A3           INC     DPTR
   \   00037D   E0           MOVX    A,@DPTR
   \   00037E   F9           MOV     R1,A
   \   00037F   E8           MOV     A,R0
   \   000380   49           ORL     A,R1
   \   000381   7008         JNZ     ??rpl_join_instance_4
    902              default_instance = instance;
   \   000383   90....       MOV     DPTR,#default_instance
   \   000386   EE           MOV     A,R6
   \   000387   F0           MOVX    @DPTR,A
   \   000388   A3           INC     DPTR
   \   000389   EF           MOV     A,R7
   \   00038A   F0           MOVX    @DPTR,A
    903            }
    904          
    905            PRINTF("RPL: Joined DAG with instance ID %u, rank %hu, DAG ID ",
    906                   dio->instance_id, dag->rank);
    907            PRINT6ADDR(&dag->dag_id);
    908            PRINTF("\n");
    909          
    910            ANNOTATE("#A join=%u\n", dag->dag_id.u8[sizeof(dag->dag_id) - 1]);
    911          
    912            rpl_reset_dio_timer(instance);
   \                     ??rpl_join_instance_4:
   \   00038B                ; Setup parameters for call to function rpl_reset_dio_timer
   \   00038B   EE           MOV     A,R6
   \   00038C   FA           MOV     R2,A
   \   00038D   EF           MOV     A,R7
   \   00038E   FB           MOV     R3,A
   \   00038F   12....       LCALL   ??rpl_reset_dio_timer?relay
    913            rpl_set_default_route(instance, from);
   \   000392                ; Setup parameters for call to function rpl_set_default_route
   \   000392   AC..         MOV     R4,?V0 + 8
   \   000394   AD..         MOV     R5,?V0 + 9
   \   000396   EE           MOV     A,R6
   \   000397   FA           MOV     R2,A
   \   000398   EF           MOV     A,R7
   \   000399   FB           MOV     R3,A
   \   00039A   12....       LCALL   ??rpl_set_default_route?relay
    914          
    915            if(instance->mop != RPL_MOP_NO_DOWNWARD_ROUTES) {
   \   00039D   EE           MOV     A,R6
   \   00039E   247E         ADD     A,#0x7e
   \   0003A0   F582         MOV     DPL,A
   \   0003A2   EF           MOV     A,R7
   \   0003A3   3400         ADDC    A,#0x0
   \   0003A5   F583         MOV     DPH,A
   \   0003A7   E0           MOVX    A,@DPTR
   \   0003A8   6007         JZ      ??rpl_join_instance_0
    916              rpl_schedule_dao(instance);
   \   0003AA                ; Setup parameters for call to function rpl_schedule_dao
   \   0003AA   EE           MOV     A,R6
   \   0003AB   FA           MOV     R2,A
   \   0003AC   EF           MOV     A,R7
   \   0003AD   FB           MOV     R3,A
   \   0003AE   12....       LCALL   ??rpl_schedule_dao?relay
    917            } else {
    918              PRINTF("RPL: The DIO does not meet the prerequisites for sending a DAO\n");
    919            }
    920          }
   \                     ??rpl_join_instance_0:
   \   0003B1   7F0C         MOV     R7,#0xc
   \   0003B3   02....       LJMP    ?BANKED_LEAVE_XDATA
    921          
    922          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    923          void
    924          rpl_add_dag(uip_ipaddr_t *from, rpl_dio_t *dio)
   \                     rpl_add_dag:
    925          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 6,R2
   \   000007   8B..         MOV     ?V0 + 7,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
    926            rpl_instance_t *instance;
    927            rpl_dag_t *dag, *previous_dag;
    928            rpl_parent_t *p;
    929            rpl_of_t *of;
    930          
    931            dag = rpl_alloc_dag(dio->instance_id, &dio->dag_id);
   \   00000D                ; Setup parameters for call to function rpl_alloc_dag
   \   00000D   EE           MOV     A,R6
   \   00000E   FA           MOV     R2,A
   \   00000F   EF           MOV     A,R7
   \   000010   FB           MOV     R3,A
   \   000011   EE           MOV     A,R6
   \   000012   2418         ADD     A,#0x18
   \   000014   F582         MOV     DPL,A
   \   000016   EF           MOV     A,R7
   \   000017   3400         ADDC    A,#0x0
   \   000019   F583         MOV     DPH,A
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   F9           MOV     R1,A
   \   00001D   12....       LCALL   ??rpl_alloc_dag?relay
   \   000020   8A..         MOV     ?V0 + 2,R2
   \   000022   8B..         MOV     ?V0 + 3,R3
   \   000024   85....       MOV     ?V0 + 0,?V0 + 2
   \   000027   85....       MOV     ?V0 + 1,?V0 + 3
    932            if(dag == NULL) {
   \   00002A   E5..         MOV     A,?V0 + 0
   \   00002C   45..         ORL     A,?V0 + 1
   \   00002E   7003         JNZ     $+5
   \   000030   02....       LJMP    ??rpl_add_dag_0 & 0xFFFF
    933              PRINTF("RPL: Failed to allocate a DAG object!\n");
    934              return;
    935            }
    936          
    937            instance = dag->instance;
   \   000033   E5..         MOV     A,?V0 + 0
   \   000035   241B         ADD     A,#0x1b
   \   000037   F582         MOV     DPL,A
   \   000039   E5..         MOV     A,?V0 + 1
   \   00003B   3400         ADDC    A,#0x0
   \   00003D   F583         MOV     DPH,A
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   F5..         MOV     ?V0 + 2,A
   \   000042   A3           INC     DPTR
   \   000043   E0           MOVX    A,@DPTR
   \   000044   F5..         MOV     ?V0 + 3,A
    938          
    939            previous_dag = find_parent_dag(instance, from);
   \   000046                ; Setup parameters for call to function find_parent_dag
   \   000046   AC..         MOV     R4,?V0 + 6
   \   000048   AD..         MOV     R5,?V0 + 7
   \   00004A   AA..         MOV     R2,?V0 + 2
   \   00004C   AB..         MOV     R3,?V0 + 3
   \   00004E   12....       LCALL   ??find_parent_dag?relay
   \   000051   8A..         MOV     ?V0 + 8,R2
   \   000053   8B..         MOV     ?V0 + 9,R3
   \   000055   85....       MOV     ?V0 + 4,?V0 + 8
   \   000058   85....       MOV     ?V0 + 5,?V0 + 9
    940            if(previous_dag == NULL) {
   \   00005B   E5..         MOV     A,?V0 + 4
   \   00005D   45..         ORL     A,?V0 + 5
   \   00005F   7037         JNZ     ??rpl_add_dag_1
    941              PRINTF("RPL: Adding ");
    942              PRINT6ADDR(from);
    943              PRINTF(" as a parent: ");
    944              p = rpl_add_parent(dag, dio, from);
   \   000061                ; Setup parameters for call to function rpl_add_parent
   \   000061   78..         MOV     R0,#?V0 + 6
   \   000063   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000066   EE           MOV     A,R6
   \   000067   FC           MOV     R4,A
   \   000068   EF           MOV     A,R7
   \   000069   FD           MOV     R5,A
   \   00006A   AA..         MOV     R2,?V0 + 0
   \   00006C   AB..         MOV     R3,?V0 + 1
   \   00006E   12....       LCALL   ??rpl_add_parent?relay
   \   000071   7402         MOV     A,#0x2
   \   000073   12....       LCALL   ?DEALLOC_XSTACK8
   \   000076   8A..         MOV     ?V0 + 4,R2
   \   000078   8B..         MOV     ?V0 + 5,R3
   \   00007A   85....       MOV     ?V0 + 6,?V0 + 4
   \   00007D   85....       MOV     ?V0 + 7,?V0 + 5
    945              if(p == NULL) {
   \   000080   E5..         MOV     A,?V0 + 6
   \   000082   45..         ORL     A,?V0 + 7
   \   000084   7042         JNZ     ??rpl_add_dag_2
    946                PRINTF("failed\n");
    947                dag->used = 0;
   \   000086   E5..         MOV     A,?V0 + 0
   \   000088   2415         ADD     A,#0x15
   \   00008A   F582         MOV     DPL,A
   \   00008C   E5..         MOV     A,?V0 + 1
   \   00008E   3400         ADDC    A,#0x0
   \   000090   F583         MOV     DPH,A
   \   000092   7400         MOV     A,#0x0
   \   000094   F0           MOVX    @DPTR,A
    948                return;
   \   000095   02....       LJMP    ??rpl_add_dag_0 & 0xFFFF
    949              }
    950              PRINTF("succeeded\n");
    951            } else {
    952              p = rpl_find_parent(previous_dag, from);
   \                     ??rpl_add_dag_1:
   \   000098                ; Setup parameters for call to function rpl_find_parent
   \   000098   AC..         MOV     R4,?V0 + 6
   \   00009A   AD..         MOV     R5,?V0 + 7
   \   00009C   AA..         MOV     R2,?V0 + 4
   \   00009E   AB..         MOV     R3,?V0 + 5
   \   0000A0   12....       LCALL   ??rpl_find_parent?relay
   \   0000A3   8A..         MOV     ?V0 + 8,R2
   \   0000A5   8B..         MOV     ?V0 + 9,R3
   \   0000A7   85....       MOV     ?V0 + 6,?V0 + 8
   \   0000AA   85....       MOV     ?V0 + 7,?V0 + 9
    953              if(p != NULL) {
   \   0000AD   E5..         MOV     A,?V0 + 6
   \   0000AF   45..         ORL     A,?V0 + 7
   \   0000B1   6015         JZ      ??rpl_add_dag_2
    954                rpl_move_parent(previous_dag, dag, p);
   \   0000B3                ; Setup parameters for call to function rpl_move_parent
   \   0000B3   78..         MOV     R0,#?V0 + 6
   \   0000B5   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000B8   AC..         MOV     R4,?V0 + 0
   \   0000BA   AD..         MOV     R5,?V0 + 1
   \   0000BC   AA..         MOV     R2,?V0 + 4
   \   0000BE   AB..         MOV     R3,?V0 + 5
   \   0000C0   12....       LCALL   ??rpl_move_parent?relay
   \   0000C3   7402         MOV     A,#0x2
   \   0000C5   12....       LCALL   ?DEALLOC_XSTACK8
    955              }
    956            }
    957          
    958            /* Determine the objective function by using the
    959               objective code point of the DIO. */
    960            of = rpl_find_of(dio->ocp);
   \                     ??rpl_add_dag_2:
   \   0000C8                ; Setup parameters for call to function rpl_find_of
   \   0000C8   EE           MOV     A,R6
   \   0000C9   2410         ADD     A,#0x10
   \   0000CB   F582         MOV     DPL,A
   \   0000CD   EF           MOV     A,R7
   \   0000CE   3400         ADDC    A,#0x0
   \   0000D0   F583         MOV     DPH,A
   \   0000D2   E0           MOVX    A,@DPTR
   \   0000D3   FA           MOV     R2,A
   \   0000D4   A3           INC     DPTR
   \   0000D5   E0           MOVX    A,@DPTR
   \   0000D6   FB           MOV     R3,A
   \   0000D7   12....       LCALL   ??rpl_find_of?relay
   \   0000DA   8A..         MOV     ?V0 + 4,R2
   \   0000DC   8B..         MOV     ?V0 + 5,R3
   \   0000DE   AA..         MOV     R2,?V0 + 4
   \   0000E0   AB..         MOV     R3,?V0 + 5
    961            if(of != instance->of ||
    962               instance->mop != dio->mop ||
    963               instance->max_rankinc != dio->dag_max_rankinc ||
    964               instance->min_hoprankinc != dio->dag_min_hoprankinc ||
    965               instance->dio_intdoubl != dio->dag_intdoubl ||
    966               instance->dio_intmin != dio->dag_intmin ||
    967               instance->dio_redundancy != dio->dag_redund ||
    968               instance->default_lifetime != dio->default_lifetime ||
    969               instance->lifetime_unit != dio->lifetime_unit) {
   \   0000E2   85..82       MOV     DPL,?V0 + 2
   \   0000E5   85..83       MOV     DPH,?V0 + 3
   \   0000E8   A3           INC     DPTR
   \   0000E9   A3           INC     DPTR
   \   0000EA   A3           INC     DPTR
   \   0000EB   A3           INC     DPTR
   \   0000EC   A3           INC     DPTR
   \   0000ED   A3           INC     DPTR
   \   0000EE   A3           INC     DPTR
   \   0000EF   E0           MOVX    A,@DPTR
   \   0000F0   F8           MOV     R0,A
   \   0000F1   A3           INC     DPTR
   \   0000F2   E0           MOVX    A,@DPTR
   \   0000F3   F9           MOV     R1,A
   \   0000F4   E5..         MOV     A,?V0 + 4
   \   0000F6   68           XRL     A,R0
   \   0000F7   7003         JNZ     ??rpl_add_dag_3
   \   0000F9   E5..         MOV     A,?V0 + 5
   \   0000FB   69           XRL     A,R1
   \                     ??rpl_add_dag_3:
   \   0000FC   6003         JZ      $+5
   \   0000FE   02....       LJMP    ??rpl_add_dag_4 & 0xFFFF
   \   000101   E5..         MOV     A,?V0 + 2
   \   000103   247E         ADD     A,#0x7e
   \   000105   F582         MOV     DPL,A
   \   000107   E5..         MOV     A,?V0 + 3
   \   000109   3400         ADDC    A,#0x0
   \   00010B   F583         MOV     DPH,A
   \   00010D   E0           MOVX    A,@DPTR
   \   00010E   F8           MOV     R0,A
   \   00010F   EE           MOV     A,R6
   \   000110   2415         ADD     A,#0x15
   \   000112   F582         MOV     DPL,A
   \   000114   EF           MOV     A,R7
   \   000115   3400         ADDC    A,#0x0
   \   000117   F583         MOV     DPH,A
   \   000119   E0           MOVX    A,@DPTR
   \   00011A   68           XRL     A,R0
   \   00011B   6003         JZ      $+5
   \   00011D   02....       LJMP    ??rpl_add_dag_4 & 0xFFFF
   \   000120   E5..         MOV     A,?V0 + 2
   \   000122   2486         ADD     A,#-0x7a
   \   000124   F582         MOV     DPL,A
   \   000126   E5..         MOV     A,?V0 + 3
   \   000128   3400         ADDC    A,#0x0
   \   00012A   F583         MOV     DPH,A
   \   00012C   E0           MOVX    A,@DPTR
   \   00012D   F8           MOV     R0,A
   \   00012E   A3           INC     DPTR
   \   00012F   E0           MOVX    A,@DPTR
   \   000130   F9           MOV     R1,A
   \   000131   EE           MOV     A,R6
   \   000132   2420         ADD     A,#0x20
   \   000134   F582         MOV     DPL,A
   \   000136   EF           MOV     A,R7
   \   000137   3400         ADDC    A,#0x0
   \   000139   F583         MOV     DPH,A
   \   00013B   E0           MOVX    A,@DPTR
   \   00013C   68           XRL     A,R0
   \   00013D   7003         JNZ     ??rpl_add_dag_5
   \   00013F   A3           INC     DPTR
   \   000140   E0           MOVX    A,@DPTR
   \   000141   69           XRL     A,R1
   \                     ??rpl_add_dag_5:
   \   000142   6003         JZ      $+5
   \   000144   02....       LJMP    ??rpl_add_dag_4 & 0xFFFF
   \   000147   E5..         MOV     A,?V0 + 2
   \   000149   2488         ADD     A,#-0x78
   \   00014B   F582         MOV     DPL,A
   \   00014D   E5..         MOV     A,?V0 + 3
   \   00014F   3400         ADDC    A,#0x0
   \   000151   F583         MOV     DPH,A
   \   000153   E0           MOVX    A,@DPTR
   \   000154   F8           MOV     R0,A
   \   000155   A3           INC     DPTR
   \   000156   E0           MOVX    A,@DPTR
   \   000157   F9           MOV     R1,A
   \   000158   EE           MOV     A,R6
   \   000159   2422         ADD     A,#0x22
   \   00015B   F582         MOV     DPL,A
   \   00015D   EF           MOV     A,R7
   \   00015E   3400         ADDC    A,#0x0
   \   000160   F583         MOV     DPH,A
   \   000162   E0           MOVX    A,@DPTR
   \   000163   68           XRL     A,R0
   \   000164   7003         JNZ     ??rpl_add_dag_6
   \   000166   A3           INC     DPTR
   \   000167   E0           MOVX    A,@DPTR
   \   000168   69           XRL     A,R1
   \                     ??rpl_add_dag_6:
   \   000169   6003         JZ      $+5
   \   00016B   02....       LJMP    ??rpl_add_dag_4 & 0xFFFF
   \   00016E   E5..         MOV     A,?V0 + 2
   \   000170   247F         ADD     A,#0x7f
   \   000172   F582         MOV     DPL,A
   \   000174   E5..         MOV     A,?V0 + 3
   \   000176   3400         ADDC    A,#0x0
   \   000178   F583         MOV     DPH,A
   \   00017A   E0           MOVX    A,@DPTR
   \   00017B   F8           MOV     R0,A
   \   00017C   EE           MOV     A,R6
   \   00017D   241A         ADD     A,#0x1a
   \   00017F   F582         MOV     DPL,A
   \   000181   EF           MOV     A,R7
   \   000182   3400         ADDC    A,#0x0
   \   000184   F583         MOV     DPH,A
   \   000186   E0           MOVX    A,@DPTR
   \   000187   68           XRL     A,R0
   \   000188   7078         JNZ     ??rpl_add_dag_4
   \   00018A   E5..         MOV     A,?V0 + 2
   \   00018C   2480         ADD     A,#-0x80
   \   00018E   F582         MOV     DPL,A
   \   000190   E5..         MOV     A,?V0 + 3
   \   000192   3400         ADDC    A,#0x0
   \   000194   F583         MOV     DPH,A
   \   000196   E0           MOVX    A,@DPTR
   \   000197   F8           MOV     R0,A
   \   000198   EE           MOV     A,R6
   \   000199   241B         ADD     A,#0x1b
   \   00019B   F582         MOV     DPL,A
   \   00019D   EF           MOV     A,R7
   \   00019E   3400         ADDC    A,#0x0
   \   0001A0   F583         MOV     DPH,A
   \   0001A2   E0           MOVX    A,@DPTR
   \   0001A3   68           XRL     A,R0
   \   0001A4   705C         JNZ     ??rpl_add_dag_4
   \   0001A6   E5..         MOV     A,?V0 + 2
   \   0001A8   2481         ADD     A,#-0x7f
   \   0001AA   F582         MOV     DPL,A
   \   0001AC   E5..         MOV     A,?V0 + 3
   \   0001AE   3400         ADDC    A,#0x0
   \   0001B0   F583         MOV     DPH,A
   \   0001B2   E0           MOVX    A,@DPTR
   \   0001B3   F8           MOV     R0,A
   \   0001B4   EE           MOV     A,R6
   \   0001B5   241C         ADD     A,#0x1c
   \   0001B7   F582         MOV     DPL,A
   \   0001B9   EF           MOV     A,R7
   \   0001BA   3400         ADDC    A,#0x0
   \   0001BC   F583         MOV     DPH,A
   \   0001BE   E0           MOVX    A,@DPTR
   \   0001BF   68           XRL     A,R0
   \   0001C0   7040         JNZ     ??rpl_add_dag_4
   \   0001C2   E5..         MOV     A,?V0 + 2
   \   0001C4   2482         ADD     A,#-0x7e
   \   0001C6   F582         MOV     DPL,A
   \   0001C8   E5..         MOV     A,?V0 + 3
   \   0001CA   3400         ADDC    A,#0x0
   \   0001CC   F583         MOV     DPH,A
   \   0001CE   E0           MOVX    A,@DPTR
   \   0001CF   F8           MOV     R0,A
   \   0001D0   EE           MOV     A,R6
   \   0001D1   241D         ADD     A,#0x1d
   \   0001D3   F582         MOV     DPL,A
   \   0001D5   EF           MOV     A,R7
   \   0001D6   3400         ADDC    A,#0x0
   \   0001D8   F583         MOV     DPH,A
   \   0001DA   E0           MOVX    A,@DPTR
   \   0001DB   68           XRL     A,R0
   \   0001DC   7024         JNZ     ??rpl_add_dag_4
   \   0001DE   E5..         MOV     A,?V0 + 2
   \   0001E0   248A         ADD     A,#-0x76
   \   0001E2   F582         MOV     DPL,A
   \   0001E4   E5..         MOV     A,?V0 + 3
   \   0001E6   3400         ADDC    A,#0x0
   \   0001E8   F583         MOV     DPH,A
   \   0001EA   E0           MOVX    A,@DPTR
   \   0001EB   F8           MOV     R0,A
   \   0001EC   A3           INC     DPTR
   \   0001ED   E0           MOVX    A,@DPTR
   \   0001EE   F9           MOV     R1,A
   \   0001EF   EE           MOV     A,R6
   \   0001F0   241E         ADD     A,#0x1e
   \   0001F2   F582         MOV     DPL,A
   \   0001F4   EF           MOV     A,R7
   \   0001F5   3400         ADDC    A,#0x0
   \   0001F7   F583         MOV     DPH,A
   \   0001F9   E0           MOVX    A,@DPTR
   \   0001FA   68           XRL     A,R0
   \   0001FB   7003         JNZ     ??rpl_add_dag_7
   \   0001FD   A3           INC     DPTR
   \   0001FE   E0           MOVX    A,@DPTR
   \   0001FF   69           XRL     A,R1
   \                     ??rpl_add_dag_7:
   \   000200   6019         JZ      ??rpl_add_dag_8
    970              PRINTF("RPL: DIO for DAG instance %u uncompatible with previos DIO\n",
    971          	   dio->instance_id);
    972              rpl_remove_parent(p);
   \                     ??rpl_add_dag_4:
   \   000202                ; Setup parameters for call to function rpl_remove_parent
   \   000202   AA..         MOV     R2,?V0 + 6
   \   000204   AB..         MOV     R3,?V0 + 7
   \   000206   12....       LCALL   ??rpl_remove_parent?relay
    973              dag->used = 0;
   \   000209   E5..         MOV     A,?V0 + 0
   \   00020B   2415         ADD     A,#0x15
   \   00020D   F582         MOV     DPL,A
   \   00020F   E5..         MOV     A,?V0 + 1
   \   000211   3400         ADDC    A,#0x0
   \   000213   F583         MOV     DPH,A
   \   000215   7400         MOV     A,#0x0
   \   000217   F0           MOVX    @DPTR,A
    974              return;
   \   000218   02....       LJMP    ??rpl_add_dag_0 & 0xFFFF
    975            }
    976          
    977            dag->used = 1;
   \                     ??rpl_add_dag_8:
   \   00021B   E5..         MOV     A,?V0 + 0
   \   00021D   2415         ADD     A,#0x15
   \   00021F   F582         MOV     DPL,A
   \   000221   E5..         MOV     A,?V0 + 1
   \   000223   3400         ADDC    A,#0x0
   \   000225   F583         MOV     DPH,A
   \   000227   7401         MOV     A,#0x1
   \   000229   F0           MOVX    @DPTR,A
    978            dag->grounded = dio->grounded;
   \   00022A   EE           MOV     A,R6
   \   00022B   2414         ADD     A,#0x14
   \   00022D   F582         MOV     DPL,A
   \   00022F   EF           MOV     A,R7
   \   000230   3400         ADDC    A,#0x0
   \   000232   F583         MOV     DPH,A
   \   000234   E0           MOVX    A,@DPTR
   \   000235   C0E0         PUSH    A
   \   000237   E5..         MOV     A,?V0 + 0
   \   000239   2413         ADD     A,#0x13
   \   00023B   F582         MOV     DPL,A
   \   00023D   E5..         MOV     A,?V0 + 1
   \   00023F   3400         ADDC    A,#0x0
   \   000241   F583         MOV     DPH,A
   \   000243   D0E0         POP     A
   \   000245   F0           MOVX    @DPTR,A
    979            dag->preference = dio->preference;
   \   000246   EE           MOV     A,R6
   \   000247   2416         ADD     A,#0x16
   \   000249   F582         MOV     DPL,A
   \   00024B   EF           MOV     A,R7
   \   00024C   3400         ADDC    A,#0x0
   \   00024E   F583         MOV     DPH,A
   \   000250   E0           MOVX    A,@DPTR
   \   000251   C0E0         PUSH    A
   \   000253   E5..         MOV     A,?V0 + 0
   \   000255   2414         ADD     A,#0x14
   \   000257   F582         MOV     DPL,A
   \   000259   E5..         MOV     A,?V0 + 1
   \   00025B   3400         ADDC    A,#0x0
   \   00025D   F583         MOV     DPH,A
   \   00025F   D0E0         POP     A
   \   000261   F0           MOVX    @DPTR,A
    980            dag->version = dio->version;
   \   000262   EE           MOV     A,R6
   \   000263   2417         ADD     A,#0x17
   \   000265   F582         MOV     DPL,A
   \   000267   EF           MOV     A,R7
   \   000268   3400         ADDC    A,#0x0
   \   00026A   F583         MOV     DPH,A
   \   00026C   E0           MOVX    A,@DPTR
   \   00026D   C0E0         PUSH    A
   \   00026F   E5..         MOV     A,?V0 + 0
   \   000271   2412         ADD     A,#0x12
   \   000273   F582         MOV     DPL,A
   \   000275   E5..         MOV     A,?V0 + 1
   \   000277   3400         ADDC    A,#0x0
   \   000279   F583         MOV     DPH,A
   \   00027B   D0E0         POP     A
   \   00027D   F0           MOVX    @DPTR,A
    981          
    982            memcpy(&dag->dag_id, &dio->dag_id, sizeof(dio->dag_id));
   \   00027E                ; Setup parameters for call to function memcpy
   \   00027E   75..10       MOV     ?V0 + 4,#0x10
   \   000281   75..00       MOV     ?V0 + 5,#0x0
   \   000284   78..         MOV     R0,#?V0 + 4
   \   000286   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000289   EE           MOV     A,R6
   \   00028A   FC           MOV     R4,A
   \   00028B   EF           MOV     A,R7
   \   00028C   FD           MOV     R5,A
   \   00028D   AA..         MOV     R2,?V0 + 0
   \   00028F   AB..         MOV     R3,?V0 + 1
   \   000291   12....       LCALL   ??memcpy?relay
   \   000294   7402         MOV     A,#0x2
   \   000296   12....       LCALL   ?DEALLOC_XSTACK8
    983          
    984            /* copy prefix information into the dag */
    985            memcpy(&dag->prefix_info, &dio->prefix_info, sizeof(rpl_prefix_t));
   \   000299                ; Setup parameters for call to function memcpy
   \   000299   75..16       MOV     ?V0 + 4,#0x16
   \   00029C   75..00       MOV     ?V0 + 5,#0x0
   \   00029F   78..         MOV     R0,#?V0 + 4
   \   0002A1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0002A4   EE           MOV     A,R6
   \   0002A5   243A         ADD     A,#0x3a
   \   0002A7   FC           MOV     R4,A
   \   0002A8   EF           MOV     A,R7
   \   0002A9   3400         ADDC    A,#0x0
   \   0002AB   FD           MOV     R5,A
   \   0002AC   E5..         MOV     A,?V0 + 0
   \   0002AE   2421         ADD     A,#0x21
   \   0002B0   FA           MOV     R2,A
   \   0002B1   E5..         MOV     A,?V0 + 1
   \   0002B3   3400         ADDC    A,#0x0
   \   0002B5   FB           MOV     R3,A
   \   0002B6   12....       LCALL   ??memcpy?relay
   \   0002B9   7402         MOV     A,#0x2
   \   0002BB   12....       LCALL   ?DEALLOC_XSTACK8
    986          
    987            rpl_set_preferred_parent(dag, p);
   \   0002BE                ; Setup parameters for call to function rpl_set_preferred_parent
   \   0002BE   AC..         MOV     R4,?V0 + 6
   \   0002C0   AD..         MOV     R5,?V0 + 7
   \   0002C2   AA..         MOV     R2,?V0 + 0
   \   0002C4   AB..         MOV     R3,?V0 + 1
   \   0002C6   12....       LCALL   ??rpl_set_preferred_parent?relay
    988            dag->rank = instance->of->calculate_rank(p, 0);
   \   0002C9                ; Setup parameters for indirect call
   \   0002C9   7C00         MOV     R4,#0x0
   \   0002CB   7D00         MOV     R5,#0x0
   \   0002CD   AA..         MOV     R2,?V0 + 6
   \   0002CF   AB..         MOV     R3,?V0 + 7
   \   0002D1   85..82       MOV     DPL,?V0 + 2
   \   0002D4   85..83       MOV     DPH,?V0 + 3
   \   0002D7   A3           INC     DPTR
   \   0002D8   A3           INC     DPTR
   \   0002D9   A3           INC     DPTR
   \   0002DA   A3           INC     DPTR
   \   0002DB   A3           INC     DPTR
   \   0002DC   A3           INC     DPTR
   \   0002DD   A3           INC     DPTR
   \   0002DE   E0           MOVX    A,@DPTR
   \   0002DF   F8           MOV     R0,A
   \   0002E0   A3           INC     DPTR
   \   0002E1   E0           MOVX    A,@DPTR
   \   0002E2   C8           XCH     A,R0
   \   0002E3   2408         ADD     A,#0x8
   \   0002E5   F582         MOV     DPL,A
   \   0002E7   E8           MOV     A,R0
   \   0002E8   3400         ADDC    A,#0x0
   \   0002EA   F583         MOV     DPH,A
   \   0002EC   E0           MOVX    A,@DPTR
   \   0002ED   F8           MOV     R0,A
   \   0002EE   A3           INC     DPTR
   \   0002EF   E0           MOVX    A,@DPTR
   \   0002F0   F583         MOV     DPH,A
   \   0002F2   8882         MOV     DPL,R0
   \   0002F4   12....       LCALL   ?CALL_IND
   \   0002F7   E5..         MOV     A,?V0 + 0
   \   0002F9   2419         ADD     A,#0x19
   \   0002FB   F582         MOV     DPL,A
   \   0002FD   E5..         MOV     A,?V0 + 1
   \   0002FF   3400         ADDC    A,#0x0
   \   000301   F583         MOV     DPH,A
   \   000303   EA           MOV     A,R2
   \   000304   F0           MOVX    @DPTR,A
   \   000305   A3           INC     DPTR
   \   000306   EB           MOV     A,R3
   \   000307   F0           MOVX    @DPTR,A
    989            dag->min_rank = dag->rank; /* So far this is the lowest rank we know of. */
   \   000308   E5..         MOV     A,?V0 + 0
   \   00030A   2419         ADD     A,#0x19
   \   00030C   F582         MOV     DPL,A
   \   00030E   E5..         MOV     A,?V0 + 1
   \   000310   3400         ADDC    A,#0x0
   \   000312   F583         MOV     DPH,A
   \   000314   E0           MOVX    A,@DPTR
   \   000315   F8           MOV     R0,A
   \   000316   A3           INC     DPTR
   \   000317   E0           MOVX    A,@DPTR
   \   000318   F9           MOV     R1,A
   \   000319   E5..         MOV     A,?V0 + 0
   \   00031B   2410         ADD     A,#0x10
   \   00031D   F582         MOV     DPL,A
   \   00031F   E5..         MOV     A,?V0 + 1
   \   000321   3400         ADDC    A,#0x0
   \   000323   F583         MOV     DPH,A
   \   000325   E8           MOV     A,R0
   \   000326   F0           MOVX    @DPTR,A
   \   000327   A3           INC     DPTR
   \   000328   E9           MOV     A,R1
   \   000329   F0           MOVX    @DPTR,A
    990          
    991            PRINTF("RPL: Joined DAG with instance ID %u, rank %hu, DAG ID ",
    992                   dio->instance_id, dag->rank);
    993            PRINT6ADDR(&dag->dag_id);
    994            PRINTF("\n");
    995          
    996            ANNOTATE("#A join=%u\n", dag->dag_id.u8[sizeof(dag->dag_id) - 1]);
    997          
    998            rpl_process_parent_event(instance, p);
   \   00032A                ; Setup parameters for call to function rpl_process_parent_event
   \   00032A   AC..         MOV     R4,?V0 + 6
   \   00032C   AD..         MOV     R5,?V0 + 7
   \   00032E   AA..         MOV     R2,?V0 + 2
   \   000330   AB..         MOV     R3,?V0 + 3
   \   000332   12....       LCALL   ??rpl_process_parent_event?relay
    999            p->dtsn = dio->dtsn;
   \   000335   EE           MOV     A,R6
   \   000336   2419         ADD     A,#0x19
   \   000338   F582         MOV     DPL,A
   \   00033A   EF           MOV     A,R7
   \   00033B   3400         ADDC    A,#0x0
   \   00033D   F583         MOV     DPH,A
   \   00033F   E0           MOVX    A,@DPTR
   \   000340   85..82       MOV     DPL,?V0 + 6
   \   000343   85..83       MOV     DPH,?V0 + 7
   \   000346   A3           INC     DPTR
   \   000347   A3           INC     DPTR
   \   000348   A3           INC     DPTR
   \   000349   A3           INC     DPTR
   \   00034A   A3           INC     DPTR
   \   00034B   A3           INC     DPTR
   \   00034C   A3           INC     DPTR
   \   00034D   A3           INC     DPTR
   \   00034E   F0           MOVX    @DPTR,A
   1000          }
   \                     ??rpl_add_dag_0:
   \   00034F   7F0A         MOV     R7,#0xa
   \   000351   02....       LJMP    ?BANKED_LEAVE_XDATA
   1001          
   1002          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1003          static void
   1004          global_repair(uip_ipaddr_t *from, rpl_dag_t *dag, rpl_dio_t *dio)
   \                     global_repair:
   1005          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 2,R2
   \   000007   8B..         MOV     ?V0 + 3,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   1006            rpl_parent_t *p;
   1007          
   1008            remove_parents(dag, 0);
   \   00000D                ; Setup parameters for call to function remove_parents
   \   00000D   7C00         MOV     R4,#0x0
   \   00000F   7D00         MOV     R5,#0x0
   \   000011   EE           MOV     A,R6
   \   000012   FA           MOV     R2,A
   \   000013   EF           MOV     A,R7
   \   000014   FB           MOV     R3,A
   \   000015   12....       LCALL   ??remove_parents?relay
   \   000018   740C         MOV     A,#0xc
   \   00001A   12....       LCALL   ?XSTACK_DISP0_8
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   F5..         MOV     ?V0 + 0,A
   \   000020   A3           INC     DPTR
   \   000021   E0           MOVX    A,@DPTR
   \   000022   F5..         MOV     ?V0 + 1,A
   1009            dag->version = dio->version;
   \   000024   E5..         MOV     A,?V0 + 0
   \   000026   2417         ADD     A,#0x17
   \   000028   F582         MOV     DPL,A
   \   00002A   E5..         MOV     A,?V0 + 1
   \   00002C   3400         ADDC    A,#0x0
   \   00002E   F583         MOV     DPH,A
   \   000030   E0           MOVX    A,@DPTR
   \   000031   C0E0         PUSH    A
   \   000033   EE           MOV     A,R6
   \   000034   2412         ADD     A,#0x12
   \   000036   F582         MOV     DPL,A
   \   000038   EF           MOV     A,R7
   \   000039   3400         ADDC    A,#0x0
   \   00003B   F583         MOV     DPH,A
   \   00003D   D0E0         POP     A
   \   00003F   F0           MOVX    @DPTR,A
   1010            dag->instance->of->reset(dag);
   \   000040                ; Setup parameters for indirect call
   \   000040   EE           MOV     A,R6
   \   000041   FA           MOV     R2,A
   \   000042   EF           MOV     A,R7
   \   000043   FB           MOV     R3,A
   \   000044   EE           MOV     A,R6
   \   000045   241B         ADD     A,#0x1b
   \   000047   F582         MOV     DPL,A
   \   000049   EF           MOV     A,R7
   \   00004A   3400         ADDC    A,#0x0
   \   00004C   F583         MOV     DPH,A
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   F8           MOV     R0,A
   \   000050   A3           INC     DPTR
   \   000051   E0           MOVX    A,@DPTR
   \   000052   C8           XCH     A,R0
   \   000053   2407         ADD     A,#0x7
   \   000055   F582         MOV     DPL,A
   \   000057   E8           MOV     A,R0
   \   000058   3400         ADDC    A,#0x0
   \   00005A   F583         MOV     DPH,A
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   F8           MOV     R0,A
   \   00005E   A3           INC     DPTR
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   F583         MOV     DPH,A
   \   000062   8882         MOV     DPL,R0
   \   000064   E0           MOVX    A,@DPTR
   \   000065   F8           MOV     R0,A
   \   000066   A3           INC     DPTR
   \   000067   E0           MOVX    A,@DPTR
   \   000068   F583         MOV     DPH,A
   \   00006A   8882         MOV     DPL,R0
   \   00006C   12....       LCALL   ?CALL_IND
   1011            dag->min_rank = INFINITE_RANK;
   \   00006F   EE           MOV     A,R6
   \   000070   2410         ADD     A,#0x10
   \   000072   F582         MOV     DPL,A
   \   000074   EF           MOV     A,R7
   \   000075   3400         ADDC    A,#0x0
   \   000077   F583         MOV     DPH,A
   \   000079   74FF         MOV     A,#-0x1
   \   00007B   F0           MOVX    @DPTR,A
   \   00007C   A3           INC     DPTR
   \   00007D   74FF         MOV     A,#-0x1
   \   00007F   F0           MOVX    @DPTR,A
   1012            RPL_LOLLIPOP_INCREMENT(dag->instance->dtsn_out);
   \   000080   EE           MOV     A,R6
   \   000081   241B         ADD     A,#0x1b
   \   000083   F582         MOV     DPL,A
   \   000085   EF           MOV     A,R7
   \   000086   3400         ADDC    A,#0x0
   \   000088   F583         MOV     DPH,A
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   F8           MOV     R0,A
   \   00008C   A3           INC     DPTR
   \   00008D   E0           MOVX    A,@DPTR
   \   00008E   C8           XCH     A,R0
   \   00008F   247D         ADD     A,#0x7d
   \   000091   F582         MOV     DPL,A
   \   000093   E8           MOV     A,R0
   \   000094   3400         ADDC    A,#0x0
   \   000096   F583         MOV     DPH,A
   \   000098   E0           MOVX    A,@DPTR
   \   000099   C3           CLR     C
   \   00009A   9480         SUBB    A,#-0x80
   \   00009C   401E         JC      ??global_repair_0
   \   00009E   EE           MOV     A,R6
   \   00009F   241B         ADD     A,#0x1b
   \   0000A1   F582         MOV     DPL,A
   \   0000A3   EF           MOV     A,R7
   \   0000A4   3400         ADDC    A,#0x0
   \   0000A6   F583         MOV     DPH,A
   \   0000A8   E0           MOVX    A,@DPTR
   \   0000A9   F8           MOV     R0,A
   \   0000AA   A3           INC     DPTR
   \   0000AB   E0           MOVX    A,@DPTR
   \   0000AC   C8           XCH     A,R0
   \   0000AD   247D         ADD     A,#0x7d
   \   0000AF   F582         MOV     DPL,A
   \   0000B1   E8           MOV     A,R0
   \   0000B2   3400         ADDC    A,#0x0
   \   0000B4   F583         MOV     DPH,A
   \   0000B6   E0           MOVX    A,@DPTR
   \   0000B7   2401         ADD     A,#0x1
   \   0000B9   F0           MOVX    @DPTR,A
   \   0000BA   803A         SJMP    ??global_repair_1
   \                     ??global_repair_0:
   \   0000BC   EE           MOV     A,R6
   \   0000BD   241B         ADD     A,#0x1b
   \   0000BF   F582         MOV     DPL,A
   \   0000C1   EF           MOV     A,R7
   \   0000C2   3400         ADDC    A,#0x0
   \   0000C4   F583         MOV     DPH,A
   \   0000C6   E0           MOVX    A,@DPTR
   \   0000C7   F8           MOV     R0,A
   \   0000C8   A3           INC     DPTR
   \   0000C9   E0           MOVX    A,@DPTR
   \   0000CA   C8           XCH     A,R0
   \   0000CB   247D         ADD     A,#0x7d
   \   0000CD   F582         MOV     DPL,A
   \   0000CF   E8           MOV     A,R0
   \   0000D0   3400         ADDC    A,#0x0
   \   0000D2   F583         MOV     DPH,A
   \   0000D4   E0           MOVX    A,@DPTR
   \   0000D5   2401         ADD     A,#0x1
   \   0000D7   547F         ANL     A,#0x7f
   \   0000D9   C0E0         PUSH    A
   \   0000DB   EE           MOV     A,R6
   \   0000DC   241B         ADD     A,#0x1b
   \   0000DE   F582         MOV     DPL,A
   \   0000E0   EF           MOV     A,R7
   \   0000E1   3400         ADDC    A,#0x0
   \   0000E3   F583         MOV     DPH,A
   \   0000E5   E0           MOVX    A,@DPTR
   \   0000E6   F8           MOV     R0,A
   \   0000E7   A3           INC     DPTR
   \   0000E8   E0           MOVX    A,@DPTR
   \   0000E9   C8           XCH     A,R0
   \   0000EA   247D         ADD     A,#0x7d
   \   0000EC   F582         MOV     DPL,A
   \   0000EE   E8           MOV     A,R0
   \   0000EF   3400         ADDC    A,#0x0
   \   0000F1   F583         MOV     DPH,A
   \   0000F3   D0E0         POP     A
   \   0000F5   F0           MOVX    @DPTR,A
   1013          
   1014            p = rpl_add_parent(dag, dio, from);
   \                     ??global_repair_1:
   \   0000F6                ; Setup parameters for call to function rpl_add_parent
   \   0000F6   78..         MOV     R0,#?V0 + 2
   \   0000F8   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000FB   AC..         MOV     R4,?V0 + 0
   \   0000FD   AD..         MOV     R5,?V0 + 1
   \   0000FF   EE           MOV     A,R6
   \   000100   FA           MOV     R2,A
   \   000101   EF           MOV     A,R7
   \   000102   FB           MOV     R3,A
   \   000103   12....       LCALL   ??rpl_add_parent?relay
   \   000106   7402         MOV     A,#0x2
   \   000108   12....       LCALL   ?DEALLOC_XSTACK8
   \   00010B   8A..         MOV     ?V0 + 2,R2
   \   00010D   8B..         MOV     ?V0 + 3,R3
   \   00010F   85....       MOV     ?V0 + 0,?V0 + 2
   \   000112   85....       MOV     ?V0 + 1,?V0 + 3
   1015            if(p == NULL) {
   \   000115   E5..         MOV     A,?V0 + 0
   \   000117   45..         ORL     A,?V0 + 1
   \   000119   7013         JNZ     ??global_repair_2
   1016              PRINTF("RPL: Failed to add a parent during the global repair\n");
   1017              dag->rank = INFINITE_RANK;
   \   00011B   EE           MOV     A,R6
   \   00011C   2419         ADD     A,#0x19
   \   00011E   F582         MOV     DPL,A
   \   000120   EF           MOV     A,R7
   \   000121   3400         ADDC    A,#0x0
   \   000123   F583         MOV     DPH,A
   \   000125   74FF         MOV     A,#-0x1
   \   000127   F0           MOVX    @DPTR,A
   \   000128   A3           INC     DPTR
   \   000129   74FF         MOV     A,#-0x1
   \   00012B   F0           MOVX    @DPTR,A
   \   00012C   807C         SJMP    ??global_repair_3
   1018            } else {
   1019              dag->rank = dag->instance->of->calculate_rank(p, 0);
   \                     ??global_repair_2:
   \   00012E                ; Setup parameters for indirect call
   \   00012E   7C00         MOV     R4,#0x0
   \   000130   7D00         MOV     R5,#0x0
   \   000132   AA..         MOV     R2,?V0 + 0
   \   000134   AB..         MOV     R3,?V0 + 1
   \   000136   EE           MOV     A,R6
   \   000137   241B         ADD     A,#0x1b
   \   000139   F582         MOV     DPL,A
   \   00013B   EF           MOV     A,R7
   \   00013C   3400         ADDC    A,#0x0
   \   00013E   F583         MOV     DPH,A
   \   000140   E0           MOVX    A,@DPTR
   \   000141   F8           MOV     R0,A
   \   000142   A3           INC     DPTR
   \   000143   E0           MOVX    A,@DPTR
   \   000144   C8           XCH     A,R0
   \   000145   2407         ADD     A,#0x7
   \   000147   F582         MOV     DPL,A
   \   000149   E8           MOV     A,R0
   \   00014A   3400         ADDC    A,#0x0
   \   00014C   F583         MOV     DPH,A
   \   00014E   E0           MOVX    A,@DPTR
   \   00014F   F8           MOV     R0,A
   \   000150   A3           INC     DPTR
   \   000151   E0           MOVX    A,@DPTR
   \   000152   C8           XCH     A,R0
   \   000153   2408         ADD     A,#0x8
   \   000155   F582         MOV     DPL,A
   \   000157   E8           MOV     A,R0
   \   000158   3400         ADDC    A,#0x0
   \   00015A   F583         MOV     DPH,A
   \   00015C   E0           MOVX    A,@DPTR
   \   00015D   F8           MOV     R0,A
   \   00015E   A3           INC     DPTR
   \   00015F   E0           MOVX    A,@DPTR
   \   000160   F583         MOV     DPH,A
   \   000162   8882         MOV     DPL,R0
   \   000164   12....       LCALL   ?CALL_IND
   \   000167   EE           MOV     A,R6
   \   000168   2419         ADD     A,#0x19
   \   00016A   F582         MOV     DPL,A
   \   00016C   EF           MOV     A,R7
   \   00016D   3400         ADDC    A,#0x0
   \   00016F   F583         MOV     DPH,A
   \   000171   EA           MOV     A,R2
   \   000172   F0           MOVX    @DPTR,A
   \   000173   A3           INC     DPTR
   \   000174   EB           MOV     A,R3
   \   000175   F0           MOVX    @DPTR,A
   1020              dag->min_rank = dag->rank;
   \   000176   EE           MOV     A,R6
   \   000177   2419         ADD     A,#0x19
   \   000179   F582         MOV     DPL,A
   \   00017B   EF           MOV     A,R7
   \   00017C   3400         ADDC    A,#0x0
   \   00017E   F583         MOV     DPH,A
   \   000180   E0           MOVX    A,@DPTR
   \   000181   F8           MOV     R0,A
   \   000182   A3           INC     DPTR
   \   000183   E0           MOVX    A,@DPTR
   \   000184   F9           MOV     R1,A
   \   000185   EE           MOV     A,R6
   \   000186   2410         ADD     A,#0x10
   \   000188   F582         MOV     DPL,A
   \   00018A   EF           MOV     A,R7
   \   00018B   3400         ADDC    A,#0x0
   \   00018D   F583         MOV     DPH,A
   \   00018F   E8           MOV     A,R0
   \   000190   F0           MOVX    @DPTR,A
   \   000191   A3           INC     DPTR
   \   000192   E9           MOV     A,R1
   \   000193   F0           MOVX    @DPTR,A
   1021              PRINTF("RPL: rpl_process_parent_event global repair\n");
   1022              rpl_process_parent_event(dag->instance, p);
   \   000194                ; Setup parameters for call to function rpl_process_parent_event
   \   000194   AC..         MOV     R4,?V0 + 0
   \   000196   AD..         MOV     R5,?V0 + 1
   \   000198   EE           MOV     A,R6
   \   000199   241B         ADD     A,#0x1b
   \   00019B   F582         MOV     DPL,A
   \   00019D   EF           MOV     A,R7
   \   00019E   3400         ADDC    A,#0x0
   \   0001A0   F583         MOV     DPH,A
   \   0001A2   E0           MOVX    A,@DPTR
   \   0001A3   FA           MOV     R2,A
   \   0001A4   A3           INC     DPTR
   \   0001A5   E0           MOVX    A,@DPTR
   \   0001A6   FB           MOV     R3,A
   \   0001A7   12....       LCALL   ??rpl_process_parent_event?relay
   1023            }
   1024          
   1025            PRINTF("RPL: Participating in a global repair (version=%u, rank=%hu)\n",
   1026                   dag->version, dag->rank);
   1027          
   1028            RPL_STAT(rpl_stats.global_repairs++);
   1029          }
   \                     ??global_repair_3:
   \   0001AA   7F04         MOV     R7,#0x4
   \   0001AC   02....       LJMP    ?BANKED_LEAVE_XDATA
   1030          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1031          void
   1032          rpl_local_repair(rpl_instance_t *instance)
   \                     rpl_local_repair:
   1033          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   1034            int i;
   1035          
   1036            if(instance == NULL) {
   \   000009   E5..         MOV     A,?V0 + 0
   \   00000B   45..         ORL     A,?V0 + 1
   \   00000D   7003         JNZ     $+5
   \   00000F   02....       LJMP    ??rpl_local_repair_0 & 0xFFFF
   1037              PRINTF("RPL: local repair requested for instance NULL\n");
   1038              return;
   1039            }
   1040            PRINTF("RPL: Starting a local instance repair\n");
   1041            for(i = 0; i < RPL_MAX_DAG_PER_INSTANCE; i++) {
   \   000012   7E00         MOV     R6,#0x0
   \   000014   7F00         MOV     R7,#0x0
   \   000016   02....       LJMP    ??rpl_local_repair_1 & 0xFFFF
   1042              if(instance->dag_table[i].used) {
   \                     ??rpl_local_repair_2:
   \   000019   EE           MOV     A,R6
   \   00001A   F8           MOV     R0,A
   \   00001B   EF           MOV     A,R7
   \   00001C   F9           MOV     R1,A
   \   00001D   E8           MOV     A,R0
   \   00001E   75F037       MOV     B,#0x37
   \   000021   A4           MUL     AB
   \   000022   C8           XCH     A,R0
   \   000023   AAF0         MOV     R2,B
   \   000025   75F000       MOV     B,#0x0
   \   000028   A4           MUL     AB
   \   000029   2A           ADD     A,R2
   \   00002A   FA           MOV     R2,A
   \   00002B   75F037       MOV     B,#0x37
   \   00002E   E9           MOV     A,R1
   \   00002F   A4           MUL     AB
   \   000030   2A           ADD     A,R2
   \   000031   F9           MOV     R1,A
   \   000032   E5..         MOV     A,?V0 + 0
   \   000034   28           ADD     A,R0
   \   000035   F8           MOV     R0,A
   \   000036   E5..         MOV     A,?V0 + 1
   \   000038   39           ADDC    A,R1
   \   000039   F9           MOV     R1,A
   \   00003A   E8           MOV     A,R0
   \   00003B   2420         ADD     A,#0x20
   \   00003D   F582         MOV     DPL,A
   \   00003F   E9           MOV     A,R1
   \   000040   3400         ADDC    A,#0x0
   \   000042   F583         MOV     DPH,A
   \   000044   E0           MOVX    A,@DPTR
   \   000045   6062         JZ      ??rpl_local_repair_3
   1043                instance->dag_table[i].rank = INFINITE_RANK;
   \   000047   EE           MOV     A,R6
   \   000048   F8           MOV     R0,A
   \   000049   EF           MOV     A,R7
   \   00004A   F9           MOV     R1,A
   \   00004B   E8           MOV     A,R0
   \   00004C   75F037       MOV     B,#0x37
   \   00004F   A4           MUL     AB
   \   000050   C8           XCH     A,R0
   \   000051   AAF0         MOV     R2,B
   \   000053   75F000       MOV     B,#0x0
   \   000056   A4           MUL     AB
   \   000057   2A           ADD     A,R2
   \   000058   FA           MOV     R2,A
   \   000059   75F037       MOV     B,#0x37
   \   00005C   E9           MOV     A,R1
   \   00005D   A4           MUL     AB
   \   00005E   2A           ADD     A,R2
   \   00005F   F9           MOV     R1,A
   \   000060   E5..         MOV     A,?V0 + 0
   \   000062   28           ADD     A,R0
   \   000063   F8           MOV     R0,A
   \   000064   E5..         MOV     A,?V0 + 1
   \   000066   39           ADDC    A,R1
   \   000067   F9           MOV     R1,A
   \   000068   E8           MOV     A,R0
   \   000069   2424         ADD     A,#0x24
   \   00006B   F582         MOV     DPL,A
   \   00006D   E9           MOV     A,R1
   \   00006E   3400         ADDC    A,#0x0
   \   000070   F583         MOV     DPH,A
   \   000072   74FF         MOV     A,#-0x1
   \   000074   F0           MOVX    @DPTR,A
   \   000075   A3           INC     DPTR
   \   000076   74FF         MOV     A,#-0x1
   \   000078   F0           MOVX    @DPTR,A
   1044                nullify_parents(&instance->dag_table[i], 0);
   \   000079                ; Setup parameters for call to function nullify_parents
   \   000079   7C00         MOV     R4,#0x0
   \   00007B   7D00         MOV     R5,#0x0
   \   00007D   EE           MOV     A,R6
   \   00007E   F8           MOV     R0,A
   \   00007F   EF           MOV     A,R7
   \   000080   F9           MOV     R1,A
   \   000081   E8           MOV     A,R0
   \   000082   75F037       MOV     B,#0x37
   \   000085   A4           MUL     AB
   \   000086   C8           XCH     A,R0
   \   000087   AAF0         MOV     R2,B
   \   000089   75F000       MOV     B,#0x0
   \   00008C   A4           MUL     AB
   \   00008D   2A           ADD     A,R2
   \   00008E   FA           MOV     R2,A
   \   00008F   75F037       MOV     B,#0x37
   \   000092   E9           MOV     A,R1
   \   000093   A4           MUL     AB
   \   000094   2A           ADD     A,R2
   \   000095   F9           MOV     R1,A
   \   000096   E5..         MOV     A,?V0 + 0
   \   000098   28           ADD     A,R0
   \   000099   F8           MOV     R0,A
   \   00009A   E5..         MOV     A,?V0 + 1
   \   00009C   39           ADDC    A,R1
   \   00009D   F9           MOV     R1,A
   \   00009E   E8           MOV     A,R0
   \   00009F   240B         ADD     A,#0xb
   \   0000A1   FA           MOV     R2,A
   \   0000A2   E9           MOV     A,R1
   \   0000A3   3400         ADDC    A,#0x0
   \   0000A5   FB           MOV     R3,A
   \   0000A6   12....       LCALL   ??nullify_parents?relay
   1045              }
   1046            }
   \                     ??rpl_local_repair_3:
   \   0000A9   EE           MOV     A,R6
   \   0000AA   2401         ADD     A,#0x1
   \   0000AC   FE           MOV     R6,A
   \   0000AD   EF           MOV     A,R7
   \   0000AE   3400         ADDC    A,#0x0
   \   0000B0   FF           MOV     R7,A
   \                     ??rpl_local_repair_1:
   \   0000B1   C3           CLR     C
   \   0000B2   EE           MOV     A,R6
   \   0000B3   9402         SUBB    A,#0x2
   \   0000B5   EF           MOV     A,R7
   \   0000B6   9400         SUBB    A,#0x0
   \   0000B8   A2D2         MOV     C,0xD0 /* PSW */.2
   \   0000BA   65D0         XRL     A,PSW
   \   0000BC   33           RLC     A
   \   0000BD   5003         JNC     $+5
   \   0000BF   02....       LJMP    ??rpl_local_repair_2 & 0xFFFF
   1047          
   1048            rpl_reset_dio_timer(instance);
   \   0000C2                ; Setup parameters for call to function rpl_reset_dio_timer
   \   0000C2   AA..         MOV     R2,?V0 + 0
   \   0000C4   AB..         MOV     R3,?V0 + 1
   \   0000C6   12....       LCALL   ??rpl_reset_dio_timer?relay
   1049          
   1050            RPL_STAT(rpl_stats.local_repairs++);
   1051          }
   \                     ??rpl_local_repair_0:
   \   0000C9   7F02         MOV     R7,#0x2
   \   0000CB   02....       LJMP    ?BANKED_LEAVE_XDATA
   1052          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1053          void
   1054          rpl_recalculate_ranks(void)
   \                     rpl_recalculate_ranks:
   1055          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   1056            rpl_parent_t *p;
   1057          
   1058            /*
   1059             * We recalculate ranks when we receive feedback from the system rather
   1060             * than RPL protocol messages. This periodical recalculation is called
   1061             * from a timer in order to keep the stack depth reasonably low.
   1062             */
   1063            p = nbr_table_head(rpl_parents);
   \   000005                ; Setup parameters for call to function nbr_table_head
   \   000005   90....       MOV     DPTR,#rpl_parents
   \   000008   E0           MOVX    A,@DPTR
   \   000009   FA           MOV     R2,A
   \   00000A   A3           INC     DPTR
   \   00000B   E0           MOVX    A,@DPTR
   \   00000C   FB           MOV     R3,A
   \   00000D   12....       LCALL   ??nbr_table_head?relay
   \   000010   8A..         MOV     ?V0 + 0,R2
   \   000012   8B..         MOV     ?V0 + 1,R3
   \   000014   AE..         MOV     R6,?V0 + 0
   \   000016   AF..         MOV     R7,?V0 + 1
   \   000018   02....       LJMP    ??rpl_recalculate_ranks_0 & 0xFFFF
   1064            while(p != NULL) {
   1065              if(p->dag != NULL && p->dag->instance && p->updated) {
   \                     ??rpl_recalculate_ranks_1:
   \   00001B   8E82         MOV     DPL,R6
   \   00001D   8F83         MOV     DPH,R7
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   E0           MOVX    A,@DPTR
   \   000022   F8           MOV     R0,A
   \   000023   A3           INC     DPTR
   \   000024   E0           MOVX    A,@DPTR
   \   000025   F9           MOV     R1,A
   \   000026   E8           MOV     A,R0
   \   000027   49           ORL     A,R1
   \   000028   6065         JZ      ??rpl_recalculate_ranks_2
   \   00002A   8E82         MOV     DPL,R6
   \   00002C   8F83         MOV     DPH,R7
   \   00002E   A3           INC     DPTR
   \   00002F   A3           INC     DPTR
   \   000030   E0           MOVX    A,@DPTR
   \   000031   F8           MOV     R0,A
   \   000032   A3           INC     DPTR
   \   000033   E0           MOVX    A,@DPTR
   \   000034   C8           XCH     A,R0
   \   000035   241B         ADD     A,#0x1b
   \   000037   F582         MOV     DPL,A
   \   000039   E8           MOV     A,R0
   \   00003A   3400         ADDC    A,#0x0
   \   00003C   F583         MOV     DPH,A
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   F8           MOV     R0,A
   \   000040   A3           INC     DPTR
   \   000041   E0           MOVX    A,@DPTR
   \   000042   F9           MOV     R1,A
   \   000043   E8           MOV     A,R0
   \   000044   49           ORL     A,R1
   \   000045   6048         JZ      ??rpl_recalculate_ranks_2
   \   000047   8E82         MOV     DPL,R6
   \   000049   8F83         MOV     DPH,R7
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   A3           INC     DPTR
   \   00004F   A3           INC     DPTR
   \   000050   A3           INC     DPTR
   \   000051   A3           INC     DPTR
   \   000052   A3           INC     DPTR
   \   000053   A3           INC     DPTR
   \   000054   E0           MOVX    A,@DPTR
   \   000055   6038         JZ      ??rpl_recalculate_ranks_2
   1066                p->updated = 0;
   \   000057   8E82         MOV     DPL,R6
   \   000059   8F83         MOV     DPH,R7
   \   00005B   A3           INC     DPTR
   \   00005C   A3           INC     DPTR
   \   00005D   A3           INC     DPTR
   \   00005E   A3           INC     DPTR
   \   00005F   A3           INC     DPTR
   \   000060   A3           INC     DPTR
   \   000061   A3           INC     DPTR
   \   000062   A3           INC     DPTR
   \   000063   A3           INC     DPTR
   \   000064   7400         MOV     A,#0x0
   \   000066   F0           MOVX    @DPTR,A
   1067                PRINTF("RPL: rpl_process_parent_event recalculate_ranks\n");
   1068                if(!rpl_process_parent_event(p->dag->instance, p)) {
   \   000067                ; Setup parameters for call to function rpl_process_parent_event
   \   000067   EE           MOV     A,R6
   \   000068   FC           MOV     R4,A
   \   000069   EF           MOV     A,R7
   \   00006A   FD           MOV     R5,A
   \   00006B   8E82         MOV     DPL,R6
   \   00006D   8F83         MOV     DPH,R7
   \   00006F   A3           INC     DPTR
   \   000070   A3           INC     DPTR
   \   000071   E0           MOVX    A,@DPTR
   \   000072   F8           MOV     R0,A
   \   000073   A3           INC     DPTR
   \   000074   E0           MOVX    A,@DPTR
   \   000075   C8           XCH     A,R0
   \   000076   241B         ADD     A,#0x1b
   \   000078   F582         MOV     DPL,A
   \   00007A   E8           MOV     A,R0
   \   00007B   3400         ADDC    A,#0x0
   \   00007D   F583         MOV     DPH,A
   \   00007F   E0           MOVX    A,@DPTR
   \   000080   FA           MOV     R2,A
   \   000081   A3           INC     DPTR
   \   000082   E0           MOVX    A,@DPTR
   \   000083   FB           MOV     R3,A
   \   000084   12....       LCALL   ??rpl_process_parent_event?relay
   \   000087   8A..         MOV     ?V0 + 0,R2
   \   000089   8B..         MOV     ?V0 + 1,R3
   \   00008B   A8..         MOV     R0,?V0 + 0
   \   00008D   A9..         MOV     R1,?V0 + 1
   1069                  PRINTF("RPL: A parent was dropped\n");
   1070                }
   1071              }
   1072              p = nbr_table_next(rpl_parents, p);
   \                     ??rpl_recalculate_ranks_2:
   \   00008F                ; Setup parameters for call to function nbr_table_next
   \   00008F   EE           MOV     A,R6
   \   000090   FC           MOV     R4,A
   \   000091   EF           MOV     A,R7
   \   000092   FD           MOV     R5,A
   \   000093   90....       MOV     DPTR,#rpl_parents
   \   000096   E0           MOVX    A,@DPTR
   \   000097   FA           MOV     R2,A
   \   000098   A3           INC     DPTR
   \   000099   E0           MOVX    A,@DPTR
   \   00009A   FB           MOV     R3,A
   \   00009B   12....       LCALL   ??nbr_table_next?relay
   \   00009E   8A..         MOV     ?V0 + 0,R2
   \   0000A0   8B..         MOV     ?V0 + 1,R3
   \   0000A2   AE..         MOV     R6,?V0 + 0
   \   0000A4   AF..         MOV     R7,?V0 + 1
   1073            }
   \                     ??rpl_recalculate_ranks_0:
   \   0000A6   EE           MOV     A,R6
   \   0000A7   4F           ORL     A,R7
   \   0000A8   6003         JZ      $+5
   \   0000AA   02....       LJMP    ??rpl_recalculate_ranks_1 & 0xFFFF
   1074          }
   \   0000AD   7F02         MOV     R7,#0x2
   \   0000AF   02....       LJMP    ?BANKED_LEAVE_XDATA
   1075          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1076          int
   1077          rpl_process_parent_event(rpl_instance_t *instance, rpl_parent_t *p)
   \                     rpl_process_parent_event:
   1078          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   1079            int return_value;
   1080          
   1081          #if DEBUG
   1082            rpl_rank_t old_rank;
   1083            old_rank = instance->current_dag->rank;
   1084          #endif /* DEBUG */
   1085          
   1086            return_value = 1;
   \   00000D   75..01       MOV     ?V0 + 2,#0x1
   \   000010   75..00       MOV     ?V0 + 3,#0x0
   1087          
   1088            if(!acceptable_rank(p->dag, p->rank)) {
   \   000013                ; Setup parameters for call to function acceptable_rank
   \   000013   8E82         MOV     DPL,R6
   \   000015   8F83         MOV     DPH,R7
   \   000017   A3           INC     DPTR
   \   000018   A3           INC     DPTR
   \   000019   A3           INC     DPTR
   \   00001A   A3           INC     DPTR
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   FC           MOV     R4,A
   \   00001D   A3           INC     DPTR
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   FD           MOV     R5,A
   \   000020   8E82         MOV     DPL,R6
   \   000022   8F83         MOV     DPH,R7
   \   000024   A3           INC     DPTR
   \   000025   A3           INC     DPTR
   \   000026   E0           MOVX    A,@DPTR
   \   000027   FA           MOV     R2,A
   \   000028   A3           INC     DPTR
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   FB           MOV     R3,A
   \   00002B   12....       LCALL   ??acceptable_rank?relay
   \   00002E   8A..         MOV     ?V0 + 4,R2
   \   000030   8B..         MOV     ?V0 + 5,R3
   \   000032   E5..         MOV     A,?V0 + 4
   \   000034   45..         ORL     A,?V0 + 5
   \   000036   703D         JNZ     ??rpl_process_parent_event_0
   1089              /* The candidate parent is no longer valid: the rank increase resulting
   1090                 from the choice of it as a parent would be too high. */
   1091              PRINTF("RPL: Unacceptable rank %u\n", (unsigned)p->rank);
   1092              rpl_nullify_parent(p);
   \   000038                ; Setup parameters for call to function rpl_nullify_parent
   \   000038   EE           MOV     A,R6
   \   000039   FA           MOV     R2,A
   \   00003A   EF           MOV     A,R7
   \   00003B   FB           MOV     R3,A
   \   00003C   12....       LCALL   ??rpl_nullify_parent?relay
   1093              if(p != instance->current_dag->preferred_parent) {
   \   00003F   85..82       MOV     DPL,?V0 + 0
   \   000042   85..83       MOV     DPH,?V0 + 1
   \   000045   A3           INC     DPTR
   \   000046   A3           INC     DPTR
   \   000047   A3           INC     DPTR
   \   000048   A3           INC     DPTR
   \   000049   A3           INC     DPTR
   \   00004A   A3           INC     DPTR
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   F8           MOV     R0,A
   \   000050   A3           INC     DPTR
   \   000051   E0           MOVX    A,@DPTR
   \   000052   C8           XCH     A,R0
   \   000053   2417         ADD     A,#0x17
   \   000055   F582         MOV     DPL,A
   \   000057   E8           MOV     A,R0
   \   000058   3400         ADDC    A,#0x0
   \   00005A   F583         MOV     DPH,A
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   F8           MOV     R0,A
   \   00005E   A3           INC     DPTR
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   F9           MOV     R1,A
   \   000061   EE           MOV     A,R6
   \   000062   68           XRL     A,R0
   \   000063   7002         JNZ     ??rpl_process_parent_event_1
   \   000065   EF           MOV     A,R7
   \   000066   69           XRL     A,R1
   \                     ??rpl_process_parent_event_1:
   \   000067   6006         JZ      ??rpl_process_parent_event_2
   1094                return 0;
   \   000069   7A00         MOV     R2,#0x0
   \   00006B   7B00         MOV     R3,#0x0
   \   00006D   802C         SJMP    ??rpl_process_parent_event_3
   1095              } else {
   1096                return_value = 0;
   \                     ??rpl_process_parent_event_2:
   \   00006F   75..00       MOV     ?V0 + 2,#0x0
   \   000072   75..00       MOV     ?V0 + 3,#0x0
   1097              }
   1098            }
   1099          
   1100            if(rpl_select_dag(instance, p) == NULL) {
   \                     ??rpl_process_parent_event_0:
   \   000075                ; Setup parameters for call to function rpl_select_dag
   \   000075   EE           MOV     A,R6
   \   000076   FC           MOV     R4,A
   \   000077   EF           MOV     A,R7
   \   000078   FD           MOV     R5,A
   \   000079   AA..         MOV     R2,?V0 + 0
   \   00007B   AB..         MOV     R3,?V0 + 1
   \   00007D   12....       LCALL   ??rpl_select_dag?relay
   \   000080   8A..         MOV     ?V0 + 4,R2
   \   000082   8B..         MOV     ?V0 + 5,R3
   \   000084   E5..         MOV     A,?V0 + 4
   \   000086   45..         ORL     A,?V0 + 5
   \   000088   700D         JNZ     ??rpl_process_parent_event_4
   1101              /* No suitable parent; trigger a local repair. */
   1102              PRINTF("RPL: No parents found in any DAG\n");
   1103              rpl_local_repair(instance);
   \   00008A                ; Setup parameters for call to function rpl_local_repair
   \   00008A   AA..         MOV     R2,?V0 + 0
   \   00008C   AB..         MOV     R3,?V0 + 1
   \   00008E   12....       LCALL   ??rpl_local_repair?relay
   1104              return 0;
   \   000091   7A00         MOV     R2,#0x0
   \   000093   7B00         MOV     R3,#0x0
   \   000095   8004         SJMP    ??rpl_process_parent_event_3
   1105            }
   1106          
   1107          #if DEBUG
   1108            if(DAG_RANK(old_rank, instance) != DAG_RANK(instance->current_dag->rank, instance)) {
   1109              PRINTF("RPL: Moving in the instance from rank %hu to %hu\n",
   1110          	   DAG_RANK(old_rank, instance), DAG_RANK(instance->current_dag->rank, instance));
   1111              if(instance->current_dag->rank != INFINITE_RANK) {
   1112                PRINTF("RPL: The preferred parent is ");
   1113                PRINT6ADDR(rpl_get_parent_ipaddr(instance->current_dag->preferred_parent));
   1114                PRINTF(" (rank %u)\n",
   1115                     (unsigned)DAG_RANK(instance->current_dag->preferred_parent->rank, instance));
   1116              } else {
   1117                PRINTF("RPL: We don't have any parent");
   1118              }
   1119            }
   1120          #endif /* DEBUG */
   1121          
   1122            return return_value;
   \                     ??rpl_process_parent_event_4:
   \   000097   AA..         MOV     R2,?V0 + 2
   \   000099   AB..         MOV     R3,?V0 + 3
   \                     ??rpl_process_parent_event_3:
   \   00009B   7F06         MOV     R7,#0x6
   \   00009D   02....       LJMP    ?BANKED_LEAVE_XDATA
   1123          }
   1124          /*---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1125          void
   1126          rpl_process_dio(uip_ipaddr_t *from, rpl_dio_t *dio)
   \                     rpl_process_dio:
   1127          {
   \   000000   74EA         MOV     A,#-0x16
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 22
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 12,R2
   \   000007   8B..         MOV     ?V0 + 13,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   1128            rpl_instance_t *instance;
   1129            rpl_dag_t *dag, *previous_dag;
   1130            rpl_parent_t *p;
   1131          
   1132            if(dio->mop != RPL_MOP_DEFAULT) {
   \   00000D   EE           MOV     A,R6
   \   00000E   2415         ADD     A,#0x15
   \   000010   F582         MOV     DPL,A
   \   000012   EF           MOV     A,R7
   \   000013   3400         ADDC    A,#0x0
   \   000015   F583         MOV     DPH,A
   \   000017   E0           MOVX    A,@DPTR
   \   000018   6402         XRL     A,#0x2
   \   00001A   6003         JZ      $+5
   \   00001C   02....       LJMP    ??rpl_process_dio_0 & 0xFFFF
   1133              PRINTF("RPL: Ignoring a DIO with an unsupported MOP: %d\n", dio->mop);
   1134              return;
   1135            }
   1136          
   1137            dag = get_dag(dio->instance_id, &dio->dag_id);
   \   00001F                ; Setup parameters for call to function get_dag
   \   00001F   EE           MOV     A,R6
   \   000020   FA           MOV     R2,A
   \   000021   EF           MOV     A,R7
   \   000022   FB           MOV     R3,A
   \   000023   EE           MOV     A,R6
   \   000024   2418         ADD     A,#0x18
   \   000026   F582         MOV     DPL,A
   \   000028   EF           MOV     A,R7
   \   000029   3400         ADDC    A,#0x0
   \   00002B   F583         MOV     DPH,A
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   F9           MOV     R1,A
   \   00002F   12....       LCALL   ??get_dag?relay
   \   000032   8A..         MOV     ?V0 + 2,R2
   \   000034   8B..         MOV     ?V0 + 3,R3
   \   000036   85....       MOV     ?V0 + 0,?V0 + 2
   \   000039   85....       MOV     ?V0 + 1,?V0 + 3
   1138            instance = rpl_get_instance(dio->instance_id);
   \   00003C                ; Setup parameters for call to function rpl_get_instance
   \   00003C   EE           MOV     A,R6
   \   00003D   2418         ADD     A,#0x18
   \   00003F   F582         MOV     DPL,A
   \   000041   EF           MOV     A,R7
   \   000042   3400         ADDC    A,#0x0
   \   000044   F583         MOV     DPH,A
   \   000046   E0           MOVX    A,@DPTR
   \   000047   F9           MOV     R1,A
   \   000048   12....       LCALL   ??rpl_get_instance?relay
   \   00004B   8A..         MOV     ?V0 + 4,R2
   \   00004D   8B..         MOV     ?V0 + 5,R3
   \   00004F   85....       MOV     ?V0 + 2,?V0 + 4
   \   000052   85....       MOV     ?V0 + 3,?V0 + 5
   1139          
   1140            if(dag != NULL && instance != NULL) {
   \   000055   E5..         MOV     A,?V0 + 0
   \   000057   45..         ORL     A,?V0 + 1
   \   000059   7003         JNZ     $+5
   \   00005B   02....       LJMP    ??rpl_process_dio_1 & 0xFFFF
   \   00005E   E5..         MOV     A,?V0 + 2
   \   000060   45..         ORL     A,?V0 + 3
   \   000062   7003         JNZ     $+5
   \   000064   02....       LJMP    ??rpl_process_dio_1 & 0xFFFF
   1141              if(lollipop_greater_than(dio->version, dag->version)) {
   \   000067                ; Setup parameters for call to function lollipop_greater_than
   \   000067   E5..         MOV     A,?V0 + 0
   \   000069   2412         ADD     A,#0x12
   \   00006B   F582         MOV     DPL,A
   \   00006D   E5..         MOV     A,?V0 + 1
   \   00006F   3400         ADDC    A,#0x0
   \   000071   F583         MOV     DPH,A
   \   000073   E0           MOVX    A,@DPTR
   \   000074   FC           MOV     R4,A
   \   000075   7D00         MOV     R5,#0x0
   \   000077   EE           MOV     A,R6
   \   000078   2417         ADD     A,#0x17
   \   00007A   F582         MOV     DPL,A
   \   00007C   EF           MOV     A,R7
   \   00007D   3400         ADDC    A,#0x0
   \   00007F   F583         MOV     DPH,A
   \   000081   E0           MOVX    A,@DPTR
   \   000082   FA           MOV     R2,A
   \   000083   7B00         MOV     R3,#0x0
   \   000085   12....       LCALL   ??lollipop_greater_than?relay
   \   000088   8A..         MOV     ?V0 + 4,R2
   \   00008A   8B..         MOV     ?V0 + 5,R3
   \   00008C   E5..         MOV     A,?V0 + 4
   \   00008E   45..         ORL     A,?V0 + 5
   \   000090   7003         JNZ     $+5
   \   000092   02....       LJMP    ??rpl_process_dio_2 & 0xFFFF
   1142                if(dag->rank == ROOT_RANK(instance)) {
   \   000095   E5..         MOV     A,?V0 + 0
   \   000097   2419         ADD     A,#0x19
   \   000099   F582         MOV     DPL,A
   \   00009B   E5..         MOV     A,?V0 + 1
   \   00009D   3400         ADDC    A,#0x0
   \   00009F   F583         MOV     DPH,A
   \   0000A1   E0           MOVX    A,@DPTR
   \   0000A2   F8           MOV     R0,A
   \   0000A3   A3           INC     DPTR
   \   0000A4   E0           MOVX    A,@DPTR
   \   0000A5   F9           MOV     R1,A
   \   0000A6   E5..         MOV     A,?V0 + 2
   \   0000A8   2488         ADD     A,#-0x78
   \   0000AA   F582         MOV     DPL,A
   \   0000AC   E5..         MOV     A,?V0 + 3
   \   0000AE   3400         ADDC    A,#0x0
   \   0000B0   F583         MOV     DPH,A
   \   0000B2   E0           MOVX    A,@DPTR
   \   0000B3   68           XRL     A,R0
   \   0000B4   7003         JNZ     ??rpl_process_dio_3
   \   0000B6   A3           INC     DPTR
   \   0000B7   E0           MOVX    A,@DPTR
   \   0000B8   69           XRL     A,R1
   \                     ??rpl_process_dio_3:
   \   0000B9   706B         JNZ     ??rpl_process_dio_4
   1143          	PRINTF("RPL: Root received inconsistent DIO version number\n");
   1144          	dag->version = dio->version;
   \   0000BB   EE           MOV     A,R6
   \   0000BC   2417         ADD     A,#0x17
   \   0000BE   F582         MOV     DPL,A
   \   0000C0   EF           MOV     A,R7
   \   0000C1   3400         ADDC    A,#0x0
   \   0000C3   F583         MOV     DPH,A
   \   0000C5   E0           MOVX    A,@DPTR
   \   0000C6   C0E0         PUSH    A
   \   0000C8   E5..         MOV     A,?V0 + 0
   \   0000CA   2412         ADD     A,#0x12
   \   0000CC   F582         MOV     DPL,A
   \   0000CE   E5..         MOV     A,?V0 + 1
   \   0000D0   3400         ADDC    A,#0x0
   \   0000D2   F583         MOV     DPH,A
   \   0000D4   D0E0         POP     A
   \   0000D6   F0           MOVX    @DPTR,A
   1145          	RPL_LOLLIPOP_INCREMENT(dag->version);
   \   0000D7   E5..         MOV     A,?V0 + 0
   \   0000D9   2412         ADD     A,#0x12
   \   0000DB   F582         MOV     DPL,A
   \   0000DD   E5..         MOV     A,?V0 + 1
   \   0000DF   3400         ADDC    A,#0x0
   \   0000E1   F583         MOV     DPH,A
   \   0000E3   E0           MOVX    A,@DPTR
   \   0000E4   C3           CLR     C
   \   0000E5   9480         SUBB    A,#-0x80
   \   0000E7   4012         JC      ??rpl_process_dio_5
   \   0000E9   E5..         MOV     A,?V0 + 0
   \   0000EB   2412         ADD     A,#0x12
   \   0000ED   F582         MOV     DPL,A
   \   0000EF   E5..         MOV     A,?V0 + 1
   \   0000F1   3400         ADDC    A,#0x0
   \   0000F3   F583         MOV     DPH,A
   \   0000F5   E0           MOVX    A,@DPTR
   \   0000F6   2401         ADD     A,#0x1
   \   0000F8   F0           MOVX    @DPTR,A
   \   0000F9   8022         SJMP    ??rpl_process_dio_6
   \                     ??rpl_process_dio_5:
   \   0000FB   E5..         MOV     A,?V0 + 0
   \   0000FD   2412         ADD     A,#0x12
   \   0000FF   F582         MOV     DPL,A
   \   000101   E5..         MOV     A,?V0 + 1
   \   000103   3400         ADDC    A,#0x0
   \   000105   F583         MOV     DPH,A
   \   000107   E0           MOVX    A,@DPTR
   \   000108   2401         ADD     A,#0x1
   \   00010A   547F         ANL     A,#0x7f
   \   00010C   C0E0         PUSH    A
   \   00010E   E5..         MOV     A,?V0 + 0
   \   000110   2412         ADD     A,#0x12
   \   000112   F582         MOV     DPL,A
   \   000114   E5..         MOV     A,?V0 + 1
   \   000116   3400         ADDC    A,#0x0
   \   000118   F583         MOV     DPH,A
   \   00011A   D0E0         POP     A
   \   00011C   F0           MOVX    @DPTR,A
   1146          	rpl_reset_dio_timer(instance);
   \                     ??rpl_process_dio_6:
   \   00011D                ; Setup parameters for call to function rpl_reset_dio_timer
   \   00011D   AA..         MOV     R2,?V0 + 2
   \   00011F   AB..         MOV     R3,?V0 + 3
   \   000121   12....       LCALL   ??rpl_reset_dio_timer?relay
   \   000124   805E         SJMP    ??rpl_process_dio_7
   1147                } else {
   1148                  PRINTF("RPL: Global Repair\n");
   1149                  if(dio->prefix_info.length != 0) {
   \                     ??rpl_process_dio_4:
   \   000126   EE           MOV     A,R6
   \   000127   244E         ADD     A,#0x4e
   \   000129   F582         MOV     DPL,A
   \   00012B   EF           MOV     A,R7
   \   00012C   3400         ADDC    A,#0x0
   \   00012E   F583         MOV     DPH,A
   \   000130   E0           MOVX    A,@DPTR
   \   000131   6038         JZ      ??rpl_process_dio_8
   1150                    if(dio->prefix_info.flags & UIP_ND6_RA_FLAG_AUTONOMOUS) {
   \   000133   EE           MOV     A,R6
   \   000134   244F         ADD     A,#0x4f
   \   000136   F582         MOV     DPL,A
   \   000138   EF           MOV     A,R7
   \   000139   3400         ADDC    A,#0x0
   \   00013B   F583         MOV     DPH,A
   \   00013D   E0           MOVX    A,@DPTR
   \   00013E   A2E6         MOV     C,0xE0 /* A   */.6
   \   000140   5029         JNC     ??rpl_process_dio_8
   1151                      PRINTF("RPL : Prefix announced in DIO\n");
   1152                      rpl_set_prefix(dag, &dio->prefix_info.prefix, dio->prefix_info.length);
   \   000142                ; Setup parameters for call to function rpl_set_prefix
   \   000142   EE           MOV     A,R6
   \   000143   244E         ADD     A,#0x4e
   \   000145   F582         MOV     DPL,A
   \   000147   EF           MOV     A,R7
   \   000148   3400         ADDC    A,#0x0
   \   00014A   F583         MOV     DPH,A
   \   00014C   E0           MOVX    A,@DPTR
   \   00014D   F5..         MOV     ?V0 + 2,A
   \   00014F   75..00       MOV     ?V0 + 3,#0x0
   \   000152   78..         MOV     R0,#?V0 + 2
   \   000154   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000157   EE           MOV     A,R6
   \   000158   243A         ADD     A,#0x3a
   \   00015A   FC           MOV     R4,A
   \   00015B   EF           MOV     A,R7
   \   00015C   3400         ADDC    A,#0x0
   \   00015E   FD           MOV     R5,A
   \   00015F   AA..         MOV     R2,?V0 + 0
   \   000161   AB..         MOV     R3,?V0 + 1
   \   000163   12....       LCALL   ??rpl_set_prefix?relay
   \   000166   7402         MOV     A,#0x2
   \   000168   12....       LCALL   ?DEALLOC_XSTACK8
   1153                    }
   1154                  }
   1155          	global_repair(from, dag, dio);
   \                     ??rpl_process_dio_8:
   \   00016B                ; Setup parameters for call to function global_repair
   \   00016B   8E..         MOV     ?V0 + 2,R6
   \   00016D   8F..         MOV     ?V0 + 3,R7
   \   00016F   78..         MOV     R0,#?V0 + 2
   \   000171   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000174   AC..         MOV     R4,?V0 + 0
   \   000176   AD..         MOV     R5,?V0 + 1
   \   000178   AA..         MOV     R2,?V0 + 12
   \   00017A   AB..         MOV     R3,?V0 + 13
   \   00017C   12....       LCALL   ??global_repair?relay
   \   00017F   7402         MOV     A,#0x2
   \   000181   12....       LCALL   ?DEALLOC_XSTACK8
   1156                }
   1157                return;
   \                     ??rpl_process_dio_7:
   \   000184   02....       LJMP    ??rpl_process_dio_0 & 0xFFFF
   1158              }
   1159          
   1160              if(lollipop_greater_than(dag->version, dio->version)) {
   \                     ??rpl_process_dio_2:
   \   000187                ; Setup parameters for call to function lollipop_greater_than
   \   000187   EE           MOV     A,R6
   \   000188   2417         ADD     A,#0x17
   \   00018A   F582         MOV     DPL,A
   \   00018C   EF           MOV     A,R7
   \   00018D   3400         ADDC    A,#0x0
   \   00018F   F583         MOV     DPH,A
   \   000191   E0           MOVX    A,@DPTR
   \   000192   FC           MOV     R4,A
   \   000193   7D00         MOV     R5,#0x0
   \   000195   E5..         MOV     A,?V0 + 0
   \   000197   2412         ADD     A,#0x12
   \   000199   F582         MOV     DPL,A
   \   00019B   E5..         MOV     A,?V0 + 1
   \   00019D   3400         ADDC    A,#0x0
   \   00019F   F583         MOV     DPH,A
   \   0001A1   E0           MOVX    A,@DPTR
   \   0001A2   FA           MOV     R2,A
   \   0001A3   7B00         MOV     R3,#0x0
   \   0001A5   12....       LCALL   ??lollipop_greater_than?relay
   \   0001A8   8A..         MOV     ?V0 + 4,R2
   \   0001AA   8B..         MOV     ?V0 + 5,R3
   \   0001AC   E5..         MOV     A,?V0 + 4
   \   0001AE   45..         ORL     A,?V0 + 5
   \   0001B0   6019         JZ      ??rpl_process_dio_1
   1161                /* The DIO sender is on an older version of the DAG. */
   1162                PRINTF("RPL: old version received => inconsistency detected\n");
   1163                if(dag->joined) {
   \   0001B2   E5..         MOV     A,?V0 + 0
   \   0001B4   2416         ADD     A,#0x16
   \   0001B6   F582         MOV     DPL,A
   \   0001B8   E5..         MOV     A,?V0 + 1
   \   0001BA   3400         ADDC    A,#0x0
   \   0001BC   F583         MOV     DPH,A
   \   0001BE   E0           MOVX    A,@DPTR
   \   0001BF   600A         JZ      ??rpl_process_dio_1
   1164                  rpl_reset_dio_timer(instance);
   \   0001C1                ; Setup parameters for call to function rpl_reset_dio_timer
   \   0001C1   AA..         MOV     R2,?V0 + 2
   \   0001C3   AB..         MOV     R3,?V0 + 3
   \   0001C5   12....       LCALL   ??rpl_reset_dio_timer?relay
   1165                  return;
   \   0001C8   02....       LJMP    ??rpl_process_dio_0 & 0xFFFF
   1166                }
   1167              }
   1168            }
   1169          
   1170            if(instance == NULL) {
   \                     ??rpl_process_dio_1:
   \   0001CB   E5..         MOV     A,?V0 + 2
   \   0001CD   45..         ORL     A,?V0 + 3
   \   0001CF   700E         JNZ     ??rpl_process_dio_9
   1171              PRINTF("RPL: New instance detected: Joining...\n");
   1172              rpl_join_instance(from, dio);
   \   0001D1                ; Setup parameters for call to function rpl_join_instance
   \   0001D1   EE           MOV     A,R6
   \   0001D2   FC           MOV     R4,A
   \   0001D3   EF           MOV     A,R7
   \   0001D4   FD           MOV     R5,A
   \   0001D5   AA..         MOV     R2,?V0 + 12
   \   0001D7   AB..         MOV     R3,?V0 + 13
   \   0001D9   12....       LCALL   ??rpl_join_instance?relay
   1173              return;
   \   0001DC   02....       LJMP    ??rpl_process_dio_0 & 0xFFFF
   1174            }
   1175          
   1176            if(dag == NULL) {
   \                     ??rpl_process_dio_9:
   \   0001DF   E5..         MOV     A,?V0 + 0
   \   0001E1   45..         ORL     A,?V0 + 1
   \   0001E3   700E         JNZ     ??rpl_process_dio_10
   1177              PRINTF("RPL: Adding new DAG to known instance.\n");
   1178              rpl_add_dag(from, dio);
   \   0001E5                ; Setup parameters for call to function rpl_add_dag
   \   0001E5   EE           MOV     A,R6
   \   0001E6   FC           MOV     R4,A
   \   0001E7   EF           MOV     A,R7
   \   0001E8   FD           MOV     R5,A
   \   0001E9   AA..         MOV     R2,?V0 + 12
   \   0001EB   AB..         MOV     R3,?V0 + 13
   \   0001ED   12....       LCALL   ??rpl_add_dag?relay
   1179              return;
   \   0001F0   02....       LJMP    ??rpl_process_dio_0 & 0xFFFF
   1180            }
   1181          
   1182          
   1183            if(dio->rank < ROOT_RANK(instance)) {
   \                     ??rpl_process_dio_10:
   \   0001F3   EE           MOV     A,R6
   \   0001F4   2412         ADD     A,#0x12
   \   0001F6   F582         MOV     DPL,A
   \   0001F8   EF           MOV     A,R7
   \   0001F9   3400         ADDC    A,#0x0
   \   0001FB   F583         MOV     DPH,A
   \   0001FD   C082         PUSH    DPL
   \   0001FF   C083         PUSH    DPH
   \   000201   E5..         MOV     A,?V0 + 2
   \   000203   2488         ADD     A,#-0x78
   \   000205   F582         MOV     DPL,A
   \   000207   E5..         MOV     A,?V0 + 3
   \   000209   3400         ADDC    A,#0x0
   \   00020B   F583         MOV     DPH,A
   \   00020D   E0           MOVX    A,@DPTR
   \   00020E   F8           MOV     R0,A
   \   00020F   A3           INC     DPTR
   \   000210   E0           MOVX    A,@DPTR
   \   000211   F9           MOV     R1,A
   \   000212   D083         POP     DPH
   \   000214   D082         POP     DPL
   \   000216   C3           CLR     C
   \   000217   E0           MOVX    A,@DPTR
   \   000218   98           SUBB    A,R0
   \   000219   A3           INC     DPTR
   \   00021A   E0           MOVX    A,@DPTR
   \   00021B   99           SUBB    A,R1
   \   00021C   5003         JNC     $+5
   \   00021E   02....       LJMP    ??rpl_process_dio_0 & 0xFFFF
   1184              PRINTF("RPL: Ignoring DIO with too low rank: %u\n",
   1185                     (unsigned)dio->rank);
   1186              return;
   1187            } else if(dio->rank == INFINITE_RANK && dag->joined) {
   \   000221   EE           MOV     A,R6
   \   000222   2412         ADD     A,#0x12
   \   000224   F582         MOV     DPL,A
   \   000226   EF           MOV     A,R7
   \   000227   3400         ADDC    A,#0x0
   \   000229   F583         MOV     DPH,A
   \   00022B   E0           MOVX    A,@DPTR
   \   00022C   64FF         XRL     A,#0xff
   \   00022E   7004         JNZ     ??rpl_process_dio_11
   \   000230   A3           INC     DPTR
   \   000231   E0           MOVX    A,@DPTR
   \   000232   64FF         XRL     A,#0xff
   \                     ??rpl_process_dio_11:
   \   000234   7016         JNZ     ??rpl_process_dio_12
   \   000236   E5..         MOV     A,?V0 + 0
   \   000238   2416         ADD     A,#0x16
   \   00023A   F582         MOV     DPL,A
   \   00023C   E5..         MOV     A,?V0 + 1
   \   00023E   3400         ADDC    A,#0x0
   \   000240   F583         MOV     DPH,A
   \   000242   E0           MOVX    A,@DPTR
   \   000243   6007         JZ      ??rpl_process_dio_12
   1188              rpl_reset_dio_timer(instance);
   \   000245                ; Setup parameters for call to function rpl_reset_dio_timer
   \   000245   AA..         MOV     R2,?V0 + 2
   \   000247   AB..         MOV     R3,?V0 + 3
   \   000249   12....       LCALL   ??rpl_reset_dio_timer?relay
   1189            }
   1190            
   1191            /* Prefix Information Option treated to add new prefix */
   1192            if(dio->prefix_info.length != 0) {
   \                     ??rpl_process_dio_12:
   \   00024C   EE           MOV     A,R6
   \   00024D   244E         ADD     A,#0x4e
   \   00024F   F582         MOV     DPL,A
   \   000251   EF           MOV     A,R7
   \   000252   3400         ADDC    A,#0x0
   \   000254   F583         MOV     DPH,A
   \   000256   E0           MOVX    A,@DPTR
   \   000257   6038         JZ      ??rpl_process_dio_13
   1193              if(dio->prefix_info.flags & UIP_ND6_RA_FLAG_AUTONOMOUS) {
   \   000259   EE           MOV     A,R6
   \   00025A   244F         ADD     A,#0x4f
   \   00025C   F582         MOV     DPL,A
   \   00025E   EF           MOV     A,R7
   \   00025F   3400         ADDC    A,#0x0
   \   000261   F583         MOV     DPH,A
   \   000263   E0           MOVX    A,@DPTR
   \   000264   A2E6         MOV     C,0xE0 /* A   */.6
   \   000266   5029         JNC     ??rpl_process_dio_13
   1194                PRINTF("RPL : Prefix announced in DIO\n");
   1195                rpl_set_prefix(dag, &dio->prefix_info.prefix, dio->prefix_info.length);
   \   000268                ; Setup parameters for call to function rpl_set_prefix
   \   000268   EE           MOV     A,R6
   \   000269   244E         ADD     A,#0x4e
   \   00026B   F582         MOV     DPL,A
   \   00026D   EF           MOV     A,R7
   \   00026E   3400         ADDC    A,#0x0
   \   000270   F583         MOV     DPH,A
   \   000272   E0           MOVX    A,@DPTR
   \   000273   F5..         MOV     ?V0 + 4,A
   \   000275   75..00       MOV     ?V0 + 5,#0x0
   \   000278   78..         MOV     R0,#?V0 + 4
   \   00027A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00027D   EE           MOV     A,R6
   \   00027E   243A         ADD     A,#0x3a
   \   000280   FC           MOV     R4,A
   \   000281   EF           MOV     A,R7
   \   000282   3400         ADDC    A,#0x0
   \   000284   FD           MOV     R5,A
   \   000285   AA..         MOV     R2,?V0 + 0
   \   000287   AB..         MOV     R3,?V0 + 1
   \   000289   12....       LCALL   ??rpl_set_prefix?relay
   \   00028C   7402         MOV     A,#0x2
   \   00028E   12....       LCALL   ?DEALLOC_XSTACK8
   1196              }
   1197            }
   1198          
   1199            if(dag->rank == ROOT_RANK(instance)) {
   \                     ??rpl_process_dio_13:
   \   000291   E5..         MOV     A,?V0 + 0
   \   000293   2419         ADD     A,#0x19
   \   000295   F582         MOV     DPL,A
   \   000297   E5..         MOV     A,?V0 + 1
   \   000299   3400         ADDC    A,#0x0
   \   00029B   F583         MOV     DPH,A
   \   00029D   E0           MOVX    A,@DPTR
   \   00029E   F8           MOV     R0,A
   \   00029F   A3           INC     DPTR
   \   0002A0   E0           MOVX    A,@DPTR
   \   0002A1   F9           MOV     R1,A
   \   0002A2   E5..         MOV     A,?V0 + 2
   \   0002A4   2488         ADD     A,#-0x78
   \   0002A6   F582         MOV     DPL,A
   \   0002A8   E5..         MOV     A,?V0 + 3
   \   0002AA   3400         ADDC    A,#0x0
   \   0002AC   F583         MOV     DPH,A
   \   0002AE   E0           MOVX    A,@DPTR
   \   0002AF   68           XRL     A,R0
   \   0002B0   7003         JNZ     ??rpl_process_dio_14
   \   0002B2   A3           INC     DPTR
   \   0002B3   E0           MOVX    A,@DPTR
   \   0002B4   69           XRL     A,R1
   \                     ??rpl_process_dio_14:
   \   0002B5   7028         JNZ     ??rpl_process_dio_15
   1200              if(dio->rank != INFINITE_RANK) {
   \   0002B7   EE           MOV     A,R6
   \   0002B8   2412         ADD     A,#0x12
   \   0002BA   F582         MOV     DPL,A
   \   0002BC   EF           MOV     A,R7
   \   0002BD   3400         ADDC    A,#0x0
   \   0002BF   F583         MOV     DPH,A
   \   0002C1   E0           MOVX    A,@DPTR
   \   0002C2   64FF         XRL     A,#0xff
   \   0002C4   7004         JNZ     ??rpl_process_dio_16
   \   0002C6   A3           INC     DPTR
   \   0002C7   E0           MOVX    A,@DPTR
   \   0002C8   64FF         XRL     A,#0xff
   \                     ??rpl_process_dio_16:
   \   0002CA   6010         JZ      ??rpl_process_dio_17
   1201                instance->dio_counter++;
   \   0002CC   E5..         MOV     A,?V0 + 2
   \   0002CE   2485         ADD     A,#-0x7b
   \   0002D0   F582         MOV     DPL,A
   \   0002D2   E5..         MOV     A,?V0 + 3
   \   0002D4   3400         ADDC    A,#0x0
   \   0002D6   F583         MOV     DPH,A
   \   0002D8   E0           MOVX    A,@DPTR
   \   0002D9   2401         ADD     A,#0x1
   \   0002DB   F0           MOVX    @DPTR,A
   1202              }
   1203              return;
   \                     ??rpl_process_dio_17:
   \   0002DC   02....       LJMP    ??rpl_process_dio_0 & 0xFFFF
   1204            }
   1205          
   1206            /*
   1207             * At this point, we know that this DIO pertains to a DAG that
   1208             * we are already part of. We consider the sender of the DIO to be
   1209             * a candidate parent, and let rpl_process_parent_event decide
   1210             * whether to keep it in the set.
   1211             */
   1212          
   1213            p = rpl_find_parent(dag, from);
   \                     ??rpl_process_dio_15:
   \   0002DF                ; Setup parameters for call to function rpl_find_parent
   \   0002DF   AC..         MOV     R4,?V0 + 12
   \   0002E1   AD..         MOV     R5,?V0 + 13
   \   0002E3   AA..         MOV     R2,?V0 + 0
   \   0002E5   AB..         MOV     R3,?V0 + 1
   \   0002E7   12....       LCALL   ??rpl_find_parent?relay
   \   0002EA   8A..         MOV     ?V0 + 6,R2
   \   0002EC   8B..         MOV     ?V0 + 7,R3
   \   0002EE   85....       MOV     ?V0 + 4,?V0 + 6
   \   0002F1   85....       MOV     ?V0 + 5,?V0 + 7
   1214            if(p == NULL) {
   \   0002F4   E5..         MOV     A,?V0 + 4
   \   0002F6   45..         ORL     A,?V0 + 5
   \   0002F8   7078         JNZ     ??rpl_process_dio_18
   1215              previous_dag = find_parent_dag(instance, from);
   \   0002FA                ; Setup parameters for call to function find_parent_dag
   \   0002FA   AC..         MOV     R4,?V0 + 12
   \   0002FC   AD..         MOV     R5,?V0 + 13
   \   0002FE   AA..         MOV     R2,?V0 + 2
   \   000300   AB..         MOV     R3,?V0 + 3
   \   000302   12....       LCALL   ??find_parent_dag?relay
   \   000305   8A..         MOV     ?V0 + 4,R2
   \   000307   8B..         MOV     ?V0 + 5,R3
   \   000309   85....       MOV     ?V0 + 6,?V0 + 4
   \   00030C   85....       MOV     ?V0 + 7,?V0 + 5
   1216              if(previous_dag == NULL) {
   \   00030F   E5..         MOV     A,?V0 + 6
   \   000311   45..         ORL     A,?V0 + 7
   \   000313   702B         JNZ     ??rpl_process_dio_19
   1217                /* Add the DIO sender as a candidate parent. */
   1218                p = rpl_add_parent(dag, dio, from);
   \   000315                ; Setup parameters for call to function rpl_add_parent
   \   000315   78..         MOV     R0,#?V0 + 12
   \   000317   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00031A   EE           MOV     A,R6
   \   00031B   FC           MOV     R4,A
   \   00031C   EF           MOV     A,R7
   \   00031D   FD           MOV     R5,A
   \   00031E   AA..         MOV     R2,?V0 + 0
   \   000320   AB..         MOV     R3,?V0 + 1
   \   000322   12....       LCALL   ??rpl_add_parent?relay
   \   000325   7402         MOV     A,#0x2
   \   000327   12....       LCALL   ?DEALLOC_XSTACK8
   \   00032A   8A..         MOV     ?V0 + 6,R2
   \   00032C   8B..         MOV     ?V0 + 7,R3
   \   00032E   85....       MOV     ?V0 + 4,?V0 + 6
   \   000331   85....       MOV     ?V0 + 5,?V0 + 7
   1219                if(p == NULL) {
   \   000334   E5..         MOV     A,?V0 + 4
   \   000336   45..         ORL     A,?V0 + 5
   \   000338   6003         JZ      $+5
   \   00033A   02....       LJMP    ??rpl_process_dio_20 & 0xFFFF
   1220                  PRINTF("RPL: Failed to add a new parent (");
   1221                  PRINT6ADDR(from);
   1222                  PRINTF(")\n");
   1223                  return;
   \   00033D   02....       LJMP    ??rpl_process_dio_0 & 0xFFFF
   1224                }
   1225                PRINTF("RPL: New candidate parent with rank %u: ", (unsigned)p->rank);
   1226                PRINT6ADDR(from);
   1227                PRINTF("\n");
   1228              } else {
   1229                p = rpl_find_parent(previous_dag, from);
   \                     ??rpl_process_dio_19:
   \   000340                ; Setup parameters for call to function rpl_find_parent
   \   000340   AC..         MOV     R4,?V0 + 12
   \   000342   AD..         MOV     R5,?V0 + 13
   \   000344   AA..         MOV     R2,?V0 + 6
   \   000346   AB..         MOV     R3,?V0 + 7
   \   000348   12....       LCALL   ??rpl_find_parent?relay
   \   00034B   8A..         MOV     ?V0 + 8,R2
   \   00034D   8B..         MOV     ?V0 + 9,R3
   \   00034F   85....       MOV     ?V0 + 4,?V0 + 8
   \   000352   85....       MOV     ?V0 + 5,?V0 + 9
   1230                if(p != NULL) {
   \   000355   E5..         MOV     A,?V0 + 4
   \   000357   45..         ORL     A,?V0 + 5
   \   000359   6078         JZ      ??rpl_process_dio_20
   1231                  rpl_move_parent(previous_dag, dag, p);
   \   00035B                ; Setup parameters for call to function rpl_move_parent
   \   00035B   78..         MOV     R0,#?V0 + 4
   \   00035D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000360   AC..         MOV     R4,?V0 + 0
   \   000362   AD..         MOV     R5,?V0 + 1
   \   000364   AA..         MOV     R2,?V0 + 6
   \   000366   AB..         MOV     R3,?V0 + 7
   \   000368   12....       LCALL   ??rpl_move_parent?relay
   \   00036B   7402         MOV     A,#0x2
   \   00036D   12....       LCALL   ?DEALLOC_XSTACK8
   \   000370   8061         SJMP    ??rpl_process_dio_20
   1232                }
   1233              }
   1234            } else {
   1235              if(p->rank == dio->rank) {
   \                     ??rpl_process_dio_18:
   \   000372   85..82       MOV     DPL,?V0 + 4
   \   000375   85..83       MOV     DPH,?V0 + 5
   \   000378   A3           INC     DPTR
   \   000379   A3           INC     DPTR
   \   00037A   A3           INC     DPTR
   \   00037B   A3           INC     DPTR
   \   00037C   E0           MOVX    A,@DPTR
   \   00037D   F8           MOV     R0,A
   \   00037E   A3           INC     DPTR
   \   00037F   E0           MOVX    A,@DPTR
   \   000380   F9           MOV     R1,A
   \   000381   EE           MOV     A,R6
   \   000382   2412         ADD     A,#0x12
   \   000384   F582         MOV     DPL,A
   \   000386   EF           MOV     A,R7
   \   000387   3400         ADDC    A,#0x0
   \   000389   F583         MOV     DPH,A
   \   00038B   E0           MOVX    A,@DPTR
   \   00038C   68           XRL     A,R0
   \   00038D   7003         JNZ     ??rpl_process_dio_21
   \   00038F   A3           INC     DPTR
   \   000390   E0           MOVX    A,@DPTR
   \   000391   69           XRL     A,R1
   \                     ??rpl_process_dio_21:
   \   000392   7021         JNZ     ??rpl_process_dio_22
   1236                PRINTF("RPL: Received consistent DIO\n");
   1237                if(dag->joined) {
   \   000394   E5..         MOV     A,?V0 + 0
   \   000396   2416         ADD     A,#0x16
   \   000398   F582         MOV     DPL,A
   \   00039A   E5..         MOV     A,?V0 + 1
   \   00039C   3400         ADDC    A,#0x0
   \   00039E   F583         MOV     DPH,A
   \   0003A0   E0           MOVX    A,@DPTR
   \   0003A1   6030         JZ      ??rpl_process_dio_20
   1238                  instance->dio_counter++;
   \   0003A3   E5..         MOV     A,?V0 + 2
   \   0003A5   2485         ADD     A,#-0x7b
   \   0003A7   F582         MOV     DPL,A
   \   0003A9   E5..         MOV     A,?V0 + 3
   \   0003AB   3400         ADDC    A,#0x0
   \   0003AD   F583         MOV     DPH,A
   \   0003AF   E0           MOVX    A,@DPTR
   \   0003B0   2401         ADD     A,#0x1
   \   0003B2   F0           MOVX    @DPTR,A
   \   0003B3   801E         SJMP    ??rpl_process_dio_20
   1239                }
   1240              } else {
   1241                p->rank=dio->rank;
   \                     ??rpl_process_dio_22:
   \   0003B5   EE           MOV     A,R6
   \   0003B6   2412         ADD     A,#0x12
   \   0003B8   F582         MOV     DPL,A
   \   0003BA   EF           MOV     A,R7
   \   0003BB   3400         ADDC    A,#0x0
   \   0003BD   F583         MOV     DPH,A
   \   0003BF   E0           MOVX    A,@DPTR
   \   0003C0   F8           MOV     R0,A
   \   0003C1   A3           INC     DPTR
   \   0003C2   E0           MOVX    A,@DPTR
   \   0003C3   F9           MOV     R1,A
   \   0003C4   85..82       MOV     DPL,?V0 + 4
   \   0003C7   85..83       MOV     DPH,?V0 + 5
   \   0003CA   A3           INC     DPTR
   \   0003CB   A3           INC     DPTR
   \   0003CC   A3           INC     DPTR
   \   0003CD   A3           INC     DPTR
   \   0003CE   E8           MOV     A,R0
   \   0003CF   F0           MOVX    @DPTR,A
   \   0003D0   A3           INC     DPTR
   \   0003D1   E9           MOV     A,R1
   \   0003D2   F0           MOVX    @DPTR,A
   1242              }
   1243            }
   1244          
   1245            PRINTF("RPL: preferred DAG ");
   1246            PRINT6ADDR(&instance->current_dag->dag_id);
   1247            PRINTF(", rank %u, min_rank %u, ",
   1248          	 instance->current_dag->rank, instance->current_dag->min_rank);
   1249            PRINTF("parent rank %u, parent etx %u, link metric %u, instance etx %u\n",
   1250          	 p->rank, -1/*p->mc.obj.etx*/, p->link_metric, instance->mc.obj.etx);
   1251          
   1252            /* We have allocated a candidate parent; process the DIO further. */
   1253          
   1254          #if RPL_DAG_MC != RPL_DAG_MC_NONE
   1255            memcpy(&p->mc, &dio->mc, sizeof(p->mc));
   1256          #endif /* RPL_DAG_MC != RPL_DAG_MC_NONE */
   1257            if(rpl_process_parent_event(instance, p) == 0) {
   \                     ??rpl_process_dio_20:
   \   0003D3                ; Setup parameters for call to function rpl_process_parent_event
   \   0003D3   AC..         MOV     R4,?V0 + 4
   \   0003D5   AD..         MOV     R5,?V0 + 5
   \   0003D7   AA..         MOV     R2,?V0 + 2
   \   0003D9   AB..         MOV     R3,?V0 + 3
   \   0003DB   12....       LCALL   ??rpl_process_parent_event?relay
   \   0003DE   8A..         MOV     ?V0 + 6,R2
   \   0003E0   8B..         MOV     ?V0 + 7,R3
   \   0003E2   E5..         MOV     A,?V0 + 6
   \   0003E4   45..         ORL     A,?V0 + 7
   \   0003E6   7003         JNZ     $+5
   \   0003E8   02....       LJMP    ??rpl_process_dio_0 & 0xFFFF
   1258              PRINTF("RPL: The candidate parent is rejected\n");
   1259              return;
   1260            }
   1261          
   1262            /* We don't use route control, so we can have only one official parent. */
   1263            if(dag->joined && p == dag->preferred_parent) {
   \   0003EB   E5..         MOV     A,?V0 + 0
   \   0003ED   2416         ADD     A,#0x16
   \   0003EF   F582         MOV     DPL,A
   \   0003F1   E5..         MOV     A,?V0 + 1
   \   0003F3   3400         ADDC    A,#0x0
   \   0003F5   F583         MOV     DPH,A
   \   0003F7   E0           MOVX    A,@DPTR
   \   0003F8   7003         JNZ     $+5
   \   0003FA   02....       LJMP    ??rpl_process_dio_23 & 0xFFFF
   \   0003FD   E5..         MOV     A,?V0 + 0
   \   0003FF   2417         ADD     A,#0x17
   \   000401   F582         MOV     DPL,A
   \   000403   E5..         MOV     A,?V0 + 1
   \   000405   3400         ADDC    A,#0x0
   \   000407   F583         MOV     DPH,A
   \   000409   E0           MOVX    A,@DPTR
   \   00040A   F8           MOV     R0,A
   \   00040B   A3           INC     DPTR
   \   00040C   E0           MOVX    A,@DPTR
   \   00040D   F9           MOV     R1,A
   \   00040E   E5..         MOV     A,?V0 + 4
   \   000410   68           XRL     A,R0
   \   000411   7003         JNZ     ??rpl_process_dio_24
   \   000413   E5..         MOV     A,?V0 + 5
   \   000415   69           XRL     A,R1
   \                     ??rpl_process_dio_24:
   \   000416   6003         JZ      $+5
   \   000418   02....       LJMP    ??rpl_process_dio_23 & 0xFFFF
   1264              if(should_send_dao(instance, dio, p)) {
   \   00041B                ; Setup parameters for call to function should_send_dao
   \   00041B   78..         MOV     R0,#?V0 + 4
   \   00041D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000420   EE           MOV     A,R6
   \   000421   FC           MOV     R4,A
   \   000422   EF           MOV     A,R7
   \   000423   FD           MOV     R5,A
   \   000424   AA..         MOV     R2,?V0 + 2
   \   000426   AB..         MOV     R3,?V0 + 3
   \   000428   12....       LCALL   ??should_send_dao?relay
   \   00042B   7402         MOV     A,#0x2
   \   00042D   12....       LCALL   ?DEALLOC_XSTACK8
   \   000430   8A..         MOV     ?V0 + 0,R2
   \   000432   8B..         MOV     ?V0 + 1,R3
   \   000434   E5..         MOV     A,?V0 + 0
   \   000436   45..         ORL     A,?V0 + 1
   \   000438   604D         JZ      ??rpl_process_dio_25
   1265                RPL_LOLLIPOP_INCREMENT(instance->dtsn_out);
   \   00043A   E5..         MOV     A,?V0 + 2
   \   00043C   247D         ADD     A,#0x7d
   \   00043E   F582         MOV     DPL,A
   \   000440   E5..         MOV     A,?V0 + 3
   \   000442   3400         ADDC    A,#0x0
   \   000444   F583         MOV     DPH,A
   \   000446   E0           MOVX    A,@DPTR
   \   000447   C3           CLR     C
   \   000448   9480         SUBB    A,#-0x80
   \   00044A   4012         JC      ??rpl_process_dio_26
   \   00044C   E5..         MOV     A,?V0 + 2
   \   00044E   247D         ADD     A,#0x7d
   \   000450   F582         MOV     DPL,A
   \   000452   E5..         MOV     A,?V0 + 3
   \   000454   3400         ADDC    A,#0x0
   \   000456   F583         MOV     DPH,A
   \   000458   E0           MOVX    A,@DPTR
   \   000459   2401         ADD     A,#0x1
   \   00045B   F0           MOVX    @DPTR,A
   \   00045C   8022         SJMP    ??rpl_process_dio_27
   \                     ??rpl_process_dio_26:
   \   00045E   E5..         MOV     A,?V0 + 2
   \   000460   247D         ADD     A,#0x7d
   \   000462   F582         MOV     DPL,A
   \   000464   E5..         MOV     A,?V0 + 3
   \   000466   3400         ADDC    A,#0x0
   \   000468   F583         MOV     DPH,A
   \   00046A   E0           MOVX    A,@DPTR
   \   00046B   2401         ADD     A,#0x1
   \   00046D   547F         ANL     A,#0x7f
   \   00046F   C0E0         PUSH    A
   \   000471   E5..         MOV     A,?V0 + 2
   \   000473   247D         ADD     A,#0x7d
   \   000475   F582         MOV     DPL,A
   \   000477   E5..         MOV     A,?V0 + 3
   \   000479   3400         ADDC    A,#0x0
   \   00047B   F583         MOV     DPH,A
   \   00047D   D0E0         POP     A
   \   00047F   F0           MOVX    @DPTR,A
   1266                rpl_schedule_dao(instance);
   \                     ??rpl_process_dio_27:
   \   000480                ; Setup parameters for call to function rpl_schedule_dao
   \   000480   AA..         MOV     R2,?V0 + 2
   \   000482   AB..         MOV     R3,?V0 + 3
   \   000484   12....       LCALL   ??rpl_schedule_dao?relay
   1267              }
   1268              /* We received a new DIO from our preferred parent.
   1269               * Call uip_ds6_defrt_add to set a fresh value for the lifetime counter */
   1270              uip_ds6_defrt_add(from, RPL_LIFETIME(instance, instance->default_lifetime));
   \                     ??rpl_process_dio_25:
   \   000487                ; Setup parameters for call to function uip_ds6_defrt_add
   \   000487   E5..         MOV     A,?V0 + 2
   \   000489   248A         ADD     A,#-0x76
   \   00048B   F582         MOV     DPL,A
   \   00048D   E5..         MOV     A,?V0 + 3
   \   00048F   3400         ADDC    A,#0x0
   \   000491   F583         MOV     DPH,A
   \   000493   E0           MOVX    A,@DPTR
   \   000494   F5..         MOV     ?V0 + 8,A
   \   000496   A3           INC     DPTR
   \   000497   E0           MOVX    A,@DPTR
   \   000498   F5..         MOV     ?V0 + 9,A
   \   00049A   E4           CLR     A
   \   00049B   F5..         MOV     ?V0 + 10,A
   \   00049D   F5..         MOV     ?V0 + 11,A
   \   00049F   E5..         MOV     A,?V0 + 2
   \   0004A1   2482         ADD     A,#-0x7e
   \   0004A3   F582         MOV     DPL,A
   \   0004A5   E5..         MOV     A,?V0 + 3
   \   0004A7   3400         ADDC    A,#0x0
   \   0004A9   F583         MOV     DPH,A
   \   0004AB   E0           MOVX    A,@DPTR
   \   0004AC   F5..         MOV     ?V0 + 0,A
   \   0004AE   E4           CLR     A
   \   0004AF   F5..         MOV     ?V0 + 1,A
   \   0004B1   F5..         MOV     ?V0 + 2,A
   \   0004B3   F5..         MOV     ?V0 + 3,A
   \   0004B5   78..         MOV     R0,#?V0 + 8
   \   0004B7   79..         MOV     R1,#?V0 + 0
   \   0004B9   12....       LCALL   ?L_MUL
   \   0004BC   78..         MOV     R0,#?V0 + 8
   \   0004BE   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   0004C1   AA..         MOV     R2,?V0 + 12
   \   0004C3   AB..         MOV     R3,?V0 + 13
   \   0004C5   12....       LCALL   ??uip_ds6_defrt_add?relay
   \   0004C8   7404         MOV     A,#0x4
   \   0004CA   12....       LCALL   ?DEALLOC_XSTACK8
   1271            }
   1272            p->dtsn = dio->dtsn;
   \                     ??rpl_process_dio_23:
   \   0004CD   EE           MOV     A,R6
   \   0004CE   2419         ADD     A,#0x19
   \   0004D0   F582         MOV     DPL,A
   \   0004D2   EF           MOV     A,R7
   \   0004D3   3400         ADDC    A,#0x0
   \   0004D5   F583         MOV     DPH,A
   \   0004D7   E0           MOVX    A,@DPTR
   \   0004D8   85..82       MOV     DPL,?V0 + 4
   \   0004DB   85..83       MOV     DPH,?V0 + 5
   \   0004DE   A3           INC     DPTR
   \   0004DF   A3           INC     DPTR
   \   0004E0   A3           INC     DPTR
   \   0004E1   A3           INC     DPTR
   \   0004E2   A3           INC     DPTR
   \   0004E3   A3           INC     DPTR
   \   0004E4   A3           INC     DPTR
   \   0004E5   A3           INC     DPTR
   \   0004E6   F0           MOVX    @DPTR,A
   1273          }
   \                     ??rpl_process_dio_0:
   \   0004E7   7F0E         MOV     R7,#0xe
   \   0004E9   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     __Constant_0:
   \   000000                DS 4
   \   000004                REQUIRE `?<Initializer for __Constant_0>`
   \   000004                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for objective_functions>`:
   \   000000   ....         DW rpl_mrhof

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for rpl_parents_struct>`:
   \   000000   0000         DW 0
   \   000002   0A00         DW 10
   \   000004   0000         DW 0H
   \   000006   ....         DW _rpl_parents_mem

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for rpl_parents>`:
   \   000000   ....         DW rpl_parents_struct

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for __Constant_0>`:
   \   000000   00000000     DD 0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_dag_init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_dag_init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_get_parent_rank?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_get_parent_rank

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_get_parent_link_metric?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_get_parent_link_metric

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_get_parent_ipaddr?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_get_parent_ipaddr

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_set_preferred_parent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_set_preferred_parent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??lollipop_greater_than?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    lollipop_greater_than

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??remove_parents?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    remove_parents

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??nullify_parents?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    nullify_parents

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??should_send_dao?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    should_send_dao

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??acceptable_rank?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    acceptable_rank

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??get_dag?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    get_dag

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_set_root?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_set_root

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_repair_root?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_repair_root

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??set_ip_from_prefix?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    set_ip_from_prefix

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??check_prefix?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    check_prefix

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_set_prefix?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_set_prefix

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_set_default_route?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_set_default_route

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_alloc_instance?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_alloc_instance

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_alloc_dag?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_alloc_dag

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_set_default_instance?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_set_default_instance

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_free_instance?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_free_instance

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_free_dag?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_free_dag

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_add_parent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_add_parent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??find_parent_any_dag_any_instance?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    find_parent_any_dag_any_instance

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_find_parent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_find_parent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??find_parent_dag?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    find_parent_dag

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_find_parent_any_dag?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_find_parent_any_dag

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_select_dag?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_select_dag

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_select_parent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_select_parent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_remove_parent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_remove_parent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_nullify_parent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_nullify_parent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_move_parent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_move_parent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_get_any_dag?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_get_any_dag

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_get_instance?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_get_instance

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_find_of?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_find_of

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_join_instance?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_join_instance

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_add_dag?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_add_dag

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??global_repair?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    global_repair

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_local_repair?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_local_repair

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_recalculate_ranks?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_recalculate_ranks

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_process_parent_event?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_process_parent_event

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rpl_process_dio?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rpl_process_dio
   1274          /*---------------------------------------------------------------------------*/
   1275          #endif /* UIP_CONF_IPV6 */

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       0      0     30  acceptable_rank
       0      0     70  check_prefix
                          0 0 30 -> memcmp
                          0 0 28 -> set_ip_from_prefix
                          0 0 32 -> uip_ds6_addr_add
                          0 0 28 -> uip_ds6_addr_lookup
                          0 0 28 -> uip_ds6_addr_rm
       0      0     20  find_parent_any_dag_any_instance
                          0 0 10 -> nbr_table_get_from_lladdr
                          0 0 10 -> uip_ds6_nbr_get_ll
                          0 0 10 -> uip_ds6_nbr_lookup
       0      0     32  find_parent_dag
                          0 0 10 -> find_parent_any_dag_any_instance
       0      0     42  get_dag
                          0 0 20 -> memcmp
                          0 0 18 -> rpl_get_instance
       1      0     38  global_repair
                          0 0 12 -> remove_parents
                          0 0 14 -> rpl_add_parent
                          0 0 12 -> rpl_process_parent_event
       0      0     22  lollipop_greater_than
       0      0     24  nullify_parents
                          0 0 14 -> nbr_table_head
                          0 0 14 -> nbr_table_next
                          0 0 14 -> rpl_nullify_parent
       0      0     26  remove_parents
                          0 0 14 -> nbr_table_head
                          0 0 14 -> nbr_table_next
                          0 0 14 -> rpl_remove_parent
       1      0     42  rpl_add_dag
                          0 0 18 -> find_parent_dag
                          0 0 20 -> memcpy
                          0 0 20 -> rpl_add_parent
                          0 0 18 -> rpl_alloc_dag
                          0 0 18 -> rpl_find_of
                          0 0 18 -> rpl_find_parent
                          0 0 20 -> rpl_move_parent
                          0 0 18 -> rpl_process_parent_event
                          0 0 18 -> rpl_remove_parent
                          0 0 18 -> rpl_set_preferred_parent
       1      0     38  rpl_add_parent
                          0 0 14 -> nbr_table_add_lladdr
                          0 0 14 -> uip_ds6_nbr_lladdr_from_ipaddr
       0      0     36  rpl_alloc_dag
                          0 0 16 -> memset
                          0 0 14 -> rpl_alloc_instance
                          0 0 14 -> rpl_free_instance
                          0 0 14 -> rpl_get_instance
       1      0     28  rpl_alloc_instance
                          0 0 14 -> memset
       2      0      0  rpl_dag_init
                          2 0  0 -> nbr_table_register
       0      0     29  rpl_find_of
       0      0     32  rpl_find_parent
                          0 0 10 -> find_parent_any_dag_any_instance
       0      0     10  rpl_find_parent_any_dag
                          0 0 10 -> find_parent_any_dag_any_instance
       0      0     25  rpl_free_dag
                          0 0  9 -> check_prefix
                          0 0  9 -> remove_parents
                          0 0  9 -> rpl_remove_routes
       0      0     26  rpl_free_instance
                          0 0 12 -> ctimer_stop
                          0 0 12 -> rpl_free_dag
                          0 0 12 -> rpl_set_default_route
       2      0      0  rpl_get_any_dag
       2      0     22  rpl_get_instance
       0      0     28  rpl_get_parent_ipaddr
                          0 0 10 -> nbr_table_get_lladdr
                          0 0 10 -> uip_ds6_nbr_ipaddr_from_lladdr
       0      0     10  rpl_get_parent_link_metric
                          0 0 10 -> nbr_table_get_from_lladdr
       0      0     10  rpl_get_parent_rank
                          0 0 10 -> nbr_table_get_from_lladdr
       1      0     44  rpl_join_instance
                          0 0 20 -> check_prefix
                          0 0 22 -> memcpy
                          0 0 22 -> rpl_add_parent
                          0 0 20 -> rpl_alloc_dag
                          0 0 20 -> rpl_find_of
                          0 0 20 -> rpl_remove_parent
                          0 0 20 -> rpl_reset_dio_timer
                          0 0 20 -> rpl_schedule_dao
                          0 0 20 -> rpl_set_default_route
                          0 0 20 -> rpl_set_preferred_parent
       0      0     24  rpl_local_repair
                          0 0 10 -> nullify_parents
                          0 0 10 -> rpl_reset_dio_timer
       0      0     36  rpl_move_parent
                          0 0 12 -> list_add
                          0 0 12 -> list_remove
                          0 0 12 -> rpl_get_parent_ipaddr
                          0 0 12 -> rpl_remove_routes_by_nexthop
                          0 0 12 -> rpl_set_preferred_parent
                          0 0 12 -> uip_ds6_defrt_rm
       0      0     24  rpl_nullify_parent
                          0 0 10 -> dao_output
                          0 0 10 -> rpl_set_preferred_parent
                          0 0 10 -> uip_ds6_defrt_rm
       2      0     26  rpl_process_dio
                          0 0 22 -> find_parent_dag
                          0 0 22 -> get_dag
                          0 0 24 -> global_repair
                          0 0 22 -> lollipop_greater_than
                          0 0 22 -> rpl_add_dag
                          0 0 24 -> rpl_add_parent
                          0 0 22 -> rpl_find_parent
                          0 0 22 -> rpl_get_instance
                          0 0 22 -> rpl_join_instance
                          0 0 24 -> rpl_move_parent
                          0 0 22 -> rpl_process_parent_event
                          0 0 22 -> rpl_reset_dio_timer
                          0 0 22 -> rpl_schedule_dao
                          0 0 24 -> rpl_set_prefix
                          0 0 24 -> should_send_dao
                          0 0 26 -> uip_ds6_defrt_add
       0      0     36  rpl_process_parent_event
                          0 0 14 -> acceptable_rank
                          0 0 14 -> rpl_local_repair
                          0 0 14 -> rpl_nullify_parent
                          0 0 14 -> rpl_select_dag
       0      0     10  rpl_recalculate_ranks
                          0 0 10 -> nbr_table_head
                          0 0 10 -> nbr_table_next
                          0 0 10 -> rpl_process_parent_event
       0      0     29  rpl_remove_parent
                          0 0  9 -> nbr_table_remove
                          0 0  9 -> rpl_nullify_parent
       1      0     10  rpl_repair_root
                          0 0 10 -> rpl_get_instance
                          0 0 10 -> rpl_reset_dio_timer
       2      0     32  rpl_select_dag
                          0 0 18 -> acceptable_rank
                          0 0 18 -> check_prefix
                          0 0 18 -> dao_output
                          0 0 18 -> rpl_get_parent_ipaddr
                          0 0 18 -> rpl_remove_routes
                          0 0 18 -> rpl_reset_dio_timer
                          0 0 18 -> rpl_schedule_dao
                          0 0 18 -> rpl_select_parent
                          0 0 18 -> rpl_set_default_route
                          0 0 18 -> rpl_set_preferred_parent
       0      0     32  rpl_select_parent
                          0 0 14 -> nbr_table_head
                          0 0 14 -> nbr_table_next
                          0 0 14 -> rpl_set_preferred_parent
       2      0      0  rpl_set_default_instance
       0      0     44  rpl_set_default_route
                          0 0 24 -> uip_ds6_defrt_add
                          0 0 20 -> uip_ds6_defrt_rm
       0      0     30  rpl_set_preferred_parent
                          0 0 10 -> nbr_table_lock
                          0 0 10 -> nbr_table_unlock
       1      0     64  rpl_set_prefix
                          0 0 38 -> check_prefix
                          0 0 40 -> memcpy
                          0 0 40 -> memset
       1      0     18  rpl_set_root
                          0 0 16 -> get_dag
                          0 0 18 -> memcpy
                          0 0 16 -> rpl_alloc_dag
                          0 0 16 -> rpl_free_dag
                          0 0 16 -> rpl_remove_routes
                          0 0 16 -> rpl_reset_dio_timer
                          0 0 16 -> rpl_set_preferred_parent
       0      0     42  set_ip_from_prefix
                          0 0 14 -> memcpy
                          0 0 14 -> memset
                          0 0 12 -> uip_ds6_set_addr_iid
       0      0     34  should_send_dao
                          0 0 10 -> lollipop_greater_than


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Initializer for __Constant_0>
       2  ?<Initializer for objective_functions>
       2  ?<Initializer for rpl_parents>
       8  ?<Initializer for rpl_parents_struct>
       6  ??acceptable_rank?relay
       6  ??check_prefix?relay
       6  ??find_parent_any_dag_any_instance?relay
       6  ??find_parent_dag?relay
       6  ??get_dag?relay
       6  ??global_repair?relay
       6  ??lollipop_greater_than?relay
       6  ??nullify_parents?relay
       6  ??remove_parents?relay
       6  ??rpl_add_dag?relay
       6  ??rpl_add_parent?relay
       6  ??rpl_alloc_dag?relay
       6  ??rpl_alloc_instance?relay
       6  ??rpl_dag_init?relay
       6  ??rpl_find_of?relay
       6  ??rpl_find_parent?relay
       6  ??rpl_find_parent_any_dag?relay
       6  ??rpl_free_dag?relay
       6  ??rpl_free_instance?relay
       6  ??rpl_get_any_dag?relay
       6  ??rpl_get_instance?relay
       6  ??rpl_get_parent_ipaddr?relay
       6  ??rpl_get_parent_link_metric?relay
       6  ??rpl_get_parent_rank?relay
       6  ??rpl_join_instance?relay
       6  ??rpl_local_repair?relay
       6  ??rpl_move_parent?relay
       6  ??rpl_nullify_parent?relay
       6  ??rpl_process_dio?relay
       6  ??rpl_process_parent_event?relay
       6  ??rpl_recalculate_ranks?relay
       6  ??rpl_remove_parent?relay
       6  ??rpl_repair_root?relay
       6  ??rpl_select_dag?relay
       6  ??rpl_select_parent?relay
       6  ??rpl_set_default_instance?relay
       6  ??rpl_set_default_route?relay
       6  ??rpl_set_preferred_parent?relay
       6  ??rpl_set_prefix?relay
       6  ??rpl_set_root?relay
       6  ??set_ip_from_prefix?relay
       6  ??should_send_dao?relay
       4  __Constant_0
      40  _rpl_parents_mem
     209  acceptable_rank
     266  check_prefix
       2  default_instance
      43  find_parent_any_dag_any_instance
      46  find_parent_dag
     182  get_dag
     431  global_repair
     174  instance_table
     154  lollipop_greater_than
     112  nullify_parents
       2  objective_functions
     112  remove_parents
     852  rpl_add_dag
     166  rpl_add_parent
     217  rpl_alloc_dag
     136  rpl_alloc_instance
      26  rpl_dag_init
     128  rpl_find_of
      56  rpl_find_parent
      85  rpl_find_parent_any_dag
     101  rpl_free_dag
     157  rpl_free_instance
     174  rpl_get_any_dag
     151  rpl_get_instance
      36  rpl_get_parent_ipaddr
      58  rpl_get_parent_link_metric
      56  rpl_get_parent_rank
     950  rpl_join_instance
     206  rpl_local_repair
     298  rpl_move_parent
     220  rpl_nullify_parent
       2  rpl_parents
       8  rpl_parents_struct
    1260  rpl_process_dio
     160  rpl_process_parent_event
     178  rpl_recalculate_ranks
      36  rpl_remove_parent
     285  rpl_repair_root
    1190  rpl_select_dag
     187  rpl_select_parent
      19  rpl_set_default_instance
     225  rpl_set_default_route
     109  rpl_set_preferred_parent
     269  rpl_set_prefix
     675  rpl_set_root
     111  set_ip_from_prefix
     139  should_send_dao

 
 10 471 bytes in segment BANKED_CODE
    252 bytes in segment BANK_RELAYS
     16 bytes in segment XDATA_I
     16 bytes in segment XDATA_ID
    216 bytes in segment XDATA_Z
 
 10 735 bytes of CODE  memory (+ 4 bytes shared)
    228 bytes of XDATA memory (+ 4 bytes shared)

Errors: none
Warnings: none
